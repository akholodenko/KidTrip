{"version":3,"sources":["routes.js","utils/routeUtils.js","utils/styleUtils.js","components/homepage/header.js","components/homepage/valueProp/valuePropSection.js","components/homepage/valueProp.js","graphql/userQueries.js","utils/userUtils.js","constants.js","components/homepage/signup.js","components/homePage.js","graphql/cityQueries.js","components/dashboard/cityFormField.js","graphql/venueQueries.js","components/dashboard/venueTypeFormField.js","graphql/venueMutations.js","components/dashboard/addVenueDialog.js","utils/validationUtils.js","components/dashboard/venueTypeTabs.js","utils/venueUtils.js","components/dashboard/venueListItem.js","components/dashboard/venueList.js","components/dashboard/feedItem.js","utils/dateUtils.js","components/dashboard/feedConfigurator.js","components/dashboard/feed.js","components/dashboardPage.js","components/venue/header.js","components/venue/similarVenues.js","components/venue/locationInfo.js","components/venue/favoriteButton.js","components/venuePage.js","theme.js","graphql/userMutations.js","components/shared/loginDialog.js","components/shared/loginButton.js","layout/appBar.js","layout/appBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["home","dashboard","dashboardPath","section","venue","venuePath","venueSlug","validatePageSection","options","fallback","Object","values","includes","isHomepage","location","pathname","Routes","headerStyles","imageUrl","height","container","display","flexWrap","flexDirection","justifyContent","alignItems","background","backgroundSize","headerText","color","headerStyle","style","Typography","variant","props","title","icon","text","iconStyle","width","className","discoverContent","trackContent","shareContent","CURRENT_USER_QUERY","gql","isUserLoggedIn","localStorage","getItem","setUserInfo","token","user","setItem","JSON","stringify","onClick","event","Event","window","dispatchEvent","openSignUpDialog","GET_CITIES","position","input","border","outline","padding","fontSize","suggestionsContainer","top","left","suggestionItem","formControl","minWidth","marginTop","marginBottom","withApollo","client","onCitySelected","isMulti","fieldLabel","placeholder","useState","query","setQuery","selectedOption","setSelectedOption","setOptions","useEffect","length","variables","limit","getSuggestions","then","data","cities","map","city","value","id","label","name","state","FormControl","InputLabel","shrink","htmlFor","defaultValue","onChange","option","onInputChange","isClearable","menuIsOpen","escapeClearsValue","VenueDetails","VenueStats","GET_VENUE_BY_SLUG","GET_VENUES_FOR_CURRENT_USER","GET_VENUE_TYPES","GET_SIMILAR_VENUES_IN_RADIUS","GET_FEED_VENUES","onVenueTypeSelected","loading","error","message","venueTypes","Select","target","inputProps","venueType","MenuItem","key","CREATE_VENUE_MUTATION","CREATE_USER_VENUE_FAVORITE_MUTATION","DELETE_USER_VENUE_FAVORITE_MUTATION","appBar","margin","body","venueStub","type","streetAddress","zipcode","lat","lng","open","toggleDialog","onCreatedVenue","useMutation","onError","console","log","onCompleted","refetchQueries","awaitRefetchQueries","addVenue","newVenue","setNewVenue","userActionText","setUserActionText","handleChange","Dialog","onClose","fullScreen","aria-labelledby","AppBar","Toolbar","IconButton","edge","aria-label","DialogTitle","DialogContent","DialogContentText","TextField","venueTypeId","autoComplete","customInput","format","Button","valid","isNaN","parseInt","indexOf","validateVenue","typeId","cityId","response","withStyles","boxShadow","float","tabIndicator","backgroundColor","classes","venues","venueTypeFilter","onSetVenueTypeFilter","Fragment","Tabs","e","indicator","orientation","scrollButtons","Tab","results","x","push","keys","getVenueTypes","sort","index","venueMapLink","address","encodeURIComponent","venueCityState","borderRadius","marginRight","fontWeight","lineHeight","textDecoration","marginLeft","textTransform","textAlign","showDeleteFavoriteButton","onDeleteFavoriteCallback","update","store","deleteUserVenueFavorite","updateFavoriteStats","deleteFavorite","venueStats","readQuery","slug","venueBySlug","writeQuery","venueId","to","cssClass","venueIconComponent","Restaurant","Museum","Pets","DirectionsWalk","Nature","NaturePeople","DirectionsRun","NearMe","venueIcon","href","rel","currentDashboardSection","isFavoritesDashboardSection","externalTriggerVenueRefresh","setVenueTypeFilter","setVenues","triggerVenueRefresh","setTriggerVenueRefresh","me","favoriteVenues","onDeleteFavorite","filter","borderBottom","timestamp","Date","diffSeconds","getTime","Math","round","toLocaleDateString","year","month","day","sinceCreated","createdAt","creator","firstName","lastName","FeedConfigurator","onFeedConfigurationUpdated","maxWidth","feedVenues","setFeedVenues","cityIds","venueTypeIds","first","feedConfiguration","setFeedConfiguration","newFeedConfiguration","join","DASHBOARD_SECTION","FEED","FOLLOWED_DESTINATIONS","MY_DESTINATIONS","FAVORITES","flexGrow","cursor","letterSpacing","match","params","dialogOpen","setDialogOpen","setExternalTriggerVenueRefresh","renderDashboardSection","dashboardSection","Add","image","venueHeaderImage","similarVenues","setSimilarVenues","radius","LocationInfo","separator","venueAddress","favoriteByCurrentUser","onUpdateFavoritesStats","createUserVenueFavorite","addFavorite","preventDefault","pageStyle","sectionHeader","columnWrapper","mainColumn","sideColumm","setVenue","venueTypeName","setVenueTypeName","venuePrimaryTypeName","favorites","thousandSeparator","displayType","pluralize","description","createMuiTheme","palette","primary","main","blue","default","typography","useNextVariants","WrappedComponent","SIGNUP_MUTATION","LOGIN_MUTATION","LoginDialog","login","undefined","email","password","errorMessage","_update","cache","info","a","async","writeData","currentUser","_confirm","signup","_saveUserData","document","_error","graphQLErrors","setState","extensions","exception","errors","prevProps","this","fullWidth","dialogMainError","dialogMainContent","DialogActions","mutation","Component","withRouter","LoginButton","renderUserInfo","callback","addEventListener","withCurrentUser","compose","graphql","ButtonAppBar","anchorEl","toggleMenu","currentTarget","root","logoText","grow","loginButton","menuWrapper","menuButton","Boolean","component","RouterLink","removeItem","history","styles","nonHomepageStyles","borderBottomColor","blueGrey","currentStyles","AppBarWithStyles","App","theme","CssBaseline","appBarSpacer","exact","path","HomePage","DashboardPage","VenuePage","fontFamily","hostname","InMemoryCache","defaultState","userInfo","parse","__typename","getUserInfoFromStorage","stateLink","withClientState","defaults","resolvers","Mutation","updateUserInfo","_","httpLink","HttpLink","uri","process","credentials","headers","authorization","ApolloClient","link","ApolloLink","from","networkError","locations","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7182bc64.chunk.js","sourcesContent":["export default {\n  home: '/',\n  dashboard: '/dashboard/:section?',\n  dashboardPath: section => `/dashboard/${section}`,\n  venue: '/venue/:venueSlug',\n  venuePath: venueSlug => `/venue/${venueSlug}`,\n  validatePageSection: (section, options, fallback) =>\n    Object.values(options).includes(section) ? section : fallback\n}\n","import Routes from '../routes'\n\nexport const isHomepage = location => location.pathname === Routes.home\n","export const headerStyles = (imageUrl, height) => {\n\treturn {\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexWrap: 'wrap',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tbackground: `linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url(/images/${imageUrl}) 50% 50% no-repeat`,\n\t\t\tbackgroundSize: 'cover',\n\t\t\theight: height,\n\t\t},\n\t\theaderText: {\n\t\t\tcolor: '#ffffff',\n\t\t},\n\t}\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport {headerStyles} from '../../utils/styleUtils'\n\nconst headerStyle = headerStyles('family-biking-cmp.jpg', '700px')\n\nexport default () => {\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>Experience</strong> childhood, again.\n\t\t\t</Typography>\n\t\t</div>)\n}","import React from \"react\";\n\nimport \"./valuePropSection.css\";\n\nexport default props => {\n  const { title, icon, text } = props;\n  const iconStyle = {\n    background: `url(/images/icons/${icon}.png) 0% 0% / 60px 60px no-repeat`,\n    width: \"60px\",\n    height: \"60px\"\n  };\n\n  return (\n    <div className=\"value-prop-section\">\n      <div className=\"value-prop-title\">{title}</div>\n      <div className=\"value-prop-icon\" style={iconStyle}></div>\n      <div className=\"value-prop-text\">{text}</div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport ValuePropSection from \"./valueProp/valuePropSection\";\nimport \"./valueProp.css\";\n\nconst discoverContent = {\n  title: \"Discover\",\n  icon: \"discover\",\n  text: `Find out about great local places to visit with your family. From restaurants, to museums, \n\tparks and playgrounds, make the most of your time!`\n};\n\nconst trackContent = {\n  title: \"Track\",\n  icon: \"track\",\n  text: `Had a great time sharing a meal with your family or enjoyed a hiking trail? Jot it down to build your \n\troster of go-to places for your trips.`\n};\n\nconst shareContent = {\n  title: \"Share\",\n  icon: \"share\",\n  text: `Share your favorite places to visit with friends and family, and hear about what others are \n\tenjoying, for great new ideas.`\n};\n\nexport default () => {\n  return (\n    <div className=\"value-prop-container\">\n      <ValuePropSection {...discoverContent} />\n      <ValuePropSection {...trackContent} />\n      <ValuePropSection {...shareContent} />\n    </div>\n  );\n};\n","import gql from \"graphql-tag\"\n\nexport const CURRENT_USER_QUERY = gql`\n\tquery {\n\t\t\tcurrentUser @client {\n\t\t\t\t\tid\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t}\n\t}\n`","import { AUTH_TOKEN, USER_INFO } from '../constants'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'recompose'\nimport { CURRENT_USER_QUERY } from '../graphql/userQueries'\n\nexport const isUserLoggedIn = () => !!localStorage.getItem(AUTH_TOKEN)\n\nexport const logoutUser = () => {\n  localStorage.removeItem(AUTH_TOKEN)\n  localStorage.removeItem(USER_INFO)\n}\n\nexport const setUserInfo = (token, user) => {\n  localStorage.setItem(AUTH_TOKEN, token)\n  localStorage.setItem(USER_INFO, JSON.stringify(user))\n}\n\nexport const getUserInfoFromStorage = () => {\n  const userInfo = localStorage.getItem(USER_INFO)\n\n  if (userInfo) {\n    return JSON.parse(userInfo)\n  } else {\n    return {\n      __typename: 'User',\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null\n    }\n  }\n}\n\nexport const withCurrentUser = WrappedComponent => {\n  return compose(\n    graphql(CURRENT_USER_QUERY, {\n      props: ({ data: { currentUser } }) => ({\n        currentUser\n      })\n    })\n  )(WrappedComponent)\n}\n\nexport const listenForOpenSignUpDialog = callback => {\n  window.addEventListener('openSignUpModal', () => callback())\n}\nexport const openSignUpDialog = () => {\n  const event = new Event('openSignUpModal')\n  window.dispatchEvent(event)\n}\n\nexport const shortName = user => {\n  if (user && user.firstName && user.lastName) {\n    return `${user.firstName} ${user.lastName[0]}.`\n  }\n\n  return ''\n}\n","export const AUTH_TOKEN = 'auth-token'\nexport const USER_INFO = 'user-info'","import React from 'react'\nimport { isUserLoggedIn, openSignUpDialog } from '../../utils/userUtils'\n\nimport '../shared/button.css'\nimport './signup.css'\n\nexport default () => {\n  const renderSignUp = () => {\n    return (\n      <div>\n        <button\n          className=\"form-button homepage-signup-button\"\n          onClick={() => openSignUpDialog()}\n        >\n          Get Started\n        </button>\n      </div>\n    )\n  }\n\n  return <div>{!isUserLoggedIn() && renderSignUp()}</div>\n}\n","import React from 'react'\nimport Header from './homepage/header'\nimport ValueProp from './homepage/valueProp'\nimport SignUpSection from './homepage/signup'\n\nexport default () => {\n  return (\n    <div>\n      <Header />\n      <ValueProp />\n      <SignUpSection />\n    </div>\n  )\n}\n","import gql from \"graphql-tag\"\n\nexport const GET_CITIES = gql`\n\tquery ($limit: Int, $query: String) {\n\t\tcities(first: $limit, query: $query) {\n\t\t\tid\n\t\t\tname\n\t\t\tstate\n\t\t}\n\t}\n`","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { GET_CITIES } from '../../graphql/cityQueries'\nimport { withApollo } from 'react-apollo'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst style = {\n  container: {\n    position: 'relative',\n    width: '500px'\n  },\n  input: {\n    border: '1px solid #ccc',\n    outline: 'none',\n    width: '300px',\n    padding: '20px',\n    fontSize: '17px'\n  },\n  suggestionsContainer: {\n    position: 'absolute',\n    width: '300px',\n    top: 62,\n    left: 0,\n    border: '1px solid #efefef'\n  },\n  suggestionItem: {\n    width: '100%',\n    padding: '10px'\n  },\n  formControl: {\n    minWidth: '500px',\n    marginTop: '16px',\n    marginBottom: '8px',\n    height: '16px'\n  }\n}\n\nconst CityFormField = ({\n  client,\n  onCitySelected,\n  isMulti,\n  fieldLabel,\n  placeholder\n}) => {\n  const [query, setQuery] = useState('')\n  const [selectedOption, setSelectedOption] = useState(isMulti ? [] : {})\n  const [options, setOptions] = useState([])\n\n  useEffect(() => {\n    const getSuggestions = query => {\n      return client.query({\n        query: GET_CITIES,\n        variables: { limit: 10, query }\n      })\n    }\n\n    if (query && query.length >= 3) {\n      getSuggestions(query).then(({ data }) => {\n        setOptions(\n          data.cities.map(city => {\n            return { value: city.id, label: `${city.name}, ${city.state}` }\n          })\n        )\n      })\n    } else {\n      setOptions([])\n    }\n  }, [query, client])\n\n  const handleInputChange = text => {\n    setQuery(text)\n  }\n\n  const handleOptionChange = option => {\n    setSelectedOption(option)\n    onCitySelected(option)\n  }\n\n  const hasOptions = () => options && options.length\n\n  return (\n    <div style={style.container}>\n      <FormControl style={style.formControl}>\n        <InputLabel shrink={true} htmlFor=\"age-simple\">\n          {fieldLabel ? fieldLabel : 'City'}\n        </InputLabel>\n      </FormControl>\n      <Select\n        value={selectedOption}\n        defaultValue={null}\n        onChange={handleOptionChange}\n        options={options}\n        onInputChange={handleInputChange}\n        placeholder={placeholder ? placeholder : 'Type in name of city'}\n        isClearable={true}\n        isMulti={!!isMulti}\n        menuIsOpen={hasOptions()}\n        escapeClearsValue={true}\n      />\n    </div>\n  )\n}\n\nexport default withApollo(CityFormField)\n","import gql from 'graphql-tag'\n\nconst VenueDetails = gql`\n  fragment VenueDetails on Venue {\n    id\n    name\n    slug\n    description\n    streetAddress\n    zipcode\n    city\n    state\n    lat\n    lng\n    venueTypes {\n      id\n      name\n      image\n    }\n  }\n`\n\nconst VenueStats = gql`\n  fragment VenueStats on Venue {\n    venueStats {\n      favorites\n      favoriteByCurrentUser\n    }\n  }\n`\n\nexport const GET_VENUE_BASICS = gql`\n  query($venueId: ID!) {\n    venue(id: $venueId) {\n      ...VenueDetails\n    }\n  }\n  ${VenueDetails}\n`\n\nexport const GET_VENUE_ADVANCED = gql`\n  query($venueId: ID!) {\n    venue(id: $venueId) {\n      ...VenueDetails\n      ...VenueStats\n    }\n  }\n  ${VenueDetails}\n  ${VenueStats}\n`\n\nexport const GET_VENUE_BY_SLUG = gql`\n  query($venueSlug: String!) {\n    venueBySlug(slug: $venueSlug) {\n      ...VenueDetails\n      ...VenueStats\n    }\n  }\n  ${VenueDetails}\n  ${VenueStats}\n`\n\nexport const GET_VENUES_FOR_CURRENT_USER = gql`\n  query {\n    me {\n      venues {\n        ...VenueDetails\n      }\n      favoriteVenues {\n        ...VenueDetails\n      }\n    }\n  }\n  ${VenueDetails}\n`\n\nexport const GET_VENUE_TYPES = gql`\n  query {\n    venueTypes {\n      id\n      name\n      image\n    }\n  }\n`\n\nexport const GET_SIMILAR_VENUES_IN_RADIUS = gql`\n  query($venueId: ID!, $limit: Int, $radius: Int) {\n    similarVenues(id: $venueId, first: $limit, radius: $radius) {\n      id\n      name\n      slug\n      streetAddress\n      zipcode\n      city\n    }\n  }\n`\n\nexport const GET_FEED_VENUES = gql`\n  query($cityIds: String, $venueTypeIds: String, $sort: String, $first: Int) {\n    venues(\n      cityIds: $cityIds\n      venueTypeIds: $venueTypeIds\n      sort: $sort\n      first: $first\n    ) {\n      id\n      createdAt\n      name\n      slug\n      description\n      streetAddress\n      zipcode\n      city\n      state\n      lat\n      lng\n      creator {\n        id\n        firstName\n        lastName\n      }\n      venueTypes {\n        id\n        name\n        image\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport { Query } from 'react-apollo'\n\nimport { GET_VENUE_TYPES } from '../../graphql/venueQueries'\n\nconst style = {\n  formControl: {\n    minWidth: '500px',\n    marginTop: '16px',\n    marginBottom: '8px'\n  }\n}\n\nexport default ({ onVenueTypeSelected }) => {\n  const [selectedOption, setSelectedOption] = useState('')\n\n  const handleOptionChange = option => {\n    setSelectedOption(option)\n    onVenueTypeSelected(option)\n  }\n\n  return (\n    <Query query={GET_VENUE_TYPES}>\n      {({ loading, error, data }) => {\n        if (loading) return 'Loading...'\n        if (error) return `Error! ${error.message}`\n\n        const venueTypes = data.venueTypes\n\n        return (\n          <FormControl style={style.formControl}>\n            <InputLabel htmlFor=\"age-simple\">Venue Type</InputLabel>\n            <Select\n              value={selectedOption}\n              onChange={event => handleOptionChange(event.target.value)}\n              inputProps={{\n                name: 'type',\n                id: 'venue-type'\n              }}\n            >\n              {venueTypes.map(venueType => (\n                <MenuItem key={venueType.id} value={venueType.id}>\n                  {venueType.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        )\n      }}\n    </Query>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const CREATE_VENUE_MUTATION = gql`\n  mutation CreateVenueMutation(\n    $name: String!\n    $streetAddress: String!\n    $zipcode: Int!\n    $cityId: Int!\n    $typeId: Int!\n  ) {\n    createVenue(\n      name: $name\n      streetAddress: $streetAddress\n      zipcode: $zipcode\n      city: { id: $cityId }\n      venueType: { id: $typeId }\n    ) {\n      id\n      name\n      streetAddress\n      venueTypes {\n        name\n      }\n    }\n  }\n`\n\nexport const CREATE_USER_VENUE_FAVORITE_MUTATION = gql`\n  mutation CreateUserVenueFavorite($venueId: Int!) {\n    createUserVenueFavorite(venueId: $venueId) {\n      favorites\n      favoriteByCurrentUser\n    }\n  }\n`\n\nexport const DELETE_USER_VENUE_FAVORITE_MUTATION = gql`\n  mutation DeleteUserVenueFavorite($venueId: Int!) {\n    deleteUserVenueFavorite(venueId: $venueId) {\n      favorites\n      favoriteByCurrentUser\n    }\n  }\n`\n","import React, { useState } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\nimport NumberFormat from 'react-number-format'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport CityFormField from './cityFormField'\nimport VenueTypeFormField from './venueTypeFormField'\nimport { CREATE_VENUE_MUTATION } from '../../graphql/venueMutations'\nimport Button from '@material-ui/core/Button'\n\nimport { validateVenue } from '../../utils/validationUtils'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { GET_VENUES_FOR_CURRENT_USER } from '../../graphql/venueQueries'\n\nconst USER_ACTION_TEXT = 'Please enter information about a venue'\nconst USER_ACTION_TEXT_ERROR = 'Please enter valid venue information'\n\nconst style = {\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    margin: '0 auto'\n  },\n  body: {\n    margin: '0 auto'\n  },\n  input: {\n    minWidth: '500px'\n  }\n}\n\nconst venueStub = {\n  name: '',\n  type: {\n    id: null\n  },\n  streetAddress: '',\n  zipcode: '',\n  lat: '',\n  lng: '',\n  city: {}\n}\n\nexport default ({ open, toggleDialog, onCreatedVenue }) => {\n  const [addVenue] = useMutation(CREATE_VENUE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    onCompleted(data) {\n      onCreatedVenue()\n    },\n    refetchQueries: [\n      {\n        query: GET_VENUES_FOR_CURRENT_USER\n      }\n    ],\n    awaitRefetchQueries: true\n  })\n\n  const [newVenue, setNewVenue] = useState({ ...venueStub })\n  const [userActionText, setUserActionText] = useState(USER_ACTION_TEXT)\n\n  const onCitySelected = city => {\n    if (city && city.value) {\n      setNewVenue({ ...newVenue, city: { id: city.value } })\n    } else {\n      setNewVenue({ ...newVenue, city: {} })\n    }\n  }\n\n  const onVenueTypeSelected = venueTypeId => {\n    setNewVenue({ ...newVenue, type: { id: venueTypeId } })\n  }\n\n  const handleChange = name => event => {\n    setNewVenue({ ...newVenue, [name]: event.target.value })\n  }\n\n  const onSubmit = () => {\n    if (validateVenue(newVenue)) {\n      addVenue({\n        variables: {\n          name: newVenue.name,\n          typeId: newVenue.type.id,\n          streetAddress: newVenue.streetAddress,\n          zipcode: parseInt(newVenue.zipcode),\n          cityId: newVenue.city.id\n        }\n      }).then(response => {\n        setNewVenue({ ...venueStub })\n        toggleDialog()\n      })\n    } else {\n      setUserActionText(USER_ACTION_TEXT_ERROR)\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={toggleDialog}\n      fullScreen={true}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <AppBar style={style.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggleDialog}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <DialogTitle style={style.title}>Add New Destination</DialogTitle>\n      <DialogContent style={style.body}>\n        <DialogContentText>{userActionText}</DialogContentText>\n        <TextField\n          id=\"venue-name\"\n          label=\"Venue name\"\n          value={newVenue.name}\n          onChange={handleChange('name')}\n          margin=\"normal\"\n          style={style.input}\n        />\n        <br />\n        <VenueTypeFormField onVenueTypeSelected={onVenueTypeSelected} />\n        <br />\n        <TextField\n          id=\"venue-street-address\"\n          name=\"street-address\"\n          label=\"Street address\"\n          value={newVenue.streetAddress}\n          onChange={handleChange('streetAddress')}\n          margin=\"normal\"\n          autoComplete=\"shipping street-address\"\n          style={style.input}\n        />\n        <CityFormField onCitySelected={onCitySelected} />\n\n        <NumberFormat\n          customInput={TextField}\n          id=\"venue-zipcode\"\n          name=\"zipcode\"\n          label=\"Zipcode\"\n          value={newVenue.zipcode}\n          onChange={handleChange('zipcode')}\n          margin=\"normal\"\n          style={style.input}\n          autoComplete=\"postal-code\"\n          format=\"#####\"\n        />\n        <div>\n          <Button color=\"primary\" onClick={onSubmit}>\n            Create venue\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","export const validateVenue = ({ name, type, streetAddress, city, zipcode }) => {\n\tlet valid = {\n\t\tname: false,\n\t\ttype: false,\n\t\tstreetAddress: false,\n\t\tcity: false,\n\t\tzipcode: false\n\t}\n\n\tif (name && name.length >= 2) {\n\t\tvalid.name = true\n\t}\n\n\tif(type && type.id) {\n\t\tvalid.type = true\n\t}\n\n\tif(streetAddress && streetAddress.length >= 2) {\n\t\tvalid.streetAddress = true\n\t}\n\n\tif(city && city.id) {\n\t\tvalid.city = true\n\t}\n\n\tif(zipcode && !isNaN(parseInt(zipcode))) {\n\t\tvalid.zipcode = true\n\t}\n\n\treturn (Object.values(valid).indexOf(false) === -1)\n}","import React from 'react'\nimport AppBar from \"@material-ui/core/AppBar/AppBar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { withStyles } from \"@material-ui/core\"\n\nconst styles = {\n\tappBar: {\n\t\tboxShadow: \"none\",\n\t\tfloat: \"left\",\n\t\twidth: '300px',\n\t},\n\ttabIndicator: {\n\t\tbackgroundColor: '#ffffff',\n\t},\n}\n\nconst VenueTypeTabs = ({ classes, venues, venueTypeFilter, onSetVenueTypeFilter }) => {\n\tconst handleVenueTypeClick = (e, value) => {\n\t\tonSetVenueTypeFilter(value)\n\t}\n\n\tconst getVenueTypes = venues => {\n\t\tlet results = {}\n\n\t\tfor (let x = 0; x < venues.length; x++) {\n\t\t\tif ((venues[x].venueTypes && venues[x].venueTypes.length)) {\n\t\t\t\tif (results[venues[x].venueTypes[0].name]) {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name].venues.push(venues[x])\n\t\t\t\t} else {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name] = {\n\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\tid: venues[x].venueTypes[0].id,\n\t\t\t\t\t\t\tname: venues[x].venueTypes[0].name,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvenues: [venues[x]],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Object.keys(results)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Tabs value={venueTypeFilter}\n\t\t\t\t\t\t\tonChange={handleVenueTypeClick}\n\t\t\t\t\t\t\tclasses={{ indicator: classes.tabIndicator }}\n\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\tscrollButtons=\"auto\">\n\t\t\t\t\t<Tab label='all' value='all'/>\n\t\t\t\t\t{getVenueTypes(venues).sort().map((type, index) => (\n\t\t\t\t\t\t<Tab label={type} value={type} key={index}/>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default withStyles(styles)(VenueTypeTabs)","import React from 'react'\nimport {\n  DirectionsRun,\n  DirectionsWalk,\n  NearMe,\n  Restaurant,\n  Museum,\n  Nature,\n  NaturePeople,\n  Pets\n} from '@material-ui/icons'\n\nexport const venueMapLink = venue => {\n  const address = `${venue.streetAddress}, ${venue.city}, ${venue.state} ${venue.zipcode}`\n  return `https://maps.google.com/?q=${encodeURIComponent(address)}`\n}\n\nexport const venueIcon = (venue, cssClass) => {\n  let venueIconComponent\n\n  switch (venue.venueTypes[0].name) {\n    case 'restaurant':\n      venueIconComponent = <Restaurant className={cssClass} />\n      break\n    case 'museum':\n      venueIconComponent = <Museum className={cssClass} />\n      break\n    case 'zoo':\n      venueIconComponent = <Pets className={cssClass} />\n      break\n    case 'hiking trail':\n      venueIconComponent = <DirectionsWalk className={cssClass} />\n      break\n    case 'outdoor park':\n      venueIconComponent = <Nature className={cssClass} />\n      break\n    case 'camp site':\n      venueIconComponent = <NaturePeople className={cssClass} />\n      break\n    case 'outdoor playground':\n      venueIconComponent = <DirectionsRun className={cssClass} />\n      break\n    default:\n      venueIconComponent = <NearMe className={cssClass} />\n  }\n\n  return venueIconComponent\n}\n\nexport const venueHeaderImage = venue =>\n  venue.venueTypes[0].image || 'restaurant-header-cmp.jpg'\n\nexport const venuePrimaryTypeName = venue => venue.venueTypes[0].name || 'venue'\n\nexport const venueCityState = venue => `${venue.city}, ${venue.state}`\n\nexport const venueAddress = (venue, separator = ', ') => {\n  if (venue) {\n    return (\n      <span>\n        {venue.streetAddress}\n        {separator}\n        {venueCityState(venue)} {venue.zipcode}\n      </span>\n    )\n  }\n\n  return ''\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { venueMapLink, venueIcon, venueCityState } from '../../utils/venueUtils'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Routes from '../../routes'\nimport { useMutation } from '@apollo/react-hooks'\nimport { DELETE_USER_VENUE_FAVORITE_MUTATION } from '../../graphql/venueMutations'\nimport {\n  GET_VENUE_BY_SLUG,\n  GET_VENUES_FOR_CURRENT_USER\n} from '../../graphql/venueQueries'\n\nconst styles = {\n  '@global': {\n    '.venueItem': {\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      marginTop: '5px',\n      marginBottom: '5px',\n      // backgroundColor: '#f6f6f6',\n      padding: '15px',\n      width: '49%',\n      display: 'inline-block',\n      '&:nth-child(odd)': {\n        marginRight: '10px'\n      }\n    },\n    '.venueItemTitle': {\n      display: 'block',\n      fontSize: '18px',\n      fontWeight: 500,\n      lineHeight: 1.6,\n      color: '#333333',\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    '.venueItemDescription': {},\n    '.venueItemTypeBadge': {\n      display: 'inline-block',\n      padding: '1px 5px',\n      backgroundColor: '#2196f3',\n      color: '#fff',\n      borderRadius: '3px',\n      height: '22px'\n    },\n    '.venueItemTypeBadgeText': {\n      marginLeft: '20px',\n      marginTop: '3px',\n      textTransform: 'uppercase',\n      fontSize: '11px',\n      fontWeight: 600,\n      minWidth: '75px',\n      textAlign: 'center'\n    },\n    '.venueItemLocation': {\n      textTransform: 'uppercase',\n      fontSize: '11px',\n      fontWeight: 600,\n      textDecoration: 'none',\n      float: 'right',\n      marginTop: '4px',\n      color: '#666'\n    },\n    '.venueIcon': {\n      float: 'left',\n      width: '15px',\n      height: 'auto',\n      marginRight: '5px',\n      position: 'relative',\n      top: '2px'\n    },\n    '.venueUnlike': {\n      float: 'right'\n    }\n  }\n}\n\nconst VenueListItem = props => {\n  const { venue, showDeleteFavoriteButton, onDeleteFavoriteCallback } = props\n\n  const [deleteFavorite] = useMutation(DELETE_USER_VENUE_FAVORITE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    update: (store, { data: { deleteUserVenueFavorite } }) => {\n      updateFavoriteStats(store, deleteUserVenueFavorite)\n    },\n    onCompleted: () => {\n      onDeleteFavoriteCallback()\n    },\n    refetchQueries: [\n      {\n        query: GET_VENUES_FOR_CURRENT_USER\n      }\n    ],\n    awaitRefetchQueries: true\n  })\n\n  const updateFavoriteStats = (store, venueStats) => {\n    try {\n      let data = store.readQuery({\n        query: GET_VENUE_BY_SLUG,\n        variables: { venueSlug: venue.slug }\n      })\n\n      data.venueBySlug.venueStats = venueStats\n\n      store.writeQuery({\n        query: GET_VENUE_BY_SLUG,\n        variables: { venueSlug: venue.slug },\n        data\n      })\n    } catch (e) {}\n  }\n\n  const onDeleteFavorite = () =>\n    deleteFavorite({\n      variables: {\n        venueId: venue.id\n      }\n    })\n\n  return (\n    <div className=\"venueItem\">\n      {showDeleteFavoriteButton && (\n        <button\n          onClick={() => {\n            onDeleteFavorite()\n          }}\n          className=\"venueUnlike\"\n        >\n          Unlike\n        </button>\n      )}\n\n      <RouterLink to={Routes.venuePath(venue.slug)} className=\"venueItemTitle\">\n        {venue.name}\n      </RouterLink>\n      <div className=\"venueItemDescription\">\n        <div className=\"venueItemTypeBadge\">\n          {venueIcon(venue, 'venueIcon')}\n          <div className=\"venueItemTypeBadgeText\">\n            {venue.venueTypes && venue.venueTypes.length\n              ? `${venue.venueTypes[0].name}`\n              : ''}\n          </div>\n        </div>\n        <a\n          href={venueMapLink(venue)}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"venueItemLocation\"\n        >\n          {venueCityState(venue)}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(VenueListItem)\n","import React, { Fragment, useEffect, useState } from 'react'\nimport VenueTypeTabs from './venueTypeTabs'\nimport VenueListItem from './venueListItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport { GET_VENUES_FOR_CURRENT_USER } from '../../graphql/venueQueries'\nimport { withApollo } from 'react-apollo'\n\nconst styles = {\n  '@global': {\n    '.venueList': {\n      marginLeft: '320px'\n    }\n  }\n}\n\nconst VenueList = ({\n  client,\n  currentDashboardSection,\n  isFavoritesDashboardSection,\n  externalTriggerVenueRefresh\n}) => {\n  const [venueTypeFilter, setVenueTypeFilter] = useState('all')\n  const [venues, setVenues] = useState([])\n  const [triggerVenueRefresh, setTriggerVenueRefresh] = useState(true)\n\n  useEffect(() => {\n    const getVenueData = () => {\n      client\n        .query({\n          query: GET_VENUES_FOR_CURRENT_USER\n        })\n        .then(({ data }) => {\n          setVenues(\n            isFavoritesDashboardSection\n              ? data.me.favoriteVenues\n              : data.me.venues\n          )\n        })\n    }\n\n    getVenueData()\n    setVenueTypeFilter('all')\n  }, [\n    currentDashboardSection,\n    triggerVenueRefresh,\n    externalTriggerVenueRefresh,\n    isFavoritesDashboardSection,\n    client\n  ])\n\n  const onDeleteFavorite = () => {\n    setTriggerVenueRefresh(!triggerVenueRefresh)\n  }\n\n  return (\n    <Fragment>\n      <VenueTypeTabs\n        venues={venues}\n        onSetVenueTypeFilter={setVenueTypeFilter}\n        venueTypeFilter={venueTypeFilter}\n      ></VenueTypeTabs>\n      <div className=\"venueList\">\n        {venues\n          .filter(\n            venue =>\n              venueTypeFilter === 'all' ||\n              venue.venueTypes[0].name === venueTypeFilter\n          )\n          .map(venue => (\n            <VenueListItem\n              key={venue.id}\n              venue={venue}\n              showDeleteFavoriteButton={isFavoritesDashboardSection}\n              onDeleteFavoriteCallback={onDeleteFavorite}\n            />\n          ))}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default withStyles(styles)(withApollo(VenueList))\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { sinceCreated } from '../../utils/dateUtils'\nimport { shortName } from '../../utils/userUtils'\nimport Routes from '../../routes'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { venueCityState } from '../../utils/venueUtils'\n\nconst styles = {\n  '@global': {\n    '.feedItem': {\n      borderBottom: '1px solid #eee',\n      marginTop: '5px',\n      marginBottom: '5px',\n      padding: '15px'\n    },\n    '.feedItemTitle': {\n      fontWeight: 600,\n      color: '#000',\n      textDecoration: 'none',\n      fontSize: '15px'\n    },\n    '.feedItemSubtitle': {\n      fontSize: '12px'\n    }\n  }\n}\n\nconst FeedItem = ({ venue }) => {\n  return (\n    <div className=\"feedItem\">\n      <RouterLink to={Routes.venuePath(venue.slug)} className=\"feedItemTitle\">\n        {venue.name}\n      </RouterLink>\n      <div className=\"feedItemSubtitle\">\n        in {venueCityState(venue)}\n        <br />\n        added {sinceCreated(venue.createdAt)} by {shortName(venue.creator)}\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(FeedItem)\n","export const localDateTime = timestamp => {\n  return new Date(timestamp).toLocaleString()\n}\n\nexport const sinceCreated = timestamp => {\n  const then = new Date(timestamp)\n  const now = new Date()\n\n  const diffSeconds = (now.getTime() - then.getTime()) / 1000\n\n  let response\n\n  if (diffSeconds <= 60) {\n    response = 'now'\n  } else if (diffSeconds < 90) {\n    response = Math.round(diffSeconds / 60) + ' minute ago'\n  } else if (diffSeconds <= 3600) {\n    response = Math.round(diffSeconds / 60) + ' minutes ago'\n  } else if (diffSeconds < 5400) {\n    response = Math.round(diffSeconds / 3600) + ' hour ago'\n  } else if (diffSeconds <= 86400) {\n    response = Math.round(diffSeconds / 3600) + ' hours ago'\n  } else {\n    response =\n      'on ' +\n      then.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n  }\n\n  return response\n}\n","import React from 'react'\nimport CityFormField from './cityFormField'\n\nconst FeedConfigurator = ({ onFeedConfigurationUpdated }) => {\n  const onCitySelected = cities => {\n    onFeedConfigurationUpdated({ cities })\n  }\n\n  return (\n    <div>\n      <CityFormField\n        onCitySelected={onCitySelected}\n        fieldLabel=\"Filter feed by city\"\n        placeholder=\"e.g.: San Francisco, CA\"\n        isMulti={true}\n      ></CityFormField>\n    </div>\n  )\n}\n\nexport default FeedConfigurator\n","import React, { useEffect, useState } from 'react'\nimport { withApollo } from 'react-apollo'\nimport { withStyles } from '@material-ui/core/styles'\nimport { GET_FEED_VENUES } from '../../graphql/venueQueries'\n\nimport FeedItem from './feedItem'\nimport FeedConfigurator from './feedConfigurator'\n\nconst styles = {\n  '@global': {\n    '.feedContainer': {\n      maxWidth: '50%',\n      minWidth: '400px'\n    }\n  }\n}\n\nconst Feed = ({ client }) => {\n  const [feedVenues, setFeedVenues] = useState([])\n  const [feedConfiguration, setFeedConfiguration] = useState({\n    cityIds: null,\n    venueTypeIds: null,\n    sort: 'DESC',\n    first: 25\n  })\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_FEED_VENUES,\n        variables: {\n          ...feedConfiguration\n        }\n      })\n      .then(({ data }) => {\n        setFeedVenues(data.venues)\n      })\n  }, [client, feedConfiguration])\n\n  const onFeedConfigurationUpdated = newFeedConfiguration => {\n    if (newFeedConfiguration) {\n      if (newFeedConfiguration.cities) {\n        setFeedConfiguration({\n          ...feedConfiguration,\n          cityIds: newFeedConfiguration.cities.map(city => city.value).join(',')\n        })\n      } else {\n        setFeedConfiguration({\n          ...feedConfiguration,\n          cityIds: null\n        })\n      }\n    }\n  }\n\n  return (\n    <div className=\"feedContainer\">\n      <FeedConfigurator\n        onFeedConfigurationUpdated={onFeedConfigurationUpdated}\n      ></FeedConfigurator>\n      {feedVenues.map(venue => (\n        <FeedItem key={venue.id} venue={venue}></FeedItem>\n      ))}\n    </div>\n  )\n}\n\nexport default withStyles(styles)(withApollo(Feed))\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport { Add } from '@material-ui/icons'\nimport Routes from '../routes'\n\nimport AddVenueDialog from './dashboard/addVenueDialog'\nimport VenueList from './dashboard/venueList'\nimport Feed from './dashboard/feed'\n\nconst DASHBOARD_SECTION = {\n  FEED: 'feed',\n  FOLLOWED_DESTINATIONS: 'followed-destinations',\n  MY_DESTINATIONS: 'my-destinations',\n  FAVORITES: 'favorites'\n}\n\nconst styles = {\n  '@global': {\n    '.sectionHeader': {\n      marginBottom: '30px',\n      display: 'flex'\n    },\n    '.sectionHeaderTitle': {\n      flexGrow: 2,\n      maxWidth: '250px',\n      cursor: 'pointer',\n      textDecoration: 'none',\n      color: '#666',\n      textAlign: 'center',\n      textTransform: 'uppercase',\n      borderRadius: '8px',\n      margin: '0px 10px',\n      fontSize: '14px',\n      fontWeight: 600,\n      lineHeight: 2.5,\n      letterSpacing: '1.3px',\n      border: '1px solid #eee'\n    },\n    '.sectionHeaderTitleSelected': {\n      backgroundColor: '#f9f8f8'\n    },\n    '.venueList': {\n      marginLeft: '320px'\n    }\n  }\n}\n\nconst DashboardPage = ({ match }) => {\n  const currentDashboardSection = Routes.validatePageSection(\n    match.params.section,\n    DASHBOARD_SECTION,\n    DASHBOARD_SECTION.FEED\n  )\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [\n    externalTriggerVenueRefresh,\n    setExternalTriggerVenueRefresh\n  ] = useState(true)\n\n  const toggleDialog = () => {\n    setDialogOpen(!dialogOpen)\n  }\n\n  const renderDashboardSection = (text, dashboardSection) => {\n    return (\n      <RouterLink\n        to={Routes.dashboardPath(dashboardSection)}\n        className={`sectionHeaderTitle ${\n          currentDashboardSection === dashboardSection\n            ? 'sectionHeaderTitleSelected'\n            : ''\n        }`}\n      >\n        {text}\n      </RouterLink>\n    )\n  }\n\n  const onCreatedVenue = () =>\n    setExternalTriggerVenueRefresh(!externalTriggerVenueRefresh)\n\n  return (\n    <div className=\"mainContainer\">\n      <div className=\"mainContent\">\n        <div className=\"sectionHeader\">\n          {renderDashboardSection('Feed', DASHBOARD_SECTION.FEED)}\n          {renderDashboardSection(\n            'My destinations',\n            DASHBOARD_SECTION.MY_DESTINATIONS\n          )}\n          {renderDashboardSection(\n            'Favorite destinations',\n            DASHBOARD_SECTION.FAVORITES\n          )}\n          <Button\n            variant=\"outlined\"\n            style={{ marginLeft: 'auto' }}\n            onClick={toggleDialog}\n          >\n            <Add />\n            Add Destination\n          </Button>\n          <AddVenueDialog\n            open={dialogOpen}\n            toggleDialog={toggleDialog}\n            onCreatedVenue={onCreatedVenue}\n          />\n        </div>\n        {currentDashboardSection === DASHBOARD_SECTION.FEED ? (\n          <Feed></Feed>\n        ) : (\n          <VenueList\n            currentDashboardSection={currentDashboardSection}\n            isFavoritesDashboardSection={\n              currentDashboardSection === DASHBOARD_SECTION.FAVORITES\n            }\n            externalTriggerVenueRefresh={externalTriggerVenueRefresh}\n          ></VenueList>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(DashboardPage)\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { headerStyles } from '../../utils/styleUtils'\nimport { venueHeaderImage } from '../../utils/venueUtils'\n\nexport default props => {\n  const { venue } = props\n  const headerStyle = headerStyles(venueHeaderImage(venue), '300px')\n\n  return (\n    <div style={headerStyle.container}>\n      <Typography variant=\"h2\" style={headerStyle.headerText}>\n        <strong>{venue.name}</strong>\n      </Typography>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withApollo } from 'react-apollo'\nimport { GET_SIMILAR_VENUES_IN_RADIUS } from '../../graphql/venueQueries'\nimport '../shared/sidebarModule.css'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Routes from '../../routes'\n\nconst SimilarVenues = ({ client, venue }) => {\n  const [similarVenues, setSimilarVenues] = useState([])\n  useEffect(() => {\n    client\n      .query({\n        query: GET_SIMILAR_VENUES_IN_RADIUS,\n        variables: { venueId: venue.id, limit: 5, radius: 10 }\n      })\n      .then(({ data }) => {\n        setSimilarVenues(data.similarVenues)\n      })\n  }, [venue, client])\n\n  return (\n    <div className=\"sidebar-module\">\n      <h3>Similar places near by</h3>\n      <div className=\"sidebar-module-body\">\n        {similarVenues &&\n          similarVenues.map(venue => (\n            <div key={venue.id}>\n              <RouterLink to={Routes.venuePath(venue.slug)}>\n                {venue.name}\n              </RouterLink>\n            </div>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default withApollo(SimilarVenues)\n","import React from 'react'\nimport '../shared/sidebarModule.css'\nimport { venueAddress } from '../../utils/venueUtils'\n\nconst LocationInfo = ({ venue }) => {\n  return (\n    <div className=\"sidebar-module\">\n      <h3>Location</h3>\n      <div className=\"sidebar-module-body\">{venueAddress(venue, <br />)}</div>\n    </div>\n  )\n}\n\nexport default LocationInfo\n","import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  CREATE_USER_VENUE_FAVORITE_MUTATION,\n  DELETE_USER_VENUE_FAVORITE_MUTATION\n} from '../../graphql/venueMutations'\nimport {\n  GET_VENUE_BY_SLUG,\n  GET_VENUES_FOR_CURRENT_USER\n} from '../../graphql/venueQueries'\n\nexport default ({\n  venueId,\n  venueSlug,\n  favoriteByCurrentUser,\n  onUpdateFavoritesStats\n}) => {\n  const refetchQueries = [\n    {\n      query: GET_VENUES_FOR_CURRENT_USER\n    }\n  ]\n\n  const updateFavoriteStats = (store, venueStats) => {\n    let data = store.readQuery({\n      query: GET_VENUE_BY_SLUG,\n      variables: { venueSlug }\n    })\n\n    data.venueBySlug.venueStats = venueStats\n    onUpdateFavoritesStats(venueStats)\n\n    store.writeQuery({\n      query: GET_VENUE_BY_SLUG,\n      variables: { venueSlug },\n      data\n    })\n  }\n\n  const [addFavorite] = useMutation(CREATE_USER_VENUE_FAVORITE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    update: (store, { data: { createUserVenueFavorite } }) => {\n      updateFavoriteStats(store, createUserVenueFavorite)\n    },\n    refetchQueries\n  })\n\n  const [deleteFavorite] = useMutation(DELETE_USER_VENUE_FAVORITE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    update: (store, { data: { deleteUserVenueFavorite } }) => {\n      updateFavoriteStats(store, deleteUserVenueFavorite)\n    },\n    refetchQueries\n  })\n\n  const onAddFavorite = () =>\n    addFavorite({\n      variables: {\n        venueId: venueId\n      }\n    })\n\n  const onDeleteFavorite = () =>\n    deleteFavorite({\n      variables: {\n        venueId: venueId\n      }\n    })\n\n  return (\n    <React.Fragment>\n      {favoriteByCurrentUser ? (\n        <span>\n          &#9733;&nbsp;\n          <a\n            href=\"#\"\n            onClick={e => {\n              e.preventDefault()\n              onDeleteFavorite()\n            }}\n          >\n            Unlike\n          </a>\n        </span>\n      ) : (\n        <a\n          href=\"#\"\n          onClick={e => {\n            e.preventDefault()\n            onAddFavorite()\n          }}\n        >\n          Like\n        </a>\n      )}\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport pluralize from 'pluralize'\nimport { GET_VENUE_BY_SLUG } from '../graphql/venueQueries'\n\nimport VenueHeader from './venue/header'\nimport SimilarVenues from './venue/similarVenues'\nimport { venuePrimaryTypeName } from '../utils/venueUtils'\nimport { isUserLoggedIn } from '../utils/userUtils'\nimport LocationInfo from './venue/locationInfo'\nimport FavoriteButton from './venue/favoriteButton'\n\nconst pageStyle = {\n  sectionHeader: {\n    marginBottom: '15px'\n  },\n  columnWrapper: {\n    display: 'flex'\n  },\n  mainColumn: {\n    flexGrow: 3,\n    maxWidth: '800px'\n  },\n  sideColumm: {\n    flexGrow: 1,\n    marginTop: '-20px'\n  }\n}\n\nexport default ({ match }) => {\n  const venueSlug = match.params.venueSlug\n  const [venue, setVenue] = useState(null)\n  const [venueTypeName, setVenueTypeName] = useState('')\n\n  const onUpdateFavoritesStats = venueStats => {\n    setVenue({ ...venue, venueStats: { ...venueStats } })\n  }\n\n  if (!venueSlug) {\n    return <div>Venue not found.</div>\n  } else {\n    return (\n      <Query query={GET_VENUE_BY_SLUG} variables={{ venueSlug }}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...'\n          if (error) return `Error! ${error.message}`\n\n          setVenue(data.venueBySlug)\n          setVenueTypeName(venuePrimaryTypeName(data.venueBySlug))\n\n          return (\n            venue && (\n              <div>\n                <VenueHeader venue={venue} />\n                <div className=\"mainContainer\">\n                  <div className=\"mainContent\">\n                    <Typography variant=\"h5\" style={pageStyle.sectionHeader}>\n                      {venue.name}\n                    </Typography>\n                    <div style={pageStyle.columnWrapper}>\n                      <div style={pageStyle.mainColumn}>\n                        <div>\n                          Liked by{' '}\n                          <strong>\n                            <NumberFormat\n                              value={venue.venueStats.favorites}\n                              thousandSeparator={true}\n                              displayType={'text'}\n                            />{' '}\n                            {pluralize('person', venue.venueStats.favorites)}\n                          </strong>\n                          . &nbsp;\n                          {isUserLoggedIn() && (\n                            <FavoriteButton\n                              venueId={venue.id}\n                              venueSlug={venueSlug}\n                              favoriteByCurrentUser={\n                                venue.venueStats.favoriteByCurrentUser\n                              }\n                              onUpdateFavoritesStats={onUpdateFavoritesStats}\n                            />\n                          )}\n                        </div>\n                        <br />\n                        {venue.description && <span>{venue.description}</span>}\n                        This {venueTypeName} is located in {venue.city},{' '}\n                        {venue.state}.\n                      </div>\n                      <div style={pageStyle.sideColumm}>\n                        <LocationInfo venue={venue} />\n                        <SimilarVenues venue={venue} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          )\n        }}\n      </Query>\n    )\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500]\n    },\n    background: { default: '#efefef' }\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n","import gql from \"graphql-tag\"\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation($email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n        signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation LoginMutation($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\n\nimport { setUserInfo } from '../../utils/userUtils'\nimport Routes from '../../routes'\nimport { Mutation } from 'react-apollo'\nimport { SIGNUP_MUTATION, LOGIN_MUTATION } from '../../graphql/userMutations'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst styles = {\n  dialogMainContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  dialogMainError: {\n    textAlign: 'center'\n  }\n}\n\nclass LoginDialog extends Component {\n  state = {\n    login: this.props.login !== undefined ? this.props.login : true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    errorMessage: null\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.open !== this.props.open) {\n      this.setState({ errorMessage: null })\n    }\n\n    if (prevProps.login !== this.props.login) {\n      this.setState({ login: this.props.login })\n    }\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      firstName,\n      lastName,\n      errorMessage\n    } = this.state\n    const { classes } = this.props\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.toggleDialog}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"login-dialog-title\">\n          {login ? 'Login' : 'Sign Up'}\n        </DialogTitle>\n        <DialogContent>\n          {errorMessage && (\n            <DialogContentText className={classes.dialogMainError}>\n              {errorMessage}\n            </DialogContentText>\n          )}\n          <div className={classes.dialogMainContent}>\n            {!login && (\n              <span>\n                <TextField\n                  id=\"firstName\"\n                  label=\"First name\"\n                  error={!!errorMessage}\n                  value={firstName}\n                  onChange={e => this.setState({ firstName: e.target.value })}\n                  margin=\"normal\"\n                  fullWidth\n                />\n                <TextField\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  error={!!errorMessage}\n                  value={lastName}\n                  onChange={e => this.setState({ lastName: e.target.value })}\n                  margin=\"normal\"\n                  fullWidth\n                />\n              </span>\n            )}\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              error={!!errorMessage}\n              value={email}\n              onChange={e => this.setState({ email: e.target.value })}\n              margin=\"normal\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              error={!!errorMessage}\n              type=\"password\"\n              autoComplete=\"current-password\"\n              onChange={e => this.setState({ password: e.target.value })}\n              margin=\"normal\"\n              fullWidth\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => this.setState({ login: !login, errorMessage: null })}\n            color=\"primary\"\n            style={{ marginRight: 'auto' }}\n          >\n            {login ? 'need to create an account?' : 'already have an account?'}\n          </Button>\n\n          <Button onClick={this.props.toggleDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Mutation\n            mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n            variables={{ email, password, firstName, lastName }}\n            update={(cache, { data }) =>\n              this._update(cache, login ? data.login : data.signup)\n            }\n            onCompleted={data => this._confirm(data)}\n            onError={error => this._error(error)}\n          >\n            {mutation => (\n              <Button color=\"primary\" onClick={mutation}>\n                {login ? 'login' : 'create account'}\n              </Button>\n            )}\n          </Mutation>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  _update = async (cache, info) => {\n    cache.writeData({\n      data: {\n        currentUser: {\n          ...info.user,\n          token: info.token\n        }\n      }\n    })\n  }\n\n  _confirm = async data => {\n    this.state.error = null\n\n    const { token, user } = this.state.login ? data.login : data.signup\n    this._saveUserData(token, user)\n\n    document.location = Routes.dashboard\n  }\n\n  _saveUserData = (token, user) => {\n    setUserInfo(token, user)\n  }\n\n  _error = async ({ graphQLErrors }) => {\n    if (\n      this.state.login &&\n      graphQLErrors &&\n      graphQLErrors[0] &&\n      graphQLErrors[0].message\n    ) {\n      this.setState({ errorMessage: graphQLErrors[0].message })\n    } else if (\n      graphQLErrors &&\n      graphQLErrors[0] &&\n      graphQLErrors[0].extensions.exception.errors[0].message\n    ) {\n      this.setState({\n        errorMessage: graphQLErrors[0].extensions.exception.errors[0].message\n      })\n    }\n  }\n}\n\nexport default withRouter(withStyles(styles)(LoginDialog))\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router'\nimport {\n  isUserLoggedIn,\n  withCurrentUser,\n  listenForOpenSignUpDialog\n} from '../../utils/userUtils'\nimport LoginDialog from './loginDialog'\nimport Typography from '@material-ui/core/Typography'\n\nclass LoginButton extends Component {\n  state = {\n    dialogOpen: false,\n    login: true\n  }\n\n  componentDidMount() {\n    listenForOpenSignUpDialog(() => {\n      this.setState({ dialogOpen: true, login: false })\n    })\n  }\n\n  toggleDialog = () => {\n    this.setState({ dialogOpen: !this.state.dialogOpen, login: true })\n  }\n\n  renderUserInfo = currentUser => {\n    if (currentUser && currentUser.id) {\n      return `Welcome, ${currentUser.firstName}`\n    } else {\n      return ''\n    }\n  }\n\n  render() {\n    const { currentUser } = this.props\n\n    return isUserLoggedIn() ? (\n      <Typography\n        variant=\"button\"\n        color=\"inherit\"\n        className={this.props.className}\n      >\n        {this.renderUserInfo(currentUser)}\n      </Typography>\n    ) : (\n      <span>\n        <Button\n          onClick={this.toggleDialog}\n          className={this.props.className}\n          color=\"inherit\"\n        >\n          Login\n        </Button>\n        <LoginDialog\n          open={this.state.dialogOpen}\n          login={this.state.login}\n          toggleDialog={this.toggleDialog}\n        />\n      </span>\n    )\n  }\n}\n\nexport default withCurrentUser(withRouter(LoginButton))\n","import React, { Component } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport LoginButton from '../components/shared/loginButton'\nimport { logoutUser, isUserLoggedIn } from '../utils/userUtils'\nimport { withRouter } from 'react-router'\n\nimport Routes from '../routes'\n\nclass ButtonAppBar extends Component {\n  state = {\n    anchorEl: null\n  }\n\n  toggleMenu = event => {\n    this.state.anchorEl\n      ? this.setState({ anchorEl: null })\n      : this.setState({ anchorEl: event.currentTarget })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          style={{ background: 'transparent', boxShadow: 'none' }}\n        >\n          <Toolbar variant=\"dense\" className={classes.container}>\n            <Typography\n              className={classes.logoText}\n              variant=\"button\"\n              color=\"inherit\"\n            >\n              KidTrip\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              className={classes.grow}\n            ></Typography>\n            <LoginButton className={classes.loginButton} />\n\n            {isUserLoggedIn() && (\n              <span className={classes.menuWrapper}>\n                <IconButton\n                  onClick={this.toggleMenu}\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={this.state.anchorEl}\n                  open={Boolean(this.state.anchorEl)}\n                  onClose={this.toggleMenu}\n                >\n                  <MenuItem\n                    component={RouterLink}\n                    to={Routes.home}\n                    onClick={this.toggleMenu}\n                  >\n                    Home\n                  </MenuItem>\n                  <MenuItem\n                    component={RouterLink}\n                    to={Routes.dashboard}\n                    onClick={this.toggleMenu}\n                  >\n                    Dashboard\n                  </MenuItem>\n                  <MenuItem onClick={this.toggleMenu}>My account</MenuItem>\n                  <MenuItem\n                    onClick={() => {\n                      logoutUser()\n                      this.props.history.push(`/`)\n                    }}\n                  >\n                    Logout\n                  </MenuItem>\n                </Menu>\n              </span>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ButtonAppBar)\n","import React from 'react'\nimport { isHomepage } from '../utils/routeUtils'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nimport AppBar from './appBar'\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  menuWrapper: {\n    marginLeft: 15\n  }\n}\n\nconst nonHomepageStyles = {\n  ...styles,\n  container: {\n    borderBottom: '1px solid',\n    borderBottomColor: blueGrey[100],\n    backgroundColor: 'white'\n  },\n  grow: {\n    ...styles.grow,\n    color: blueGrey[500]\n  },\n  menuButton: {\n    ...styles.menuButton,\n    color: blueGrey[500]\n  },\n  loginButton: {\n    color: blueGrey[500]\n  },\n  logoText: {\n    color: blueGrey[500]\n  }\n}\n\nconst AppBarContainer = props => {\n  const currentStyles = isHomepage(props.location) ? styles : nonHomepageStyles\n  const AppBarWithStyles = withStyles(currentStyles)(AppBar)\n  return <AppBarWithStyles />\n}\n\nexport default withRouter(AppBarContainer)\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport Routes from './routes'\nimport { isHomepage } from './utils/routeUtils'\n\nimport HomePage from './components/homePage'\nimport DashboardPage from './components/dashboardPage'\nimport VenuePage from './components/venuePage'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\nimport theme from './theme'\nimport AppBar from './layout/appBarContainer'\n\nconst styles = {\n  '@global': {\n    body: {\n      fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n      fontWeight: 400\n    },\n    '.mainContainer': {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    '.mainContent': {\n      maxWidth: '1200px',\n      flexGrow: '1',\n      margin: '25px',\n      backgroundColor: '#fff',\n      padding: '25px',\n      borderRadius: '8px'\n    }\n  },\n  appBarSpacer: {\n    height: '49px'\n  }\n}\n\nclass App extends Component {\n  render() {\n    const { classes, location } = this.props\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <CssBaseline />\n          <AppBar />\n          {!isHomepage(location) && (\n            <div className={classes.appBarSpacer}></div>\n          )}\n          <Switch>\n            <Route exact path={Routes.home} component={HomePage} />\n            <Route path={Routes.dashboard} component={DashboardPage} />\n            <Route path={Routes.venue} component={VenuePage} />\n          </Switch>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport { ApolloProvider } from 'react-apollo'\nimport { withClientState } from 'apollo-link-state'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport { getUserInfoFromStorage } from './utils/userUtils'\nimport { AUTH_TOKEN } from './constants'\n\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST\n\nconst cache = new InMemoryCache()\n\nconst defaultState = {\n  currentUser: { ...getUserInfoFromStorage() }\n}\n\nconst stateLink = withClientState({\n  cache,\n  defaults: defaultState,\n  resolvers: {\n    Mutation: {\n      updateUserInfo: (_, { id, firstName, lastName, email }, { cache }) => {\n        const data = {\n          user: {\n            __typename: 'User',\n            id,\n            firstName,\n            lastName,\n            email\n          }\n        }\n        cache.writeData({ data })\n        return null\n      }\n    }\n  }\n})\n\nconst token = localStorage.getItem(AUTH_TOKEN)\nconst httpLink = new HttpLink({\n  uri: SERVER_HOST, // || 'http://localhost:4000',\n  credentials: 'same-origin',\n  headers: {\n    authorization: token ? `Bearer ${token}` : ''\n  }\n})\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        )\n      if (networkError) console.log(`[Network error]: ${networkError}`)\n    }),\n    stateLink,\n    httpLink\n  ]),\n  cache: new InMemoryCache(),\n  resolvers: {}\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
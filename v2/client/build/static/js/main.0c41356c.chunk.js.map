{"version":3,"sources":["routes.js","utils/routeUtils.js","utils/styleUtils.js","components/homepage/header.js","components/homePage.js","graphql/venueQueries.js","utils/venueUtils.js","components/dashboard/venueListItem.js","graphql/cityQueries.js","components/dashboard/cityFormField.js","components/dashboard/venueTypeFormField.js","graphql/venueMutations.js","components/dashboard/addVenueDialog.js","utils/validationUtils.js","components/dashboard/venueTypeTabs.js","components/dashboardPage.js","components/venue/header.js","components/venue/similarVenues.js","components/venuePage.js","theme.js","graphql/userQueries.js","utils/userUtils.js","constants.js","graphql/userMutations.js","components/shared/loginDialog.js","components/shared/loginButton.js","layout/appBar.js","layout/appBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["home","dashboard","venue","venuePath","venueSlug","isHomepage","location","pathname","Routes","headerStyles","imageUrl","height","container","display","flexWrap","flexDirection","justifyContent","alignItems","background","backgroundSize","headerText","color","headerStyle","style","Typography","variant","VenueDetails","gql","GET_VENUE_BY_SLUG","GET_VENUES_FOR_CURRENT_USER","GET_VENUE_TYPES","GET_SIMILAR_VENUES_IN_RADIUS","venueMapLink","address","streetAddress","city","state","zipcode","encodeURIComponent","withStyles","marginTop","marginBottom","backgroundColor","padding","width","marginRight","position","top","props","className","component","RouterLink","to","slug","name","cssClass","venueIconComponent","venueTypes","Restaurant","DirectionsRun","NearMe","venueIcon","length","href","target","rel","GET_CITIES","input","border","outline","fontSize","suggestionsContainer","left","suggestionItem","formControl","minWidth","withApollo","client","onCitySelected","useState","query","setQuery","selectedOption","setSelectedOption","options","setOptions","useEffect","variables","limit","getSuggestions","then","data","cities","map","value","id","label","FormControl","InputLabel","shrink","htmlFor","onChange","option","onInputChange","text","placeholder","isClearable","menuIsOpen","escapeClearsValue","onVenueTypeSelected","loading","error","message","Select","event","inputProps","venueType","MenuItem","key","CREATE_VENUE_MUTATION","appBar","title","margin","body","venueStub","type","lat","lng","useMutation","onError","console","log","onCompleted","refetchQueries","addVenue","newVenue","setNewVenue","userActionText","setUserActionText","handleChange","Dialog","open","onClose","toggleDialog","fullScreen","aria-labelledby","AppBar","Toolbar","IconButton","edge","onClick","aria-label","DialogTitle","DialogContent","DialogContentText","TextField","venueTypeId","autoComplete","customInput","format","Button","valid","isNaN","parseInt","Object","values","indexOf","validateVenue","typeId","cityId","response","boxShadow","float","tabIndicator","classes","venues","venueTypeFilter","onSetVenueTypeFilter","Fragment","Tabs","e","indicator","orientation","scrollButtons","Tab","results","x","push","keys","getVenueTypes","sort","index","pageStyle","sectionHeader","sectionHeaderTitle","flexGrow","venueList","marginLeft","dialogOpen","setDialogOpen","setVenueTypeFilter","me","a","b","Add","filter","image","venueHeaderImage","similarVenues","setSimilarVenues","venueId","radius","columnWrapper","mainColumn","sideColumm","match","params","venueBySlug","createMuiTheme","palette","primary","main","blue","default","typography","useNextVariants","CURRENT_USER_QUERY","isUserLoggedIn","localStorage","getItem","setUserInfo","token","user","setItem","JSON","stringify","WrappedComponent","SIGNUP_MUTATION","LOGIN_MUTATION","LoginDialog","login","email","password","firstName","lastName","errorMessage","_update","cache","info","async","writeData","currentUser","_confirm","signup","_saveUserData","document","_error","graphQLErrors","setState","extensions","exception","errors","prevProps","this","maxWidth","fullWidth","dialogMainError","dialogMainContent","DialogActions","mutation","update","Component","withRouter","textAlign","LoginButton","renderUserInfo","withCurrentUser","compose","graphql","ButtonAppBar","anchorEl","toggleMenu","currentTarget","root","logoText","grow","loginButton","menuWrapper","menuButton","Boolean","removeItem","history","styles","nonHomepageStyles","borderBottom","borderBottomColor","blueGrey","currentStyles","AppBarWithStyles","App","theme","CssBaseline","appBarSpacer","exact","path","HomePage","DashboardPage","VenuePage","fontFamily","window","hostname","InMemoryCache","defaultState","userInfo","parse","__typename","getUserInfoFromStorage","stateLink","withClientState","defaults","resolvers","Mutation","updateUserInfo","_","httpLink","HttpLink","uri","process","credentials","headers","authorization","ApolloClient","link","ApolloLink","from","networkError","locations","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c41356c.chunk.js","sourcesContent":["export default {\n\thome: '/',\n\tdashboard: '/dashboard',\n\tvenue: '/venue/:venueSlug',\n\tvenuePath: (venueSlug) => `/venue/${venueSlug}`\n}","import Routes from '../routes'\n\nexport const isHomepage = location => (location.pathname === Routes.home)","export const headerStyles = (imageUrl, height) => {\n\treturn {\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexWrap: 'wrap',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tbackground: `linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url(/images/${imageUrl}) 50% 50% no-repeat`,\n\t\t\tbackgroundSize: 'cover',\n\t\t\theight: height,\n\t\t},\n\t\theaderText: {\n\t\t\tcolor: '#ffffff',\n\t\t},\n\t}\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport {headerStyles} from '../../utils/styleUtils'\n\nconst headerStyle = headerStyles('family-biking-cmp.jpg', '700px')\n\nexport default () => {\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>Experience</strong> childhood, again.\n\t\t\t</Typography>\n\t\t</div>)\n}","import React from 'react'\nimport Header from './homepage/header'\nexport default () => {\n\treturn (\n\t\t<div>\n\t\t\t<Header/>\n\t\t\t<div>homepage here</div>\n\t\t</div>\n\t)\n}","import gql from \"graphql-tag\"\n\nconst VenueDetails = gql`\n    fragment VenueDetails on Venue {\n        id\n        name\n        slug\n        streetAddress\n        zipcode\n        city\n        state\n        lat\n        lng\n        venueTypes {\n            id\n            name\n            image\n        }\n    }\n`\n\nexport const GET_VENUE_BASICS = gql`\n    query ($venueId: ID!) {\n        venue(id: $venueId) {\n            ...VenueDetails\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUE_BY_SLUG = gql`\n    query ($venueSlug: String!) {\n        venueBySlug(slug: $venueSlug) {\n            ...VenueDetails\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUES_FOR_CURRENT_USER = gql`\n    query {\n        me {\n            venues {\n                ...VenueDetails\n            }\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUE_TYPES = gql`\n    query {\n        venueTypes {\n            id\n            name\n            image\n        }\n    }\n`\n\nexport const GET_SIMILAR_VENUES_IN_RADIUS = gql`\n    query ($venueId: ID!, $limit: Int, $radius: Int) {\n        similarVenues(id: $venueId, first: $limit, radius: $radius) {\n            id\n            name\n            streetAddress\n            zipcode\n            city\n        }\n    }\n`","import React from 'react'\nimport { DirectionsRun, NearMe, Restaurant } from \"@material-ui/icons\"\n\nexport const venueMapLink = (venue) => {\n\tconst address = `${venue.streetAddress}, ${venue.city}, ${venue.state} ${venue.zipcode}`\n\treturn `https://maps.google.com/?q=${encodeURIComponent(address)}`\n}\n\nexport const venueIcon = (venue, cssClass) => {\n\tlet venueIconComponent\n\n\tswitch (venue.venueTypes[0].name) {\n\tcase 'restaurant':\n\t\tvenueIconComponent = <Restaurant className={cssClass}/>\n\t\tbreak\n\tcase 'outdoor playground':\n\t\tvenueIconComponent = <DirectionsRun className={cssClass}/>\n\t\tbreak\n\tdefault:\n\t\tvenueIconComponent = <NearMe className={cssClass}/>\n\t}\n\n\treturn venueIconComponent\n}\n\nexport const venueHeaderImage = venue => venue.venueTypes[0].image || 'restaurant-header-cmp.jpg'","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography } from \"@material-ui/core\"\n\nimport { venueMapLink, venueIcon } from '../../utils/venueUtils'\nimport { Link as RouterLink } from \"react-router-dom\"\nimport Routes from \"../../routes\"\n\nconst styles = {\n\t'@global': {\n\t\t'.venueItem': {\n\t\t\tmarginTop: '5px',\n\t\t\tmarginBottom: '5px',\n\t\t\tbackgroundColor: '#f6f6f6',\n\t\t\tpadding: '15px',\n\t\t},\n\t\t'.venueIcon': {\n\t\t\twidth: '15px',\n\t\t\theight: 'auto',\n\t\t\tmarginRight: '5px',\n\t\t\tposition: 'relative',\n\t\t\ttop: '2px',\n\t\t},\n\t},\n}\n\nconst VenueListItem = (props) => {\n\tconst { venue } = props\n\n\treturn (<div className='venueItem'>\n\t\t<div>\n\t\t\t<Typography\n\t\t\t\tvariant='h6'\n\t\t\t\tcomponent={RouterLink}\n\t\t\t\tto={Routes.venuePath(venue.slug)}>{venue.name}</Typography>\n\t\t</div>\n\t\t<div>\n\t\t\t{venueIcon(venue, 'venueIcon')}\n\t\t\t{(venue.venueTypes && venue.venueTypes.length) ? `${venue.venueTypes[0].name} in ` : ''}\n\t\t\t<a href={venueMapLink(venue)}\n\t\t\t\t target='_blank'\n\t\t\t\t rel=\"noopener noreferrer\">{venue.city}, {venue.state}</a>\n\t\t</div>\n\t</div>)\n}\n\nexport default withStyles(styles)(VenueListItem)","import gql from \"graphql-tag\"\n\nexport const GET_CITIES = gql`\n\tquery ($limit: Int, $query: String) {\n\t\tcities(first: $limit, query: $query) {\n\t\t\tid\n\t\t\tname\n\t\t\tstate\n\t\t}\n\t}\n`","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { GET_CITIES } from \"../../graphql/cityQueries\"\nimport { withApollo } from \"react-apollo\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\n\nconst style = {\n\tcontainer: {\n\t\tposition: 'relative',\n\t\twidth: '500px'\n\t},\n\tinput: {\n\t\tborder: '1px solid #ccc',\n\t\toutline: 'none',\n\t\twidth: '300px',\n\t\tpadding: '20px',\n\t\tfontSize: '17px',\n\t},\n\tsuggestionsContainer: {\n\t\tposition: 'absolute',\n\t\twidth: '300px',\n\t\ttop: 62,\n\t\tleft: 0,\n\t\tborder: '1px solid #efefef'\n\t},\n\tsuggestionItem: {\n\t\twidth: '100%',\n\t\tpadding: '10px'\n\t},\n\tformControl: {\n\t\tminWidth: '500px',\n\t\tmarginTop: '16px',\n\t\tmarginBottom: '8px',\n\t\theight: '16px'\n\t}\n}\n\nconst CityFormField = ({ client, onCitySelected }) => {\n\tconst [query, setQuery] = useState('')\n\tconst [selectedOption, setSelectedOption] = useState({})\n\tconst [options, setOptions] = useState([])\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getSuggestions = (query) => {\n\t\t\t\treturn client.query({\n\t\t\t\t\tquery: GET_CITIES,\n\t\t\t\t\tvariables: { limit: 10, query },\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (query && query.length >= 3) {\n\t\t\t\tgetSuggestions(query).then(({ data }) => {\n\t\t\t\t\tsetOptions(data.cities.map(city => {\n\t\t\t\t\t\treturn {value: city.id, label: `${city.name}, ${city.state}`}\n\t\t\t\t\t}))\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetOptions([])\n\t\t\t}\n\t\t},\n\t\t[query, client],\n\t)\n\n\tconst handleInputChange = (text) => {\n\t\tsetQuery(text)\n\t}\n\n\tconst handleOptionChange = option => {\n\t\tsetSelectedOption(option)\n\t\tonCitySelected(option)\n\t}\n\n\tconst hasOptions = () => options && options.length\n\n\treturn (\n\t\t<div style={style.container}>\n\t\t\t<FormControl style={style.formControl}>\n\t\t\t\t<InputLabel shrink={true}\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"age-simple\">City</InputLabel>\n\t\t\t</FormControl>\n\t\t\t<Select\n\t\t\t\tvalue={selectedOption}\n\t\t\t\tonChange={handleOptionChange}\n\t\t\t\toptions={options}\n\t\t\t\tonInputChange={handleInputChange}\n\t\t\t\tplaceholder=\"Type in name of city\"\n\t\t\t\tisClearable={true}\n\t\t\t\tmenuIsOpen={hasOptions()}\n\t\t\t\tescapeClearsValue={true}\n\t\t\t/>\n\n\t\t</div>\n\t)\n}\n\nexport default withApollo(CityFormField)","import React, { useState } from 'react'\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport { Query } from \"react-apollo\"\n\nimport { GET_VENUE_TYPES } from \"../../graphql/venueQueries\"\n\nconst style = {\n\tformControl: {\n\t\tminWidth: '500px',\n\t\tmarginTop: '16px',\n\t\tmarginBottom: '8px',\n\t}\n}\n\nexport default ({ onVenueTypeSelected }) => {\n\tconst [selectedOption, setSelectedOption] = useState('')\n\n\tconst handleOptionChange = option => {\n\t\tsetSelectedOption(option)\n\t\tonVenueTypeSelected(option)\n\t}\n\n\treturn (\n\t\t<Query query={GET_VENUE_TYPES}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\tconst venueTypes = data.venueTypes\n\n\t\t\t\treturn (\n\t\t\t\t\t<FormControl style={style.formControl}>\n\t\t\t\t\t\t<InputLabel htmlFor=\"age-simple\">Venue Type</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={selectedOption}\n\t\t\t\t\t\t\tonChange={event => handleOptionChange(event.target.value)}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\tid: 'venue-type',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{venueTypes.map(venueType => (\n\t\t\t\t\t\t\t\t<MenuItem key={venueType.id} value={venueType.id}>{venueType.name}</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Query>\n\t)\n}\n","import gql from \"graphql-tag\"\n\nexport const CREATE_VENUE_MUTATION = gql`\n    mutation CreateVenueMutation($name: String!, $streetAddress: String!, \n        $zipcode: Int!, $cityId: Int!, $typeId: Int!) {\n        createVenue (\n            name: $name\n            streetAddress: $streetAddress\n            zipcode: $zipcode\n            city: {\n                id: $cityId\n            }\n            venueType: {\n                id: $typeId\n            }\n        ) {\n            id\n            name\n            streetAddress\n            venueTypes {\n                name\n            }\n        }\n    }\n`\n","import React, { useState } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\nimport NumberFormat from 'react-number-format'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport CityFormField from './cityFormField'\nimport VenueTypeFormField from './venueTypeFormField'\nimport { CREATE_VENUE_MUTATION } from \"../../graphql/venueMutations\"\nimport Button from \"@material-ui/core/Button\"\n\nimport { validateVenue } from \"../../utils/validationUtils\"\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { GET_VENUES_FOR_CURRENT_USER } from \"../../graphql/venueQueries\"\n\nconst USER_ACTION_TEXT = 'Please enter information about a venue'\nconst USER_ACTION_TEXT_ERROR = 'Please enter valid venue information'\n\nconst style = {\n\tappBar: {\n\t\tposition: 'relative',\n\t},\n\ttitle: {\n\t\tmargin: '0 auto',\n\t},\n\tbody: {\n\t\tmargin: '0 auto',\n\t},\n\tinput: {\n\t\tminWidth: '500px',\n\t},\n}\n\nconst venueStub = {\n\tname: '',\n\ttype: {\n\t\tid: null,\n\t},\n\tstreetAddress: '',\n\tzipcode: '',\n\tlat: '',\n\tlng: '',\n\tcity: {},\n}\n\nexport default (props) => {\n\tconst [addVenue] = useMutation(CREATE_VENUE_MUTATION, {\n\t\tonError(error) {\n\t\t\tconsole.log('error', error)\n\t\t},\n\t\tonCompleted(data) {\n\t\t\tconsole.log('data', data)\n\t\t},\n\t\trefetchQueries: [{\n\t\t\tquery: GET_VENUES_FOR_CURRENT_USER,\n\t\t}],\n\t})\n\n\tconst [newVenue, setNewVenue] = useState({ ...venueStub })\n\tconst [userActionText, setUserActionText] = useState(USER_ACTION_TEXT)\n\n\tconst onCitySelected = city => {\n\t\tconsole.log('city selected:', city)\n\t\tsetNewVenue({ ...newVenue, city: { id: city.value } })\n\t}\n\n\tconst onVenueTypeSelected = venueTypeId => {\n\t\tconsole.log('venueTypeId selected:', venueTypeId)\n\t\tsetNewVenue({ ...newVenue, type: { id: venueTypeId } })\n\t}\n\n\tconst handleChange = name => event => {\n\t\tconsole.log(name, event.target.value)\n\t\tsetNewVenue({ ...newVenue, [name]: event.target.value })\n\t}\n\n\tconst onSubmit = () => {\n\t\tif(validateVenue(newVenue)) {\n\t\t\taddVenue({\n\t\t\t\tvariables: {\n\t\t\t\t\tname: newVenue.name,\n\t\t\t\t\ttypeId: newVenue.type.id,\n\t\t\t\t\tstreetAddress: newVenue.streetAddress,\n\t\t\t\t\tzipcode: parseInt(newVenue.zipcode),\n\t\t\t\t\tcityId: newVenue.city.id,\n\t\t\t\t},\n\t\t\t}).then(response => {\n\t\t\t\tconsole.log('response', response)\n\n\t\t\t\tsetNewVenue({ ...venueStub })\n\n\t\t\t\tprops.toggleDialog()\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tsetUserActionText(USER_ACTION_TEXT_ERROR)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.open}\n\t\t\tonClose={props.toggleDialog}\n\t\t\tfullScreen={true}\n\t\t\taria-labelledby=\"form-dialog-title\">\n\t\t\t<AppBar style={style.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={props.toggleDialog} aria-label=\"close\">\n\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<DialogTitle style={style.title}>Add New Destination</DialogTitle>\n\t\t\t<DialogContent style={style.body}>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{userActionText}\n\t\t\t\t</DialogContentText>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"venue-name\"\n\t\t\t\t\tlabel=\"Venue name\"\n\t\t\t\t\tvalue={newVenue.name}\n\t\t\t\t\tonChange={handleChange('name')}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tstyle={style.input}\n\t\t\t\t/>\n\t\t\t\t<br/>\n\t\t\t\t<VenueTypeFormField onVenueTypeSelected={onVenueTypeSelected}/>\n\t\t\t\t<br/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"venue-street-address\"\n\t\t\t\t\tname=\"street-address\"\n\t\t\t\t\tlabel=\"Street address\"\n\t\t\t\t\tvalue={newVenue.streetAddress}\n\t\t\t\t\tonChange={handleChange('streetAddress')}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tautoComplete=\"shipping street-address\"\n\t\t\t\t\tstyle={style.input}\n\t\t\t\t/>\n\t\t\t\t<CityFormField onCitySelected={onCitySelected}/>\n\n\t\t\t\t<NumberFormat customInput={TextField}\n\t\t\t\t\t\t\t\t\t\t\tid=\"venue-zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={newVenue.zipcode}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('zipcode')}\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={style.input}\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"postal-code\"\n\t\t\t\t\t\t\t\t\t\t\tformat=\"#####\"/>\n\t\t\t\t<div>\n\t\t\t\t\t<Button color='primary' onClick={onSubmit}>\n\t\t\t\t\t\tCreate venue\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t)\n}\n","export const validateVenue = ({ name, type, streetAddress, city, zipcode }) => {\n\tlet valid = {\n\t\tname: false,\n\t\ttype: false,\n\t\tstreetAddress: false,\n\t\tcity: false,\n\t\tzipcode: false\n\t}\n\n\tif (name && name.length >= 2) {\n\t\tvalid.name = true\n\t}\n\n\tif(type && type.id) {\n\t\tvalid.type = true\n\t}\n\n\tif(streetAddress && streetAddress.length >= 2) {\n\t\tvalid.streetAddress = true\n\t}\n\n\tif(city && city.id) {\n\t\tvalid.city = true\n\t}\n\n\tif(zipcode && !isNaN(parseInt(zipcode))) {\n\t\tvalid.zipcode = true\n\t}\n\n\treturn (Object.values(valid).indexOf(false) === -1)\n}","import React from 'react'\nimport AppBar from \"@material-ui/core/AppBar/AppBar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { withStyles } from \"@material-ui/core\"\n\nconst styles = {\n\tappBar: {\n\t\tboxShadow: \"none\",\n\t\tfloat: \"left\",\n\t\twidth: '300px',\n\t},\n\ttabIndicator: {\n\t\tbackgroundColor: '#ffffff',\n\t},\n}\n\nconst VenueTypeTabs = ({ classes, venues, venueTypeFilter, onSetVenueTypeFilter }) => {\n\tconst handleVenueTypeClick = (e, value) => {\n\t\tonSetVenueTypeFilter(value)\n\t}\n\n\tconst getVenueTypes = venues => {\n\t\tlet results = {}\n\n\t\tfor (let x = 0; x < venues.length; x++) {\n\t\t\tif ((venues[x].venueTypes && venues[x].venueTypes.length)) {\n\t\t\t\tif (results[venues[x].venueTypes[0].name]) {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name].venues.push(venues[x])\n\t\t\t\t} else {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name] = {\n\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\tid: venues[x].venueTypes[0].id,\n\t\t\t\t\t\t\tname: venues[x].venueTypes[0].name,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvenues: [venues[x]],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Object.keys(results)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Tabs value={venueTypeFilter}\n\t\t\t\t\t\t\tonChange={handleVenueTypeClick}\n\t\t\t\t\t\t\tclasses={{ indicator: classes.tabIndicator }}\n\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\tscrollButtons=\"auto\">\n\t\t\t\t\t<Tab label='all' value='all'/>\n\t\t\t\t\t{getVenueTypes(venues).sort().map((type, index) => (\n\t\t\t\t\t\t<Tab label={type} value={type} key={index}/>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default withStyles(styles)(VenueTypeTabs)","import React, { useState } from 'react'\nimport { Query } from \"react-apollo\"\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Add } from \"@material-ui/icons\"\nimport { GET_VENUES_FOR_CURRENT_USER } from '../graphql/venueQueries'\n\nimport VenueListItem from './dashboard/venueListItem'\nimport AddVenueDialog from './dashboard/addVenueDialog'\nimport VenueTypeTabs from './dashboard/venueTypeTabs'\n\nconst pageStyle = {\n\tsectionHeader: {\n\t\tmarginBottom: '15px',\n\t\tdisplay: 'flex',\n\t},\n\tsectionHeaderTitle: {\n\t\tflexGrow: 2,\n\t},\n\tvenueList: {\n\t\tmarginLeft: '320px'\n\t}\n}\n\nexport default () => {\n\tconst [dialogOpen, setDialogOpen] = useState(false)\n\tconst [venueTypeFilter, setVenueTypeFilter] = useState('all')\n\n\tconst toggleDialog = () => {\n\t\tsetDialogOpen(!dialogOpen)\n\t}\n\n\treturn (\n\t\t<Query query={GET_VENUES_FOR_CURRENT_USER}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\tconst venues = data.me.venues.sort((a, b) => {\n\t\t\t\t\tif (a.name > b.name) return 1\n\t\t\t\t\tif (b.name > a.name) return -1\n\t\t\t\t\treturn 0\n\t\t\t\t})\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className='mainContainer'>\n\t\t\t\t\t\t<div className='mainContent'>\n\t\t\t\t\t\t\t<div style={pageStyle.sectionHeader}>\n\t\t\t\t\t\t\t\t<Typography variant='h5' style={pageStyle.sectionHeaderTitle}>My destinations</Typography>\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={toggleDialog}>\n\t\t\t\t\t\t\t\t\t<Add/>\n\t\t\t\t\t\t\t\t\tAdd Destination\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<AddVenueDialog\n\t\t\t\t\t\t\t\t\topen={dialogOpen}\n\t\t\t\t\t\t\t\t\ttoggleDialog={toggleDialog}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<VenueTypeTabs\n\t\t\t\t\t\t\t\tvenues={venues}\n\t\t\t\t\t\t\t\tonSetVenueTypeFilter={setVenueTypeFilter}\n\t\t\t\t\t\t\t\tvenueTypeFilter={venueTypeFilter}></VenueTypeTabs>\n\t\t\t\t\t\t\t<div style={pageStyle.venueList}>\n\t\t\t\t\t\t\t\t{venues\n\t\t\t\t\t\t\t\t\t.filter(venue => (venueTypeFilter === 'all' || venue.venueTypes[0].name === venueTypeFilter ))\n\t\t\t\t\t\t\t\t\t.map(venue => (\n\t\t\t\t\t\t\t\t\t<VenueListItem key={venue.id} venue={venue}/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Query>\n\t)\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport { headerStyles } from '../../utils/styleUtils'\nimport { venueHeaderImage } from '../../utils/venueUtils'\n\nexport default (props) => {\n\tconst { venue } = props\n\tconst headerStyle = headerStyles(venueHeaderImage(venue), '300px')\n\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>{venue.name}</strong>\n\t\t\t</Typography>\n\t\t</div>)\n}","import React, { useState, useEffect } from 'react'\nimport { withApollo } from \"react-apollo\"\nimport { GET_SIMILAR_VENUES_IN_RADIUS } from \"../../graphql/venueQueries\"\n\nconst SimilarVenues = ({ client, venue }) => {\n\tconst [similarVenues, setSimilarVenues] = useState([])\n\tuseEffect(\n\t\t() => {\n\t\t\tclient.query({\n\t\t\t\tquery: GET_SIMILAR_VENUES_IN_RADIUS,\n\t\t\t\tvariables: { venueId: venue.id, limit: 5, radius: 10 },\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tsetSimilarVenues(data.similarVenues)\n\t\t\t\t})\n\t\t},\n\t\t[venue, client],\n\t)\n\n\treturn <div>\n\t\t<h3>Similar places near by</h3>\n\t\t<div>\n\t\t\t{similarVenues && similarVenues.map(venue => (\n\t\t\t\t<div key={venue.id}>{venue.name}</div>\n\t\t\t))}\n\t\t</div>\n\t</div>\n}\n\nexport default withApollo(SimilarVenues)","import React from 'react'\nimport { Query } from \"react-apollo\"\nimport Typography from '@material-ui/core/Typography'\nimport { GET_VENUE_BY_SLUG } from '../graphql/venueQueries'\n\nimport VenueHeader from './venue/header'\nimport SimilarVenues from './venue/similarVenues'\n\nconst pageStyle = {\n\tsectionHeader: {\n\t\tmarginBottom: '15px',\n\t},\n\tcolumnWrapper: {\n\t\tdisplay: 'flex'\n\t},\n\tmainColumn: {\n\t\tflexGrow: 3\n\t},\n\tsideColumm: {\n\t\tflexGrow: 1\n\t}\n}\n\n\nexport default ({ match }) => {\n\tconst venueSlug = match.params.venueSlug\n\n\tif (!venueSlug) {\n\t\treturn (<div>Venue not found.</div>)\n\t} else {\n\t\treturn (\n\t\t\t<Query query={GET_VENUE_BY_SLUG} variables={{ venueSlug }}>\n\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\t\tconst venue = data.venueBySlug\n\t\t\t\t\tconsole.log('data', data)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<VenueHeader venue={venue}/>\n\t\t\t\t\t\t\t<div className='mainContainer'>\n\t\t\t\t\t\t\t\t<div className='mainContent'>\n\t\t\t\t\t\t\t\t\t<Typography variant='h5' style={pageStyle.sectionHeader}>{venue.name}</Typography>\n\t\t\t\t\t\t\t\t\t<div style={pageStyle.columnWrapper}>\n\t\t\t\t\t\t\t\t\t\t<div style={pageStyle.mainColumn}>\n\t\t\t\t\t\t\t\t\t\t\tmain\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style={pageStyle.sideColumm}>\n\t\t\t\t\t\t\t\t\t\t\t<SimilarVenues venue={venue} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t)\n\t}\n}","import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\n\nexport default createMuiTheme({\n\t\tpalette: {\n\t\t\tprimary: {\n\t\t\t\tmain: blue[500],\n\t\t\t},\n\t\t\tbackground: { default: '#ffffff'},\n\t\t},\n\t\ttypography: {\n\t\t\tuseNextVariants: true,\n\t\t},\n\t},\n)","import gql from \"graphql-tag\"\n\nexport const CURRENT_USER_QUERY = gql`\n\tquery {\n\t\t\tcurrentUser @client {\n\t\t\t\t\tid\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t}\n\t}\n`","import { AUTH_TOKEN, USER_INFO } from \"../constants\"\nimport { graphql } from \"react-apollo\"\nimport { compose } from \"recompose\"\nimport { CURRENT_USER_QUERY } from \"../graphql/userQueries\"\n\nexport const isUserLoggedIn = () => !!localStorage.getItem(AUTH_TOKEN)\n\nexport const logoutUser = () => {\n\tlocalStorage.removeItem(AUTH_TOKEN)\n\tlocalStorage.removeItem(USER_INFO)\n}\n\nexport const setUserInfo = (token, user) => {\n\tlocalStorage.setItem(AUTH_TOKEN, token)\n\tlocalStorage.setItem(USER_INFO, JSON.stringify(user))\n}\n\nexport const getUserInfoFromStorage = () => {\n\tconst userInfo = localStorage.getItem(USER_INFO)\n\n\tif (userInfo) {\n\t\treturn JSON.parse(userInfo)\n\t} else {\n\t\treturn {\n\t\t\t__typename: 'User',\n\t\t\tid: null,\n\t\t\tfirstName: null,\n\t\t\tlastName: null,\n\t\t\temail: null,\n\t\t}\n\t}\n}\n\nexport const withCurrentUser = (WrappedComponent) => {\n\treturn compose(\n\t\tgraphql(CURRENT_USER_QUERY, {\n\t\t\tprops: ({ data: { currentUser } }) => ({\n\t\t\t\tcurrentUser,\n\t\t\t}),\n\t\t}),\n\t)(WrappedComponent)\n}","export const AUTH_TOKEN = 'auth-token'\nexport const USER_INFO = 'user-info'","import gql from \"graphql-tag\"\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation($email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n        signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation LoginMutation($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\n\nimport { setUserInfo } from '../../utils/userUtils'\nimport Routes from \"../../routes\"\nimport { Mutation } from 'react-apollo'\nimport { SIGNUP_MUTATION, LOGIN_MUTATION } from \"../../graphql/userMutations\"\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst styles = {\n\tdialogMainContent: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tdialogMainError: {\n\t\ttextAlign: 'center',\n\t},\n}\n\nclass LoginDialog extends Component {\n\tstate = {\n\t\tlogin: true, // switch between Login and SignUp\n\t\temail: '',\n\t\tpassword: '',\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\terrorMessage: null,\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.open !== this.props.open) {\n\t\t\tthis.setState({ errorMessage: null })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { login, email, password, firstName, lastName, errorMessage } = this.state\n\t\tconst { classes } = this.props\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={this.props.open}\n\t\t\t\tonClose={this.props.toggleDialog}\n\t\t\t\tmaxWidth='sm' fullWidth={true}\n\t\t\t\taria-labelledby=\"form-dialog-title\">\n\t\t\t\t<DialogTitle id=\"login-dialog-title\">{login ? 'Login' : 'Sign Up'}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t{errorMessage && (\n\t\t\t\t\t\t<DialogContentText className={classes.dialogMainError}>{errorMessage}</DialogContentText>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className={classes.dialogMainContent}>\n\t\t\t\t\t\t{!login && (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\tonChange={e => this.setState({ firstName: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\tonChange={e => this.setState({ lastName: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={e => this.setState({ email: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\tonChange={e => this.setState({ password: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => this.setState({ login: !login, errorMessage: null })}\n\t\t\t\t\t\tcolor=\"primary\" style={{ marginRight: 'auto' }}>\n\t\t\t\t\t\t{login\n\t\t\t\t\t\t\t? 'need to create an account?'\n\t\t\t\t\t\t\t: 'already have an account?'}\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button onClick={this.props.toggleDialog} color=\"primary\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Mutation\n\t\t\t\t\t\tmutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n\t\t\t\t\t\tvariables={{ email, password, firstName, lastName }}\n\t\t\t\t\t\tupdate={(cache, { data }) => this._update(cache, (login ? data.login : data.signup))}\n\t\t\t\t\t\tonCompleted={data => this._confirm(data)}\n\t\t\t\t\t\tonError={error => this._error(error)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{mutation => (\n\t\t\t\t\t\t\t<Button color='primary' onClick={mutation}>\n\t\t\t\t\t\t\t\t{login ? 'login' : 'create account'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Mutation>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t)\n\t}\n\n\t_update = async (cache, info) => {\n\t\tcache.writeData({\n\t\t\tdata: {\n\t\t\t\tcurrentUser: {\n\t\t\t\t\t...info.user,\n\t\t\t\t\ttoken: info.token,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t}\n\n\t_confirm = async data => {\n\t\tthis.state.error = null\n\n\t\tconst { token, user } = this.state.login ? data.login : data.signup\n\t\tthis._saveUserData(token, user)\n\n\t\tdocument.location = Routes.dashboard\n\t}\n\n\t_saveUserData = (token, user) => {\n\t\tsetUserInfo(token, user)\n\t}\n\n\t_error = async ({ graphQLErrors }) => {\n\t\tif (this.state.login && graphQLErrors && graphQLErrors[0] && graphQLErrors[0].message) {\n\t\t\tthis.setState({ errorMessage: graphQLErrors[0].message })\n\t\t} else if (graphQLErrors && graphQLErrors[0] && graphQLErrors[0].extensions.exception.errors[0].message) {\n\t\t\tthis.setState({ errorMessage: graphQLErrors[0].extensions.exception.errors[0].message })\n\t\t}\n\t}\n}\n\nexport default withRouter(withStyles(styles)(LoginDialog))","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router'\nimport { isUserLoggedIn, withCurrentUser } from \"../../utils/userUtils\"\nimport LoginDialog from './loginDialog'\nimport Typography from '@material-ui/core/Typography'\n\nclass LoginButton extends Component {\n\tstate = {\n\t\tdialogOpen: false,\n\t}\n\n\ttoggleDialog = () => {\n\t\tthis.setState({ dialogOpen: !this.state.dialogOpen })\n\t}\n\n\trenderUserInfo = (currentUser) => {\n\t\tif (currentUser && currentUser.id) {\n\t\t\treturn `Welcome, ${currentUser.firstName}`\n\t\t} else {\n\t\t\treturn ''\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { currentUser } = this.props\n\n\t\treturn (isUserLoggedIn() ? (\n\t\t\t<Typography\n\t\t\t\tvariant=\"button\"\n\t\t\t\tcolor=\"inherit\" className={this.props.className}>{this.renderUserInfo(currentUser)}</Typography>\n\t\t) : (\n\t\t\t<span>\n\t\t\t<Button\n\t\t\t\tonClick={this.toggleDialog}\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tcolor=\"inherit\">\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t\t<LoginDialog\n\t\t\t\topen={this.state.dialogOpen}\n\t\t\t\ttoggleDialog={this.toggleDialog}/>\n\t\t\t</span>\n\t\t))\n\t}\n}\n\nexport default withCurrentUser(withRouter(LoginButton))","import React, { Component } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport LoginButton from '../components/shared/loginButton'\nimport { logoutUser, isUserLoggedIn } from \"../utils/userUtils\"\nimport { withRouter } from \"react-router\"\n\nimport Routes from '../routes'\n\nclass ButtonAppBar extends Component {\n\tstate = {\n\t\tanchorEl: null,\n\t}\n\n\ttoggleMenu = (event) => {\n\t\tthis.state.anchorEl ? this.setState({ anchorEl: null }) : this.setState({ anchorEl: event.currentTarget })\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar position=\"fixed\" style={{ background: 'transparent', boxShadow: 'none' }}>\n\t\t\t\t\t<Toolbar variant=\"dense\" className={classes.container}>\n\t\t\t\t\t\t<Typography className={classes.logoText} variant=\"button\" color=\"inherit\">KidTrip</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" className={classes.grow}></Typography>\n\t\t\t\t\t\t<LoginButton className={classes.loginButton}/>\n\n\t\t\t\t\t\t{isUserLoggedIn() && (\n\t\t\t\t\t\t\t<span className={classes.menuWrapper}>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tonClick={this.toggleMenu}\n\t\t\t\t\t\t\t\tclassName={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n\t\t\t\t\t\t\t\t<MenuIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\t\t\tanchorEl={this.state.anchorEl}\n\t\t\t\t\t\t\t\topen={Boolean(this.state.anchorEl)}\n\t\t\t\t\t\t\t\tonClose={this.toggleMenu}>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink} to={Routes.home} onClick={this.toggleMenu}>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink} to={Routes.dashboard} onClick={this.toggleMenu}>\n\t\t\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={this.toggleMenu}>My account</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => {\n\t\t\t\t\t\t\t\t\tlogoutUser()\n\t\t\t\t\t\t\t\t\tthis.props.history.push(`/`)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withRouter(ButtonAppBar)","import React from 'react'\nimport { isHomepage } from '../utils/routeUtils'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nimport AppBar from './appBar'\n\nconst styles = {\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginLeft: -12,\n\t\tmarginRight: 20,\n\t},\n\tmenuWrapper: {\n\t\tmarginLeft: 15\n\t}\n}\n\nconst nonHomepageStyles = {\n\t...styles,\n\tcontainer: {\n\t\tborderBottom: '1px solid',\n\t\tborderBottomColor: blueGrey[100],\n\t\tbackgroundColor: 'white'\n\t},\n\tgrow: {\n\t\t...styles.grow,\n\t\tcolor: blueGrey[500],\n\t},\n\tmenuButton: {\n\t\t...styles.menuButton,\n\t\tcolor: blueGrey[500],\n\t},\n\tloginButton: {\n\t\tcolor: blueGrey[500],\n\t},\n\tlogoText: {\n\t\tcolor: blueGrey[500],\n\t},\n}\n\nconst AppBarContainer = (props) => {\n\tconst currentStyles = isHomepage(props.location) ? styles : nonHomepageStyles\n\tconst AppBarWithStyles = withStyles(currentStyles)(AppBar)\n\treturn (<AppBarWithStyles/>)\n}\n\nexport default withRouter(AppBarContainer)","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport Routes from './routes'\nimport { isHomepage } from './utils/routeUtils'\n\nimport HomePage from './components/homePage'\nimport DashboardPage from './components/dashboardPage'\nimport VenuePage from './components/venuePage'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\nimport theme from './theme'\nimport AppBar from './layout/appBarContainer'\n\nconst styles = {\n\t'@global': {\n\t\tbody: {\n\t\t\tfontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n\t\t},\n\t\t'.mainContainer': {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t},\n\t\t'.mainContent': {\n\t\t\tmaxWidth: '1200px',\n\t\t\tflexGrow: '1',\n\t\t\tmargin: '50px',\n\t\t},\n\t},\n\tappBarSpacer: {\n\t\theight: '49px',\n\t},\n}\n\nclass App extends Component {\n\trender() {\n\t\tconst { classes, location } = this.props\n\n\t\treturn (\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t<div>\n\t\t\t\t\t<CssBaseline/>\n\t\t\t\t\t<AppBar/>\n\t\t\t\t\t{!isHomepage(location) && (\n\t\t\t\t\t\t<div className={classes.appBarSpacer}></div>\n\t\t\t\t\t)}\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path={Routes.home} component={HomePage}/>\n\t\t\t\t\t\t<Route exact path={Routes.dashboard} component={DashboardPage}/>\n\t\t\t\t\t\t<Route path={Routes.venue} component={VenuePage}/>\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</MuiThemeProvider>\n\t\t)\n\t}\n}\n\nexport default withRouter(withStyles(styles)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport { ApolloProvider } from 'react-apollo'\nimport { withClientState } from \"apollo-link-state\"\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport { getUserInfoFromStorage } from \"./utils/userUtils\"\nimport { AUTH_TOKEN } from \"./constants\"\n\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST\n\nconst cache = new InMemoryCache()\n\nconst defaultState = {\n\tcurrentUser: { ...getUserInfoFromStorage() },\n}\n\nconst stateLink = withClientState({\n\tcache,\n\tdefaults: defaultState,\n\tresolvers: {\n\t\tMutation: {\n\t\t\tupdateUserInfo: (_, { id, firstName, lastName, email }, { cache }) => {\n\t\t\t\tconst data = {\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t__typename: 'User',\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tfirstName,\n\t\t\t\t\t\tlastName,\n\t\t\t\t\t\temail,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t\tcache.writeData({ data })\n\t\t\t\treturn null\n\t\t\t},\n\t\t},\n\t},\n})\n\nconst token = localStorage.getItem(AUTH_TOKEN)\nconst httpLink = new HttpLink({\n\turi: SERVER_HOST, // || 'http://localhost:4000',\n\tcredentials: 'same-origin',\n\theaders: {\n\t\tauthorization: token ? `Bearer ${token}` : '',\n\t},\n})\n\nconst client = new ApolloClient({\n\tlink: ApolloLink.from([\n\t\tonError(({ graphQLErrors, networkError }) => {\n\t\t\tif (graphQLErrors)\n\t\t\t\tgraphQLErrors.map(({ message, locations, path }) =>\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\tif (networkError) console.log(`[Network error]: ${networkError}`)\n\t\t}),\n\t\tstateLink,\n\t\thttpLink,\n\t]),\n\tcache: new InMemoryCache(),\n\tresolvers: {},\n})\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<ApolloProvider client={client}>\n\t\t\t<App/>\n\t\t</ApolloProvider>\n\t</BrowserRouter>\n\t, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
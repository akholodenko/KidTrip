{"version":3,"sources":["routes.js","utils/routeUtils.js","utils/styleUtils.js","components/homepage/header.js","components/homepage/valueProp/valuePropSection.js","components/homepage/valueProp.js","graphql/userQueries.js","utils/userUtils.js","constants.js","components/homepage/signup.js","components/homePage.js","graphql/cityQueries.js","components/dashboard/cityFormField.js","graphql/venueQueries.js","components/dashboard/venueTypeFormField.js","graphql/venueMutations.js","components/dashboard/addVenueDialog.js","utils/validationUtils.js","components/dashboard/venueTypeTabs.js","utils/venueUtils.js","components/dashboard/venueListItem.js","components/dashboard/venueList.js","graphql/userMutations.js","components/dashboard/feedItem.js","utils/dateUtils.js","components/dashboard/venueTypeMultiFormField.js","components/dashboard/feedConfigurator.js","components/dashboard/feed.js","components/dashboardPage.js","components/venue/header.js","components/venue/similarVenues.js","components/venue/locationInfo.js","components/venue/favoriteButton.js","components/venuePage.js","theme.js","components/shared/loginDialog.js","components/shared/loginButton.js","layout/appBar.js","layout/appBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["section","venueSlug","options","fallback","Object","values","includes","isHomepage","location","pathname","Routes","headerStyles","imageUrl","height","container","display","flexWrap","flexDirection","justifyContent","alignItems","background","backgroundSize","headerText","color","headerStyle","style","Typography","variant","props","title","icon","text","iconStyle","width","className","discoverContent","trackContent","shareContent","CURRENT_USER_QUERY","gql","CURRENT_USER_FEED_CONFIG_QUERY","isUserLoggedIn","localStorage","getItem","onClick","event","Event","window","dispatchEvent","openSignUpDialog","GET_CITIES","position","formControl","minWidth","marginTop","marginBottom","withApollo","client","onCitySelected","isMulti","fieldLabel","placeholder","containerWidth","containerDisplay","initialValue","useState","query","setQuery","selectedOption","setSelectedOption","setOptions","useEffect","length","variables","limit","getSuggestions","then","data","cities","map","city","value","id","label","name","state","Array","isArray","FormControl","InputLabel","shrink","htmlFor","defaultValue","onChange","option","onInputChange","isClearable","menuIsOpen","escapeClearsValue","VenueDetails","VenueStats","GET_VENUE_BY_SLUG","GET_VENUES_FOR_CURRENT_USER","GET_VENUE_TYPES","GET_SIMILAR_VENUES_IN_RADIUS","GET_FEED_VENUES","onVenueTypeSelected","loading","error","message","venueTypes","Select","handleOptionChange","target","inputProps","venueType","MenuItem","key","CREATE_VENUE_MUTATION","CREATE_USER_VENUE_FAVORITE_MUTATION","DELETE_USER_VENUE_FAVORITE_MUTATION","appBar","margin","body","input","venueStub","type","streetAddress","zipcode","lat","lng","open","toggleDialog","onCreatedVenue","useMutation","onError","console","log","onCompleted","refetchQueries","awaitRefetchQueries","addVenue","newVenue","setNewVenue","userActionText","setUserActionText","handleChange","Dialog","onClose","fullScreen","aria-labelledby","AppBar","Toolbar","IconButton","edge","aria-label","DialogTitle","DialogContent","DialogContentText","TextField","venueTypeId","autoComplete","customInput","format","Button","valid","isNaN","parseInt","indexOf","validateVenue","typeId","cityId","response","withStyles","boxShadow","float","tabIndicator","backgroundColor","classes","venues","venueTypeFilter","onSetVenueTypeFilter","Fragment","Tabs","e","indicator","orientation","scrollButtons","Tab","results","x","push","keys","getVenueTypes","sort","index","venueMapLink","venue","address","encodeURIComponent","venueCityState","border","borderRadius","padding","marginRight","fontSize","fontWeight","lineHeight","textDecoration","marginLeft","textTransform","textAlign","top","showDeleteFavoriteButton","onDeleteFavoriteCallback","update","store","deleteUserVenueFavorite","updateFavoriteStats","deleteFavorite","venueStats","readQuery","slug","venueBySlug","writeQuery","venueId","to","cssClass","venueIconComponent","Restaurant","Museum","Pets","DirectionsWalk","Nature","NaturePeople","DirectionsRun","NearMe","venueIcon","href","rel","currentDashboardSection","isFavoritesDashboardSection","externalTriggerVenueRefresh","setVenueTypeFilter","setVenues","triggerVenueRefresh","setTriggerVenueRefresh","me","favoriteVenues","onDeleteFavorite","filter","SIGNUP_MUTATION","LOGIN_MUTATION","UPDATE_CURRENT_USER_FEED_CONFIG_MUTATION","borderBottom","timestamp","Date","diffSeconds","getTime","Math","round","toLocaleDateString","year","month","day","sinceCreated","createdAt","user","creator","firstName","lastName","defaultVenueTypeIds","split","isSearchable","FeedConfigurator","feedConfiguration","onFeedConfigurationUpdated","cityIds","setCityIds","venueTypeIds","setVenueTypeIds","ids","join","cityDetails","maxWidth","feedConfigInitialized","setFeedConfigInitialized","feedVenues","setFeedVenues","first","setFeedConfiguration","updateCurrentUserFeedConfigMutation","userFeedConfig","newFeedConfiguration","DASHBOARD_SECTION","FEED","FOLLOWED_DESTINATIONS","MY_DESTINATIONS","FAVORITES","flexGrow","cursor","letterSpacing","match","params","dialogOpen","setDialogOpen","setExternalTriggerVenueRefresh","renderDashboardSection","dashboardSection","Add","image","venueHeaderImage","similarVenues","setSimilarVenues","radius","LocationInfo","separator","venueAddress","favoriteByCurrentUser","onUpdateFavoritesStats","createUserVenueFavorite","addFavorite","preventDefault","pageStyle","sectionHeader","columnWrapper","mainColumn","sideColumm","setVenue","venueTypeName","setVenueTypeName","venuePrimaryTypeName","favorites","thousandSeparator","displayType","pluralize","description","createMuiTheme","palette","primary","main","blue","default","typography","useNextVariants","LoginDialog","Component","login","undefined","this","email","password","errorMessage","_update","cache","info","a","writeData","currentUser","token","_confirm","signup","_saveUserData","document","setItem","JSON","stringify","setUserInfo","_error","graphQLErrors","setState","extensions","exception","errors","componentDidUpdate","prevProps","render","fullWidth","dialogMainError","dialogMainContent","DialogActions","mutation","withRouter","LoginButton","renderUserInfo","componentDidMount","callback","addEventListener","withCurrentUser","WrappedComponent","compose","graphql","ButtonAppBar","anchorEl","toggleMenu","currentTarget","root","logoText","grow","loginButton","menuWrapper","menuButton","Boolean","component","RouterLink","removeItem","history","styles","nonHomepageStyles","borderBottomColor","blueGrey","currentStyles","AppBarWithStyles","App","theme","CssBaseline","appBarSpacer","exact","path","HomePage","DashboardPage","VenuePage","fontFamily","hostname","InMemoryCache","defaultState","userInfo","parse","__typename","getUserInfoFromStorage","stateLink","withClientState","defaults","resolvers","Mutation","updateUserInfo","_","httpLink","HttpLink","uri","process","credentials","headers","authorization","ApolloClient","link","ApolloLink","from","networkError","locations","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.24365b96.chunk.js","sourcesContent":["export default {\n  home: '/',\n  dashboard: '/dashboard/:section?',\n  dashboardPath: section => `/dashboard/${section}`,\n  venue: '/venue/:venueSlug',\n  venuePath: venueSlug => `/venue/${venueSlug}`,\n  validatePageSection: (section, options, fallback) =>\n    Object.values(options).includes(section) ? section : fallback\n}\n","import Routes from '../routes'\n\nexport const isHomepage = location => location.pathname === Routes.home\n","export const headerStyles = (imageUrl, height) => {\n\treturn {\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexWrap: 'wrap',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tbackground: `linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url(/images/${imageUrl}) 50% 50% no-repeat`,\n\t\t\tbackgroundSize: 'cover',\n\t\t\theight: height,\n\t\t},\n\t\theaderText: {\n\t\t\tcolor: '#ffffff',\n\t\t},\n\t}\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport {headerStyles} from '../../utils/styleUtils'\n\nconst headerStyle = headerStyles('family-biking-cmp.jpg', '700px')\n\nexport default () => {\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>Experience</strong> childhood, again.\n\t\t\t</Typography>\n\t\t</div>)\n}","import React from \"react\";\n\nimport \"./valuePropSection.css\";\n\nexport default props => {\n  const { title, icon, text } = props;\n  const iconStyle = {\n    background: `url(/images/icons/${icon}.png) 0% 0% / 60px 60px no-repeat`,\n    width: \"60px\",\n    height: \"60px\"\n  };\n\n  return (\n    <div className=\"value-prop-section\">\n      <div className=\"value-prop-title\">{title}</div>\n      <div className=\"value-prop-icon\" style={iconStyle}></div>\n      <div className=\"value-prop-text\">{text}</div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport ValuePropSection from \"./valueProp/valuePropSection\";\nimport \"./valueProp.css\";\n\nconst discoverContent = {\n  title: \"Discover\",\n  icon: \"discover\",\n  text: `Find out about great local places to visit with your family. From restaurants, to museums, \n\tparks and playgrounds, make the most of your time!`\n};\n\nconst trackContent = {\n  title: \"Track\",\n  icon: \"track\",\n  text: `Had a great time sharing a meal with your family or enjoyed a hiking trail? Jot it down to build your \n\troster of go-to places for your trips.`\n};\n\nconst shareContent = {\n  title: \"Share\",\n  icon: \"share\",\n  text: `Share your favorite places to visit with friends and family, and hear about what others are \n\tenjoying, for great new ideas.`\n};\n\nexport default () => {\n  return (\n    <div className=\"value-prop-container\">\n      <ValuePropSection {...discoverContent} />\n      <ValuePropSection {...trackContent} />\n      <ValuePropSection {...shareContent} />\n    </div>\n  );\n};\n","import gql from 'graphql-tag'\n\nexport const CURRENT_USER_QUERY = gql`\n  query {\n    currentUser @client {\n      id\n      firstName\n      lastName\n    }\n  }\n`\n\nexport const CURRENT_USER_FEED_CONFIG_QUERY = gql`\n  query {\n    userFeedConfig {\n      cityIds\n      venueTypeIds\n      cityDetails {\n        id\n        name\n        state\n      }\n    }\n  }\n`\n","import { AUTH_TOKEN, USER_INFO } from '../constants'\nimport { graphql } from 'react-apollo'\nimport { compose } from 'recompose'\nimport { CURRENT_USER_QUERY } from '../graphql/userQueries'\n\nexport const isUserLoggedIn = () => !!localStorage.getItem(AUTH_TOKEN)\n\nexport const logoutUser = () => {\n  localStorage.removeItem(AUTH_TOKEN)\n  localStorage.removeItem(USER_INFO)\n}\n\nexport const setUserInfo = (token, user) => {\n  localStorage.setItem(AUTH_TOKEN, token)\n  localStorage.setItem(USER_INFO, JSON.stringify(user))\n}\n\nexport const getUserInfoFromStorage = () => {\n  const userInfo = localStorage.getItem(USER_INFO)\n\n  if (userInfo) {\n    return JSON.parse(userInfo)\n  } else {\n    return {\n      __typename: 'User',\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null\n    }\n  }\n}\n\nexport const withCurrentUser = WrappedComponent => {\n  return compose(\n    graphql(CURRENT_USER_QUERY, {\n      props: ({ data: { currentUser } }) => ({\n        currentUser\n      })\n    })\n  )(WrappedComponent)\n}\n\nexport const listenForOpenSignUpDialog = callback => {\n  window.addEventListener('openSignUpModal', () => callback())\n}\nexport const openSignUpDialog = () => {\n  const event = new Event('openSignUpModal')\n  window.dispatchEvent(event)\n}\n\nexport const shortName = user => {\n  if (user && user.firstName && user.lastName) {\n    return `${user.firstName} ${user.lastName[0]}.`\n  }\n\n  return ''\n}\n","export const AUTH_TOKEN = 'auth-token'\nexport const USER_INFO = 'user-info'","import React from 'react'\nimport { isUserLoggedIn, openSignUpDialog } from '../../utils/userUtils'\n\nimport '../shared/button.css'\nimport './signup.css'\n\nexport default () => {\n  const renderSignUp = () => {\n    return (\n      <div>\n        <button\n          className=\"form-button homepage-signup-button\"\n          onClick={() => openSignUpDialog()}\n        >\n          Get Started\n        </button>\n      </div>\n    )\n  }\n\n  return <div>{!isUserLoggedIn() && renderSignUp()}</div>\n}\n","import React from 'react'\nimport Header from './homepage/header'\nimport ValueProp from './homepage/valueProp'\nimport SignUpSection from './homepage/signup'\n\nexport default () => {\n  return (\n    <div>\n      <Header />\n      <ValueProp />\n      <SignUpSection />\n    </div>\n  )\n}\n","import gql from \"graphql-tag\"\n\nexport const GET_CITIES = gql`\n\tquery ($limit: Int, $query: String) {\n\t\tcities(first: $limit, query: $query) {\n\t\t\tid\n\t\t\tname\n\t\t\tstate\n\t\t}\n\t}\n`","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { GET_CITIES } from '../../graphql/cityQueries'\nimport { withApollo } from 'react-apollo'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\n\nconst style = {\n  container: {\n    position: 'relative',\n    width: '500px'\n  },\n  formControl: {\n    minWidth: '500px',\n    marginTop: '16px',\n    marginBottom: '8px',\n    height: '16px'\n  }\n}\n\nconst CityFormField = ({\n  client,\n  onCitySelected,\n  isMulti,\n  fieldLabel,\n  placeholder,\n  containerWidth,\n  containerDisplay,\n  initialValue\n}) => {\n  const [query, setQuery] = useState('')\n  const [selectedOption, setSelectedOption] = useState(isMulti ? [] : {})\n  const [options, setOptions] = useState([])\n\n  useEffect(() => {\n    const getSuggestions = query => {\n      return client.query({\n        query: GET_CITIES,\n        variables: { limit: 10, query }\n      })\n    }\n\n    if (query && query.length >= 3) {\n      getSuggestions(query).then(({ data }) => {\n        setOptions(\n          data.cities.map(city => {\n            return { value: city.id, label: `${city.name}, ${city.state}` }\n          })\n        )\n      })\n    } else {\n      setOptions([])\n    }\n  }, [query, client])\n\n  useEffect(() => {\n    if (initialValue && Array.isArray(initialValue) && initialValue.length) {\n      setSelectedOption(\n        initialValue.map(city => {\n          return { value: city.id, label: `${city.name}, ${city.state}` }\n        })\n      )\n    }\n  }, [initialValue])\n\n  const handleInputChange = text => {\n    setQuery(text)\n  }\n\n  const handleOptionChange = option => {\n    setSelectedOption(option)\n    onCitySelected(option)\n  }\n\n  const hasOptions = () => options && options.length\n\n  return (\n    <div\n      style={{\n        ...style.container,\n        width: containerWidth ? containerWidth : '500px',\n        display: containerDisplay ? containerDisplay : 'block'\n      }}\n    >\n      <FormControl style={style.formControl}>\n        <InputLabel shrink={true} htmlFor=\"age-simple\">\n          {fieldLabel ? fieldLabel : 'City'}\n        </InputLabel>\n      </FormControl>\n      <Select\n        value={selectedOption}\n        defaultValue={null}\n        onChange={handleOptionChange}\n        options={options}\n        onInputChange={handleInputChange}\n        placeholder={placeholder ? placeholder : 'Type in name of city'}\n        isClearable={true}\n        isMulti={!!isMulti}\n        menuIsOpen={hasOptions()}\n        escapeClearsValue={true}\n      />\n    </div>\n  )\n}\n\nexport default withApollo(CityFormField)\n","import gql from 'graphql-tag'\n\nconst VenueDetails = gql`\n  fragment VenueDetails on Venue {\n    id\n    name\n    slug\n    description\n    streetAddress\n    zipcode\n    city\n    state\n    lat\n    lng\n    venueTypes {\n      id\n      name\n      image\n    }\n  }\n`\n\nconst VenueStats = gql`\n  fragment VenueStats on Venue {\n    venueStats {\n      favorites\n      favoriteByCurrentUser\n    }\n  }\n`\n\nexport const GET_VENUE_BASICS = gql`\n  query($venueId: ID!) {\n    venue(id: $venueId) {\n      ...VenueDetails\n    }\n  }\n  ${VenueDetails}\n`\n\nexport const GET_VENUE_ADVANCED = gql`\n  query($venueId: ID!) {\n    venue(id: $venueId) {\n      ...VenueDetails\n      ...VenueStats\n    }\n  }\n  ${VenueDetails}\n  ${VenueStats}\n`\n\nexport const GET_VENUE_BY_SLUG = gql`\n  query($venueSlug: String!) {\n    venueBySlug(slug: $venueSlug) {\n      ...VenueDetails\n      ...VenueStats\n    }\n  }\n  ${VenueDetails}\n  ${VenueStats}\n`\n\nexport const GET_VENUES_FOR_CURRENT_USER = gql`\n  query {\n    me {\n      venues {\n        ...VenueDetails\n      }\n      favoriteVenues {\n        ...VenueDetails\n      }\n    }\n  }\n  ${VenueDetails}\n`\n\nexport const GET_VENUE_TYPES = gql`\n  query {\n    venueTypes {\n      id\n      name\n      image\n    }\n  }\n`\n\nexport const GET_SIMILAR_VENUES_IN_RADIUS = gql`\n  query($venueId: ID!, $limit: Int, $radius: Int) {\n    similarVenues(id: $venueId, first: $limit, radius: $radius) {\n      id\n      name\n      slug\n      streetAddress\n      zipcode\n      city\n    }\n  }\n`\n\nexport const GET_FEED_VENUES = gql`\n  query($cityIds: String, $venueTypeIds: String, $sort: String, $first: Int) {\n    venues(\n      cityIds: $cityIds\n      venueTypeIds: $venueTypeIds\n      sort: $sort\n      first: $first\n    ) {\n      id\n      createdAt\n      name\n      slug\n      description\n      streetAddress\n      zipcode\n      city\n      state\n      lat\n      lng\n      creator {\n        id\n        firstName\n        lastName\n      }\n      venueTypes {\n        id\n        name\n        image\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport { Query } from 'react-apollo'\n\nimport { GET_VENUE_TYPES } from '../../graphql/venueQueries'\n\nconst style = {\n  formControl: {\n    minWidth: '500px',\n    marginTop: '16px',\n    marginBottom: '8px'\n  }\n}\n\nexport default ({ onVenueTypeSelected }) => {\n  const [selectedOption, setSelectedOption] = useState('')\n\n  const handleOptionChange = option => {\n    setSelectedOption(option)\n    onVenueTypeSelected(option)\n  }\n\n  return (\n    <Query query={GET_VENUE_TYPES}>\n      {({ loading, error, data }) => {\n        if (loading) return 'Loading...'\n        if (error) return `Error! ${error.message}`\n\n        const venueTypes = data.venueTypes\n\n        return (\n          <FormControl style={style.formControl}>\n            <InputLabel htmlFor=\"age-simple\">Venue Type</InputLabel>\n            <Select\n              value={selectedOption}\n              onChange={event => handleOptionChange(event.target.value)}\n              inputProps={{\n                name: 'type',\n                id: 'venue-type'\n              }}\n            >\n              {venueTypes.map(venueType => (\n                <MenuItem key={venueType.id} value={venueType.id}>\n                  {venueType.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        )\n      }}\n    </Query>\n  )\n}\n","import gql from 'graphql-tag'\n\nexport const CREATE_VENUE_MUTATION = gql`\n  mutation CreateVenueMutation(\n    $name: String!\n    $streetAddress: String!\n    $zipcode: Int!\n    $cityId: Int!\n    $typeId: Int!\n  ) {\n    createVenue(\n      name: $name\n      streetAddress: $streetAddress\n      zipcode: $zipcode\n      city: { id: $cityId }\n      venueType: { id: $typeId }\n    ) {\n      id\n      name\n      streetAddress\n      venueTypes {\n        name\n      }\n    }\n  }\n`\n\nexport const CREATE_USER_VENUE_FAVORITE_MUTATION = gql`\n  mutation CreateUserVenueFavorite($venueId: Int!) {\n    createUserVenueFavorite(venueId: $venueId) {\n      favorites\n      favoriteByCurrentUser\n    }\n  }\n`\n\nexport const DELETE_USER_VENUE_FAVORITE_MUTATION = gql`\n  mutation DeleteUserVenueFavorite($venueId: Int!) {\n    deleteUserVenueFavorite(venueId: $venueId) {\n      favorites\n      favoriteByCurrentUser\n    }\n  }\n`\n","import React, { useState } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\nimport NumberFormat from 'react-number-format'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport CityFormField from './cityFormField'\nimport VenueTypeFormField from './venueTypeFormField'\nimport { CREATE_VENUE_MUTATION } from '../../graphql/venueMutations'\nimport Button from '@material-ui/core/Button'\n\nimport { validateVenue } from '../../utils/validationUtils'\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { GET_VENUES_FOR_CURRENT_USER } from '../../graphql/venueQueries'\n\nconst USER_ACTION_TEXT = 'Please enter information about a venue'\nconst USER_ACTION_TEXT_ERROR = 'Please enter valid venue information'\n\nconst style = {\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    margin: '0 auto'\n  },\n  body: {\n    margin: '0 auto'\n  },\n  input: {\n    minWidth: '500px'\n  }\n}\n\nconst venueStub = {\n  name: '',\n  type: {\n    id: null\n  },\n  streetAddress: '',\n  zipcode: '',\n  lat: '',\n  lng: '',\n  city: {}\n}\n\nexport default ({ open, toggleDialog, onCreatedVenue }) => {\n  const [addVenue] = useMutation(CREATE_VENUE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    onCompleted(data) {\n      onCreatedVenue()\n    },\n    refetchQueries: [\n      {\n        query: GET_VENUES_FOR_CURRENT_USER\n      }\n    ],\n    awaitRefetchQueries: true\n  })\n\n  const [newVenue, setNewVenue] = useState({ ...venueStub })\n  const [userActionText, setUserActionText] = useState(USER_ACTION_TEXT)\n\n  const onCitySelected = city => {\n    if (city && city.value) {\n      setNewVenue({ ...newVenue, city: { id: city.value } })\n    } else {\n      setNewVenue({ ...newVenue, city: {} })\n    }\n  }\n\n  const onVenueTypeSelected = venueTypeId => {\n    setNewVenue({ ...newVenue, type: { id: venueTypeId } })\n  }\n\n  const handleChange = name => event => {\n    setNewVenue({ ...newVenue, [name]: event.target.value })\n  }\n\n  const onSubmit = () => {\n    if (validateVenue(newVenue)) {\n      addVenue({\n        variables: {\n          name: newVenue.name,\n          typeId: newVenue.type.id,\n          streetAddress: newVenue.streetAddress,\n          zipcode: parseInt(newVenue.zipcode),\n          cityId: newVenue.city.id\n        }\n      }).then(response => {\n        setNewVenue({ ...venueStub })\n        toggleDialog()\n      })\n    } else {\n      setUserActionText(USER_ACTION_TEXT_ERROR)\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      onClose={toggleDialog}\n      fullScreen={true}\n      aria-labelledby=\"form-dialog-title\"\n    >\n      <AppBar style={style.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            onClick={toggleDialog}\n            aria-label=\"close\"\n          >\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <DialogTitle style={style.title}>Add New Destination</DialogTitle>\n      <DialogContent style={style.body}>\n        <DialogContentText>{userActionText}</DialogContentText>\n        <TextField\n          id=\"venue-name\"\n          label=\"Venue name\"\n          value={newVenue.name}\n          onChange={handleChange('name')}\n          margin=\"normal\"\n          style={style.input}\n        />\n        <br />\n        <VenueTypeFormField onVenueTypeSelected={onVenueTypeSelected} />\n        <br />\n        <TextField\n          id=\"venue-street-address\"\n          name=\"street-address\"\n          label=\"Street address\"\n          value={newVenue.streetAddress}\n          onChange={handleChange('streetAddress')}\n          margin=\"normal\"\n          autoComplete=\"shipping street-address\"\n          style={style.input}\n        />\n        <CityFormField onCitySelected={onCitySelected} />\n\n        <NumberFormat\n          customInput={TextField}\n          id=\"venue-zipcode\"\n          name=\"zipcode\"\n          label=\"Zipcode\"\n          value={newVenue.zipcode}\n          onChange={handleChange('zipcode')}\n          margin=\"normal\"\n          style={style.input}\n          autoComplete=\"postal-code\"\n          format=\"#####\"\n        />\n        <div>\n          <Button color=\"primary\" onClick={onSubmit}>\n            Create venue\n          </Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","export const validateVenue = ({ name, type, streetAddress, city, zipcode }) => {\n\tlet valid = {\n\t\tname: false,\n\t\ttype: false,\n\t\tstreetAddress: false,\n\t\tcity: false,\n\t\tzipcode: false\n\t}\n\n\tif (name && name.length >= 2) {\n\t\tvalid.name = true\n\t}\n\n\tif(type && type.id) {\n\t\tvalid.type = true\n\t}\n\n\tif(streetAddress && streetAddress.length >= 2) {\n\t\tvalid.streetAddress = true\n\t}\n\n\tif(city && city.id) {\n\t\tvalid.city = true\n\t}\n\n\tif(zipcode && !isNaN(parseInt(zipcode))) {\n\t\tvalid.zipcode = true\n\t}\n\n\treturn (Object.values(valid).indexOf(false) === -1)\n}","import React from 'react'\nimport AppBar from \"@material-ui/core/AppBar/AppBar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { withStyles } from \"@material-ui/core\"\n\nconst styles = {\n\tappBar: {\n\t\tboxShadow: \"none\",\n\t\tfloat: \"left\",\n\t\twidth: '300px',\n\t},\n\ttabIndicator: {\n\t\tbackgroundColor: '#ffffff',\n\t},\n}\n\nconst VenueTypeTabs = ({ classes, venues, venueTypeFilter, onSetVenueTypeFilter }) => {\n\tconst handleVenueTypeClick = (e, value) => {\n\t\tonSetVenueTypeFilter(value)\n\t}\n\n\tconst getVenueTypes = venues => {\n\t\tlet results = {}\n\n\t\tfor (let x = 0; x < venues.length; x++) {\n\t\t\tif ((venues[x].venueTypes && venues[x].venueTypes.length)) {\n\t\t\t\tif (results[venues[x].venueTypes[0].name]) {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name].venues.push(venues[x])\n\t\t\t\t} else {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name] = {\n\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\tid: venues[x].venueTypes[0].id,\n\t\t\t\t\t\t\tname: venues[x].venueTypes[0].name,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvenues: [venues[x]],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Object.keys(results)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Tabs value={venueTypeFilter}\n\t\t\t\t\t\t\tonChange={handleVenueTypeClick}\n\t\t\t\t\t\t\tclasses={{ indicator: classes.tabIndicator }}\n\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\tscrollButtons=\"auto\">\n\t\t\t\t\t<Tab label='all' value='all'/>\n\t\t\t\t\t{getVenueTypes(venues).sort().map((type, index) => (\n\t\t\t\t\t\t<Tab label={type} value={type} key={index}/>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default withStyles(styles)(VenueTypeTabs)","import React from 'react'\nimport {\n  DirectionsRun,\n  DirectionsWalk,\n  NearMe,\n  Restaurant,\n  Museum,\n  Nature,\n  NaturePeople,\n  Pets\n} from '@material-ui/icons'\n\nexport const venueMapLink = venue => {\n  const address = `${venue.streetAddress}, ${venue.city}, ${venue.state} ${venue.zipcode}`\n  return `https://maps.google.com/?q=${encodeURIComponent(address)}`\n}\n\nexport const venueIcon = (venue, cssClass) => {\n  let venueIconComponent\n\n  switch (venue.venueTypes[0].name) {\n    case 'restaurant':\n      venueIconComponent = <Restaurant className={cssClass} />\n      break\n    case 'museum':\n      venueIconComponent = <Museum className={cssClass} />\n      break\n    case 'zoo':\n      venueIconComponent = <Pets className={cssClass} />\n      break\n    case 'hiking trail':\n      venueIconComponent = <DirectionsWalk className={cssClass} />\n      break\n    case 'outdoor park':\n      venueIconComponent = <Nature className={cssClass} />\n      break\n    case 'camp site':\n      venueIconComponent = <NaturePeople className={cssClass} />\n      break\n    case 'outdoor playground':\n      venueIconComponent = <DirectionsRun className={cssClass} />\n      break\n    default:\n      venueIconComponent = <NearMe className={cssClass} />\n  }\n\n  return venueIconComponent\n}\n\nexport const venueHeaderImage = venue =>\n  venue.venueTypes[0].image || 'restaurant-header-cmp.jpg'\n\nexport const venuePrimaryTypeName = venue => venue.venueTypes[0].name || 'venue'\n\nexport const venueCityState = venue => `${venue.city}, ${venue.state}`\n\nexport const venueAddress = (venue, separator = ', ') => {\n  if (venue) {\n    return (\n      <span>\n        {venue.streetAddress}\n        {separator}\n        {venueCityState(venue)} {venue.zipcode}\n      </span>\n    )\n  }\n\n  return ''\n}\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\n\nimport { venueMapLink, venueIcon, venueCityState } from '../../utils/venueUtils'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Routes from '../../routes'\nimport { useMutation } from '@apollo/react-hooks'\nimport { DELETE_USER_VENUE_FAVORITE_MUTATION } from '../../graphql/venueMutations'\nimport {\n  GET_VENUE_BY_SLUG,\n  GET_VENUES_FOR_CURRENT_USER\n} from '../../graphql/venueQueries'\n\nconst styles = {\n  '@global': {\n    '.venueItem': {\n      border: '1px solid #eee',\n      borderRadius: '8px',\n      marginTop: '5px',\n      marginBottom: '5px',\n      // backgroundColor: '#f6f6f6',\n      padding: '15px',\n      width: '49%',\n      display: 'inline-block',\n      '&:nth-child(odd)': {\n        marginRight: '10px'\n      }\n    },\n    '.venueItemTitle': {\n      display: 'block',\n      fontSize: '18px',\n      fontWeight: 500,\n      lineHeight: 1.6,\n      color: '#333333',\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline'\n      }\n    },\n    '.venueItemDescription': {},\n    '.venueItemTypeBadge': {\n      display: 'inline-block',\n      padding: '1px 5px',\n      backgroundColor: '#2196f3',\n      color: '#fff',\n      borderRadius: '3px',\n      height: '22px'\n    },\n    '.venueItemTypeBadgeText': {\n      marginLeft: '20px',\n      marginTop: '3px',\n      textTransform: 'uppercase',\n      fontSize: '11px',\n      fontWeight: 600,\n      minWidth: '75px',\n      textAlign: 'center'\n    },\n    '.venueItemLocation': {\n      textTransform: 'uppercase',\n      fontSize: '11px',\n      fontWeight: 600,\n      textDecoration: 'none',\n      float: 'right',\n      marginTop: '4px',\n      color: '#666'\n    },\n    '.venueIcon': {\n      float: 'left',\n      width: '15px',\n      height: 'auto',\n      marginRight: '5px',\n      position: 'relative',\n      top: '2px'\n    },\n    '.venueUnlike': {\n      float: 'right'\n    }\n  }\n}\n\nconst VenueListItem = props => {\n  const { venue, showDeleteFavoriteButton, onDeleteFavoriteCallback } = props\n\n  const [deleteFavorite] = useMutation(DELETE_USER_VENUE_FAVORITE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    update: (store, { data: { deleteUserVenueFavorite } }) => {\n      updateFavoriteStats(store, deleteUserVenueFavorite)\n    },\n    onCompleted: () => {\n      onDeleteFavoriteCallback()\n    },\n    refetchQueries: [\n      {\n        query: GET_VENUES_FOR_CURRENT_USER\n      }\n    ],\n    awaitRefetchQueries: true\n  })\n\n  const updateFavoriteStats = (store, venueStats) => {\n    try {\n      let data = store.readQuery({\n        query: GET_VENUE_BY_SLUG,\n        variables: { venueSlug: venue.slug }\n      })\n\n      data.venueBySlug.venueStats = venueStats\n\n      store.writeQuery({\n        query: GET_VENUE_BY_SLUG,\n        variables: { venueSlug: venue.slug },\n        data\n      })\n    } catch (e) {}\n  }\n\n  const onDeleteFavorite = () =>\n    deleteFavorite({\n      variables: {\n        venueId: venue.id\n      }\n    })\n\n  return (\n    <div className=\"venueItem\">\n      {showDeleteFavoriteButton && (\n        <button\n          onClick={() => {\n            onDeleteFavorite()\n          }}\n          className=\"venueUnlike\"\n        >\n          Unlike\n        </button>\n      )}\n\n      <RouterLink to={Routes.venuePath(venue.slug)} className=\"venueItemTitle\">\n        {venue.name}\n      </RouterLink>\n      <div className=\"venueItemDescription\">\n        <div className=\"venueItemTypeBadge\">\n          {venueIcon(venue, 'venueIcon')}\n          <div className=\"venueItemTypeBadgeText\">\n            {venue.venueTypes && venue.venueTypes.length\n              ? `${venue.venueTypes[0].name}`\n              : ''}\n          </div>\n        </div>\n        <a\n          href={venueMapLink(venue)}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"venueItemLocation\"\n        >\n          {venueCityState(venue)}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(VenueListItem)\n","import React, { Fragment, useEffect, useState } from 'react'\nimport VenueTypeTabs from './venueTypeTabs'\nimport VenueListItem from './venueListItem'\nimport { withStyles } from '@material-ui/core/styles'\nimport { GET_VENUES_FOR_CURRENT_USER } from '../../graphql/venueQueries'\nimport { withApollo } from 'react-apollo'\n\nconst styles = {\n  '@global': {\n    '.venueList': {\n      marginLeft: '320px'\n    }\n  }\n}\n\nconst VenueList = ({\n  client,\n  currentDashboardSection,\n  isFavoritesDashboardSection,\n  externalTriggerVenueRefresh\n}) => {\n  const [venueTypeFilter, setVenueTypeFilter] = useState('all')\n  const [venues, setVenues] = useState([])\n  const [triggerVenueRefresh, setTriggerVenueRefresh] = useState(true)\n\n  useEffect(() => {\n    const getVenueData = () => {\n      client\n        .query({\n          query: GET_VENUES_FOR_CURRENT_USER\n        })\n        .then(({ data }) => {\n          setVenues(\n            isFavoritesDashboardSection\n              ? data.me.favoriteVenues\n              : data.me.venues\n          )\n        })\n    }\n\n    getVenueData()\n    setVenueTypeFilter('all')\n  }, [\n    currentDashboardSection,\n    triggerVenueRefresh,\n    externalTriggerVenueRefresh,\n    isFavoritesDashboardSection,\n    client\n  ])\n\n  const onDeleteFavorite = () => {\n    setTriggerVenueRefresh(!triggerVenueRefresh)\n  }\n\n  return (\n    <Fragment>\n      <VenueTypeTabs\n        venues={venues}\n        onSetVenueTypeFilter={setVenueTypeFilter}\n        venueTypeFilter={venueTypeFilter}\n      ></VenueTypeTabs>\n      <div className=\"venueList\">\n        {venues\n          .filter(\n            venue =>\n              venueTypeFilter === 'all' ||\n              venue.venueTypes[0].name === venueTypeFilter\n          )\n          .map(venue => (\n            <VenueListItem\n              key={venue.id}\n              venue={venue}\n              showDeleteFavoriteButton={isFavoritesDashboardSection}\n              onDeleteFavoriteCallback={onDeleteFavorite}\n            />\n          ))}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default withStyles(styles)(withApollo(VenueList))\n","import gql from 'graphql-tag'\n\nexport const SIGNUP_MUTATION = gql`\n  mutation SignupMutation(\n    $email: String!\n    $password: String!\n    $firstName: String!\n    $lastName: String!\n  ) {\n    signup(\n      email: $email\n      password: $password\n      firstName: $firstName\n      lastName: $lastName\n    ) {\n      token\n      user {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`\n\nexport const UPDATE_CURRENT_USER_FEED_CONFIG_MUTATION = gql`\n  mutation UpdateCurrentUserFeedConfigMutation(\n    $cityIds: String\n    $venueTypeIds: String\n  ) {\n    updateUserFeedConfig(cityIds: $cityIds, venueTypeIds: $venueTypeIds) {\n      cityIds\n      venueTypeIds\n    }\n  }\n`\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { sinceCreated } from '../../utils/dateUtils'\nimport { shortName } from '../../utils/userUtils'\nimport Routes from '../../routes'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { venueCityState } from '../../utils/venueUtils'\n\nconst styles = {\n  '@global': {\n    '.feedItem': {\n      borderBottom: '1px solid #eee',\n      marginTop: '5px',\n      marginBottom: '5px',\n      padding: '15px'\n    },\n    '.feedItemTitle': {\n      fontWeight: 600,\n      color: '#000',\n      textDecoration: 'none',\n      fontSize: '15px'\n    },\n    '.feedItemSubtitle': {\n      fontSize: '12px'\n    }\n  }\n}\n\nconst FeedItem = ({ venue }) => {\n  return (\n    <div className=\"feedItem\">\n      <RouterLink to={Routes.venuePath(venue.slug)} className=\"feedItemTitle\">\n        {venue.name}\n      </RouterLink>\n      <div className=\"feedItemSubtitle\">\n        in {venueCityState(venue)}\n        <br />\n        added {sinceCreated(venue.createdAt)} by {shortName(venue.creator)}\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(FeedItem)\n","export const localDateTime = timestamp => {\n  return new Date(timestamp).toLocaleString()\n}\n\nexport const sinceCreated = timestamp => {\n  const then = new Date(timestamp)\n  const now = new Date()\n\n  const diffSeconds = (now.getTime() - then.getTime()) / 1000\n\n  let response\n\n  if (diffSeconds <= 60) {\n    response = 'now'\n  } else if (diffSeconds < 90) {\n    response = Math.round(diffSeconds / 60) + ' minute ago'\n  } else if (diffSeconds <= 3600) {\n    response = Math.round(diffSeconds / 60) + ' minutes ago'\n  } else if (diffSeconds < 5400) {\n    response = Math.round(diffSeconds / 3600) + ' hour ago'\n  } else if (diffSeconds <= 86400) {\n    response = Math.round(diffSeconds / 3600) + ' hours ago'\n  } else {\n    response =\n      'on ' +\n      then.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      })\n  }\n\n  return response\n}\n","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { withApollo } from 'react-apollo'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport { GET_VENUE_TYPES } from '../../graphql/venueQueries'\n\nconst style = {\n  container: {\n    position: 'relative',\n    width: '350px',\n    display: 'inline-block'\n  },\n  formControl: {\n    minWidth: '500px',\n    marginTop: '16px',\n    marginBottom: '8px',\n    height: '16px'\n  }\n}\n\nconst VenueTypeMultiFormField = ({\n  client,\n  initialValue,\n  onVenueTypeSelected\n}) => {\n  const [selectedOption, setSelectedOption] = useState([])\n  const [options, setOptions] = useState([])\n\n  useEffect(() => {\n    client\n      .query({\n        query: GET_VENUE_TYPES\n      })\n      .then(({ data }) => {\n        setOptions(\n          data.venueTypes.map(venueType => {\n            return { value: venueType.id, label: venueType.name }\n          })\n        )\n      })\n  }, [client])\n\n  useEffect(() => {\n    if (options && options.length && initialValue) {\n      const defaultVenueTypeIds = initialValue.split(',').map(venueTypeId => {\n        return parseInt(venueTypeId)\n      })\n\n      setSelectedOption(\n        options.filter(venueType =>\n          defaultVenueTypeIds.includes(venueType.value)\n        )\n      )\n    }\n  }, [options, initialValue])\n\n  const handleOptionChange = option => {\n    setSelectedOption(option)\n    onVenueTypeSelected(option)\n  }\n\n  return (\n    <div style={style.container}>\n      <FormControl style={style.formControl}>\n        <InputLabel shrink={true} htmlFor=\"age-simple\">\n          Venue type\n        </InputLabel>\n      </FormControl>\n      <Select\n        value={selectedOption}\n        defaultValue={null}\n        onChange={handleOptionChange}\n        options={options}\n        placeholder=\"Select venue type\"\n        isClearable={true}\n        isMulti={true}\n        isSearchable={false}\n        escapeClearsValue={true}\n      />\n    </div>\n  )\n}\n\nexport default withApollo(VenueTypeMultiFormField)\n","import React, { useState, useEffect } from 'react'\nimport CityFormField from './cityFormField'\nimport VenueTypeMultiFormField from './venueTypeMultiFormField'\n\nconst FeedConfigurator = ({\n  feedConfiguration,\n  onFeedConfigurationUpdated\n}) => {\n  const [cityIds, setCityIds] = useState()\n  const [venueTypeIds, setVenueTypeIds] = useState()\n\n  useEffect(() => {\n    setCityIds(feedConfiguration.cityIds)\n    setVenueTypeIds(feedConfiguration.venueTypeIds)\n  }, [feedConfiguration])\n\n  const onCitySelected = cities => {\n    const ids = cities ? cities.map(city => city.value).join(',') : null\n    setCityIds(ids)\n    onFeedConfigurationUpdated({ cityIds: ids, venueTypeIds })\n  }\n\n  const onVenueTypeSelected = venueTypes => {\n    const ids = venueTypes\n      ? venueTypes.map(venueType => venueType.value).join(',')\n      : null\n    setVenueTypeIds(ids)\n    onFeedConfigurationUpdated({ venueTypeIds: ids, cityIds })\n  }\n\n  return (\n    <div>\n      <CityFormField\n        onCitySelected={onCitySelected}\n        fieldLabel=\"Filter feed by city\"\n        placeholder=\"e.g.: San Francisco, CA\"\n        isMulti={true}\n        containerWidth=\"350px\"\n        containerDisplay=\"inline-block\"\n        initialValue={feedConfiguration.cityDetails}\n      ></CityFormField>\n      <div\n        style={{ display: 'inline-block', width: '30px', height: '20px' }}\n      ></div>\n      <VenueTypeMultiFormField\n        initialValue={venueTypeIds}\n        onVenueTypeSelected={onVenueTypeSelected}\n      ></VenueTypeMultiFormField>\n    </div>\n  )\n}\n\nexport default FeedConfigurator\n","import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { withApollo } from 'react-apollo'\nimport { withStyles } from '@material-ui/core/styles'\nimport { GET_FEED_VENUES } from '../../graphql/venueQueries'\nimport { CURRENT_USER_FEED_CONFIG_QUERY } from '../../graphql/userQueries'\nimport { UPDATE_CURRENT_USER_FEED_CONFIG_MUTATION } from '../../graphql/userMutations'\n\nimport FeedItem from './feedItem'\nimport FeedConfigurator from './feedConfigurator'\n\nconst styles = {\n  '@global': {\n    '.feedContainer': {\n      maxWidth: '50%',\n      minWidth: '400px'\n    }\n  }\n}\n\nconst Feed = ({ client }) => {\n  const [feedConfigInitialized, setFeedConfigInitialized] = useState(false)\n  const [feedVenues, setFeedVenues] = useState([])\n  const [feedConfiguration, setFeedConfiguration] = useState({\n    cityIds: null,\n    venueTypeIds: null,\n    sort: 'DESC',\n    first: 25\n  })\n\n  const [updateCurrentUserFeedConfigMutation] = useMutation(\n    UPDATE_CURRENT_USER_FEED_CONFIG_MUTATION\n  )\n\n  useEffect(() => {\n    client\n      .query({\n        query: CURRENT_USER_FEED_CONFIG_QUERY\n      })\n      .then(({ data }) => {\n        setFeedConfigInitialized(true)\n        setFeedConfiguration({\n          sort: 'DESC',\n          first: 25,\n          ...data.userFeedConfig\n        })\n      })\n  }, [client])\n\n  useEffect(() => {\n    if (feedConfigInitialized) {\n      client\n        .query({\n          query: GET_FEED_VENUES,\n          variables: {\n            ...feedConfiguration\n          }\n        })\n        .then(({ data }) => {\n          setFeedVenues(data.venues)\n        })\n    }\n  }, [client, feedConfiguration])\n\n  const onFeedConfigurationUpdated = newFeedConfiguration => {\n    if (newFeedConfiguration) {\n      setFeedConfiguration({ ...newFeedConfiguration })\n    }\n\n    updateCurrentUserFeedConfigMutation({\n      variables: {\n        cityIds: newFeedConfiguration.cityIds,\n        venueTypeIds: newFeedConfiguration.venueTypeIds\n      }\n    })\n  }\n\n  return (\n    <div>\n      <FeedConfigurator\n        feedConfiguration={feedConfiguration}\n        onFeedConfigurationUpdated={onFeedConfigurationUpdated}\n      ></FeedConfigurator>\n      <div className=\"feedContainer\">\n        {feedVenues.map(venue => (\n          <FeedItem key={venue.id} venue={venue}></FeedItem>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(withApollo(Feed))\n","import React, { useState } from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Button from '@material-ui/core/Button'\nimport { Add } from '@material-ui/icons'\nimport Routes from '../routes'\n\nimport AddVenueDialog from './dashboard/addVenueDialog'\nimport VenueList from './dashboard/venueList'\nimport Feed from './dashboard/feed'\n\nconst DASHBOARD_SECTION = {\n  FEED: 'feed',\n  FOLLOWED_DESTINATIONS: 'followed-destinations',\n  MY_DESTINATIONS: 'my-destinations',\n  FAVORITES: 'favorites'\n}\n\nconst styles = {\n  '@global': {\n    '.sectionHeader': {\n      marginBottom: '30px',\n      display: 'flex'\n    },\n    '.sectionHeaderTitle': {\n      flexGrow: 2,\n      maxWidth: '250px',\n      cursor: 'pointer',\n      textDecoration: 'none',\n      color: '#666',\n      textAlign: 'center',\n      textTransform: 'uppercase',\n      borderRadius: '8px',\n      margin: '0px 10px',\n      fontSize: '14px',\n      fontWeight: 600,\n      lineHeight: 2.5,\n      letterSpacing: '1.3px',\n      border: '1px solid #eee'\n    },\n    '.sectionHeaderTitleSelected': {\n      backgroundColor: '#f9f8f8'\n    },\n    '.venueList': {\n      marginLeft: '320px'\n    }\n  }\n}\n\nconst DashboardPage = ({ match }) => {\n  const currentDashboardSection = Routes.validatePageSection(\n    match.params.section,\n    DASHBOARD_SECTION,\n    DASHBOARD_SECTION.FEED\n  )\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [\n    externalTriggerVenueRefresh,\n    setExternalTriggerVenueRefresh\n  ] = useState(true)\n\n  const toggleDialog = () => {\n    setDialogOpen(!dialogOpen)\n  }\n\n  const renderDashboardSection = (text, dashboardSection) => {\n    return (\n      <RouterLink\n        to={Routes.dashboardPath(dashboardSection)}\n        className={`sectionHeaderTitle ${\n          currentDashboardSection === dashboardSection\n            ? 'sectionHeaderTitleSelected'\n            : ''\n        }`}\n      >\n        {text}\n      </RouterLink>\n    )\n  }\n\n  const onCreatedVenue = () =>\n    setExternalTriggerVenueRefresh(!externalTriggerVenueRefresh)\n\n  return (\n    <div className=\"mainContainer\">\n      <div className=\"mainContent\">\n        <div className=\"sectionHeader\">\n          {renderDashboardSection('Feed', DASHBOARD_SECTION.FEED)}\n          {renderDashboardSection(\n            'My destinations',\n            DASHBOARD_SECTION.MY_DESTINATIONS\n          )}\n          {renderDashboardSection(\n            'Favorite destinations',\n            DASHBOARD_SECTION.FAVORITES\n          )}\n          <Button\n            variant=\"outlined\"\n            style={{ marginLeft: 'auto' }}\n            onClick={toggleDialog}\n          >\n            <Add />\n            Add Destination\n          </Button>\n          <AddVenueDialog\n            open={dialogOpen}\n            toggleDialog={toggleDialog}\n            onCreatedVenue={onCreatedVenue}\n          />\n        </div>\n        {currentDashboardSection === DASHBOARD_SECTION.FEED ? (\n          <Feed></Feed>\n        ) : (\n          <VenueList\n            currentDashboardSection={currentDashboardSection}\n            isFavoritesDashboardSection={\n              currentDashboardSection === DASHBOARD_SECTION.FAVORITES\n            }\n            externalTriggerVenueRefresh={externalTriggerVenueRefresh}\n          ></VenueList>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(DashboardPage)\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { headerStyles } from '../../utils/styleUtils'\nimport { venueHeaderImage } from '../../utils/venueUtils'\n\nexport default props => {\n  const { venue } = props\n  const headerStyle = headerStyles(venueHeaderImage(venue), '300px')\n\n  return (\n    <div style={headerStyle.container}>\n      <Typography variant=\"h2\" style={headerStyle.headerText}>\n        <strong>{venue.name}</strong>\n      </Typography>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withApollo } from 'react-apollo'\nimport { GET_SIMILAR_VENUES_IN_RADIUS } from '../../graphql/venueQueries'\nimport '../shared/sidebarModule.css'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Routes from '../../routes'\n\nconst SimilarVenues = ({ client, venue }) => {\n  const [similarVenues, setSimilarVenues] = useState([])\n  useEffect(() => {\n    client\n      .query({\n        query: GET_SIMILAR_VENUES_IN_RADIUS,\n        variables: { venueId: venue.id, limit: 5, radius: 10 }\n      })\n      .then(({ data }) => {\n        setSimilarVenues(data.similarVenues)\n      })\n  }, [venue, client])\n\n  return (\n    <div className=\"sidebar-module\">\n      <h3>Similar places near by</h3>\n      <div className=\"sidebar-module-body\">\n        {similarVenues &&\n          similarVenues.map(venue => (\n            <div key={venue.id}>\n              <RouterLink to={Routes.venuePath(venue.slug)}>\n                {venue.name}\n              </RouterLink>\n            </div>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default withApollo(SimilarVenues)\n","import React from 'react'\nimport '../shared/sidebarModule.css'\nimport { venueAddress } from '../../utils/venueUtils'\n\nconst LocationInfo = ({ venue }) => {\n  return (\n    <div className=\"sidebar-module\">\n      <h3>Location</h3>\n      <div className=\"sidebar-module-body\">{venueAddress(venue, <br />)}</div>\n    </div>\n  )\n}\n\nexport default LocationInfo\n","import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport {\n  CREATE_USER_VENUE_FAVORITE_MUTATION,\n  DELETE_USER_VENUE_FAVORITE_MUTATION\n} from '../../graphql/venueMutations'\nimport {\n  GET_VENUE_BY_SLUG,\n  GET_VENUES_FOR_CURRENT_USER\n} from '../../graphql/venueQueries'\n\nexport default ({\n  venueId,\n  venueSlug,\n  favoriteByCurrentUser,\n  onUpdateFavoritesStats\n}) => {\n  const refetchQueries = [\n    {\n      query: GET_VENUES_FOR_CURRENT_USER\n    }\n  ]\n\n  const updateFavoriteStats = (store, venueStats) => {\n    let data = store.readQuery({\n      query: GET_VENUE_BY_SLUG,\n      variables: { venueSlug }\n    })\n\n    data.venueBySlug.venueStats = venueStats\n    onUpdateFavoritesStats(venueStats)\n\n    store.writeQuery({\n      query: GET_VENUE_BY_SLUG,\n      variables: { venueSlug },\n      data\n    })\n  }\n\n  const [addFavorite] = useMutation(CREATE_USER_VENUE_FAVORITE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    update: (store, { data: { createUserVenueFavorite } }) => {\n      updateFavoriteStats(store, createUserVenueFavorite)\n    },\n    refetchQueries\n  })\n\n  const [deleteFavorite] = useMutation(DELETE_USER_VENUE_FAVORITE_MUTATION, {\n    onError(error) {\n      console.log('error', error)\n    },\n    update: (store, { data: { deleteUserVenueFavorite } }) => {\n      updateFavoriteStats(store, deleteUserVenueFavorite)\n    },\n    refetchQueries\n  })\n\n  const onAddFavorite = () =>\n    addFavorite({\n      variables: {\n        venueId: venueId\n      }\n    })\n\n  const onDeleteFavorite = () =>\n    deleteFavorite({\n      variables: {\n        venueId: venueId\n      }\n    })\n\n  return (\n    <React.Fragment>\n      {favoriteByCurrentUser ? (\n        <span>\n          &#9733;&nbsp;\n          <a\n            href=\"#\"\n            onClick={e => {\n              e.preventDefault()\n              onDeleteFavorite()\n            }}\n          >\n            Unlike\n          </a>\n        </span>\n      ) : (\n        <a\n          href=\"#\"\n          onClick={e => {\n            e.preventDefault()\n            onAddFavorite()\n          }}\n        >\n          Like\n        </a>\n      )}\n    </React.Fragment>\n  )\n}\n","import React, { useState } from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport NumberFormat from 'react-number-format'\nimport pluralize from 'pluralize'\nimport { GET_VENUE_BY_SLUG } from '../graphql/venueQueries'\n\nimport VenueHeader from './venue/header'\nimport SimilarVenues from './venue/similarVenues'\nimport { venuePrimaryTypeName } from '../utils/venueUtils'\nimport { isUserLoggedIn } from '../utils/userUtils'\nimport LocationInfo from './venue/locationInfo'\nimport FavoriteButton from './venue/favoriteButton'\n\nconst pageStyle = {\n  sectionHeader: {\n    marginBottom: '15px'\n  },\n  columnWrapper: {\n    display: 'flex'\n  },\n  mainColumn: {\n    flexGrow: 3,\n    maxWidth: '800px'\n  },\n  sideColumm: {\n    flexGrow: 1,\n    marginTop: '-20px'\n  }\n}\n\nexport default ({ match }) => {\n  const venueSlug = match.params.venueSlug\n  const [venue, setVenue] = useState(null)\n  const [venueTypeName, setVenueTypeName] = useState('')\n\n  const onUpdateFavoritesStats = venueStats => {\n    setVenue({ ...venue, venueStats: { ...venueStats } })\n  }\n\n  if (!venueSlug) {\n    return <div>Venue not found.</div>\n  } else {\n    return (\n      <Query query={GET_VENUE_BY_SLUG} variables={{ venueSlug }}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...'\n          if (error) return `Error! ${error.message}`\n\n          setVenue(data.venueBySlug)\n          setVenueTypeName(venuePrimaryTypeName(data.venueBySlug))\n\n          return (\n            venue && (\n              <div>\n                <VenueHeader venue={venue} />\n                <div className=\"mainContainer\">\n                  <div className=\"mainContent\">\n                    <Typography variant=\"h5\" style={pageStyle.sectionHeader}>\n                      {venue.name}\n                    </Typography>\n                    <div style={pageStyle.columnWrapper}>\n                      <div style={pageStyle.mainColumn}>\n                        <div>\n                          Liked by{' '}\n                          <strong>\n                            <NumberFormat\n                              value={venue.venueStats.favorites}\n                              thousandSeparator={true}\n                              displayType={'text'}\n                            />{' '}\n                            {pluralize('person', venue.venueStats.favorites)}\n                          </strong>\n                          . &nbsp;\n                          {isUserLoggedIn() && (\n                            <FavoriteButton\n                              venueId={venue.id}\n                              venueSlug={venueSlug}\n                              favoriteByCurrentUser={\n                                venue.venueStats.favoriteByCurrentUser\n                              }\n                              onUpdateFavoritesStats={onUpdateFavoritesStats}\n                            />\n                          )}\n                        </div>\n                        <br />\n                        {venue.description && <span>{venue.description}</span>}\n                        This {venueTypeName} is located in {venue.city},{' '}\n                        {venue.state}.\n                      </div>\n                      <div style={pageStyle.sideColumm}>\n                        <LocationInfo venue={venue} />\n                        <SimilarVenues venue={venue} />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )\n          )\n        }}\n      </Query>\n    )\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500]\n    },\n    background: { default: '#efefef' }\n  },\n  typography: {\n    useNextVariants: true\n  }\n})\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\n\nimport { setUserInfo } from '../../utils/userUtils'\nimport Routes from '../../routes'\nimport { Mutation } from 'react-apollo'\nimport { SIGNUP_MUTATION, LOGIN_MUTATION } from '../../graphql/userMutations'\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst styles = {\n  dialogMainContent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  dialogMainError: {\n    textAlign: 'center'\n  }\n}\n\nclass LoginDialog extends Component {\n  state = {\n    login: this.props.login !== undefined ? this.props.login : true, // switch between Login and SignUp\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    errorMessage: null\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.open !== this.props.open) {\n      this.setState({ errorMessage: null })\n    }\n\n    if (prevProps.login !== this.props.login) {\n      this.setState({ login: this.props.login })\n    }\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      firstName,\n      lastName,\n      errorMessage\n    } = this.state\n    const { classes } = this.props\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.toggleDialog}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"login-dialog-title\">\n          {login ? 'Login' : 'Sign Up'}\n        </DialogTitle>\n        <DialogContent>\n          {errorMessage && (\n            <DialogContentText className={classes.dialogMainError}>\n              {errorMessage}\n            </DialogContentText>\n          )}\n          <div className={classes.dialogMainContent}>\n            {!login && (\n              <span>\n                <TextField\n                  id=\"firstName\"\n                  label=\"First name\"\n                  error={!!errorMessage}\n                  value={firstName}\n                  onChange={e => this.setState({ firstName: e.target.value })}\n                  margin=\"normal\"\n                  fullWidth\n                />\n                <TextField\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  error={!!errorMessage}\n                  value={lastName}\n                  onChange={e => this.setState({ lastName: e.target.value })}\n                  margin=\"normal\"\n                  fullWidth\n                />\n              </span>\n            )}\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              error={!!errorMessage}\n              value={email}\n              onChange={e => this.setState({ email: e.target.value })}\n              margin=\"normal\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              error={!!errorMessage}\n              type=\"password\"\n              autoComplete=\"current-password\"\n              onChange={e => this.setState({ password: e.target.value })}\n              margin=\"normal\"\n              fullWidth\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => this.setState({ login: !login, errorMessage: null })}\n            color=\"primary\"\n            style={{ marginRight: 'auto' }}\n          >\n            {login ? 'need to create an account?' : 'already have an account?'}\n          </Button>\n\n          <Button onClick={this.props.toggleDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Mutation\n            mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n            variables={{ email, password, firstName, lastName }}\n            update={(cache, { data }) =>\n              this._update(cache, login ? data.login : data.signup)\n            }\n            onCompleted={data => this._confirm(data)}\n            onError={error => this._error(error)}\n          >\n            {mutation => (\n              <Button color=\"primary\" onClick={mutation}>\n                {login ? 'login' : 'create account'}\n              </Button>\n            )}\n          </Mutation>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  _update = async (cache, info) => {\n    cache.writeData({\n      data: {\n        currentUser: {\n          ...info.user,\n          token: info.token\n        }\n      }\n    })\n  }\n\n  _confirm = async data => {\n    this.state.error = null\n\n    const { token, user } = this.state.login ? data.login : data.signup\n    this._saveUserData(token, user)\n\n    document.location = Routes.dashboard\n  }\n\n  _saveUserData = (token, user) => {\n    setUserInfo(token, user)\n  }\n\n  _error = async ({ graphQLErrors }) => {\n    if (\n      this.state.login &&\n      graphQLErrors &&\n      graphQLErrors[0] &&\n      graphQLErrors[0].message\n    ) {\n      this.setState({ errorMessage: graphQLErrors[0].message })\n    } else if (\n      graphQLErrors &&\n      graphQLErrors[0] &&\n      graphQLErrors[0].extensions.exception.errors[0].message\n    ) {\n      this.setState({\n        errorMessage: graphQLErrors[0].extensions.exception.errors[0].message\n      })\n    }\n  }\n}\n\nexport default withRouter(withStyles(styles)(LoginDialog))\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router'\nimport {\n  isUserLoggedIn,\n  withCurrentUser,\n  listenForOpenSignUpDialog\n} from '../../utils/userUtils'\nimport LoginDialog from './loginDialog'\nimport Typography from '@material-ui/core/Typography'\n\nclass LoginButton extends Component {\n  state = {\n    dialogOpen: false,\n    login: true\n  }\n\n  componentDidMount() {\n    listenForOpenSignUpDialog(() => {\n      this.setState({ dialogOpen: true, login: false })\n    })\n  }\n\n  toggleDialog = () => {\n    this.setState({ dialogOpen: !this.state.dialogOpen, login: true })\n  }\n\n  renderUserInfo = currentUser => {\n    if (currentUser && currentUser.id) {\n      return `Welcome, ${currentUser.firstName}`\n    } else {\n      return ''\n    }\n  }\n\n  render() {\n    const { currentUser } = this.props\n\n    return isUserLoggedIn() ? (\n      <Typography\n        variant=\"button\"\n        color=\"inherit\"\n        className={this.props.className}\n      >\n        {this.renderUserInfo(currentUser)}\n      </Typography>\n    ) : (\n      <span>\n        <Button\n          onClick={this.toggleDialog}\n          className={this.props.className}\n          color=\"inherit\"\n        >\n          Login\n        </Button>\n        <LoginDialog\n          open={this.state.dialogOpen}\n          login={this.state.login}\n          toggleDialog={this.toggleDialog}\n        />\n      </span>\n    )\n  }\n}\n\nexport default withCurrentUser(withRouter(LoginButton))\n","import React, { Component } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport LoginButton from '../components/shared/loginButton'\nimport { logoutUser, isUserLoggedIn } from '../utils/userUtils'\nimport { withRouter } from 'react-router'\n\nimport Routes from '../routes'\n\nclass ButtonAppBar extends Component {\n  state = {\n    anchorEl: null\n  }\n\n  toggleMenu = event => {\n    this.state.anchorEl\n      ? this.setState({ anchorEl: null })\n      : this.setState({ anchorEl: event.currentTarget })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          style={{ background: 'transparent', boxShadow: 'none' }}\n        >\n          <Toolbar variant=\"dense\" className={classes.container}>\n            <Typography\n              className={classes.logoText}\n              variant=\"button\"\n              color=\"inherit\"\n            >\n              KidTrip\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              className={classes.grow}\n            ></Typography>\n            <LoginButton className={classes.loginButton} />\n\n            {isUserLoggedIn() && (\n              <span className={classes.menuWrapper}>\n                <IconButton\n                  onClick={this.toggleMenu}\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={this.state.anchorEl}\n                  open={Boolean(this.state.anchorEl)}\n                  onClose={this.toggleMenu}\n                >\n                  <MenuItem\n                    component={RouterLink}\n                    to={Routes.home}\n                    onClick={this.toggleMenu}\n                  >\n                    Home\n                  </MenuItem>\n                  <MenuItem\n                    component={RouterLink}\n                    to={Routes.dashboard}\n                    onClick={this.toggleMenu}\n                  >\n                    Dashboard\n                  </MenuItem>\n                  <MenuItem onClick={this.toggleMenu}>My account</MenuItem>\n                  <MenuItem\n                    onClick={() => {\n                      logoutUser()\n                      this.props.history.push(`/`)\n                    }}\n                  >\n                    Logout\n                  </MenuItem>\n                </Menu>\n              </span>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ButtonAppBar)\n","import React from 'react'\nimport { isHomepage } from '../utils/routeUtils'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nimport AppBar from './appBar'\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  menuWrapper: {\n    marginLeft: 15\n  }\n}\n\nconst nonHomepageStyles = {\n  ...styles,\n  container: {\n    borderBottom: '1px solid',\n    borderBottomColor: blueGrey[100],\n    backgroundColor: 'white'\n  },\n  grow: {\n    ...styles.grow,\n    color: blueGrey[500]\n  },\n  menuButton: {\n    ...styles.menuButton,\n    color: blueGrey[500]\n  },\n  loginButton: {\n    color: blueGrey[500]\n  },\n  logoText: {\n    color: blueGrey[500]\n  }\n}\n\nconst AppBarContainer = props => {\n  const currentStyles = isHomepage(props.location) ? styles : nonHomepageStyles\n  const AppBarWithStyles = withStyles(currentStyles)(AppBar)\n  return <AppBarWithStyles />\n}\n\nexport default withRouter(AppBarContainer)\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport Routes from './routes'\nimport { isHomepage } from './utils/routeUtils'\n\nimport HomePage from './components/homePage'\nimport DashboardPage from './components/dashboardPage'\nimport VenuePage from './components/venuePage'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\nimport theme from './theme'\nimport AppBar from './layout/appBarContainer'\n\nconst styles = {\n  '@global': {\n    body: {\n      fontFamily: 'Roboto, Helvetica, Arial, sans-serif',\n      fontWeight: 400\n    },\n    '.mainContainer': {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    '.mainContent': {\n      maxWidth: '1200px',\n      flexGrow: '1',\n      margin: '25px',\n      backgroundColor: '#fff',\n      padding: '25px',\n      borderRadius: '8px'\n    }\n  },\n  appBarSpacer: {\n    height: '49px'\n  }\n}\n\nclass App extends Component {\n  render() {\n    const { classes, location } = this.props\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <CssBaseline />\n          <AppBar />\n          {!isHomepage(location) && (\n            <div className={classes.appBarSpacer}></div>\n          )}\n          <Switch>\n            <Route exact path={Routes.home} component={HomePage} />\n            <Route path={Routes.dashboard} component={DashboardPage} />\n            <Route path={Routes.venue} component={VenuePage} />\n          </Switch>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport { ApolloProvider } from 'react-apollo'\nimport { withClientState } from 'apollo-link-state'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport { getUserInfoFromStorage } from './utils/userUtils'\nimport { AUTH_TOKEN } from './constants'\n\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST\n\nconst cache = new InMemoryCache()\n\nconst defaultState = {\n  currentUser: { ...getUserInfoFromStorage() }\n}\n\nconst stateLink = withClientState({\n  cache,\n  defaults: defaultState,\n  resolvers: {\n    Mutation: {\n      updateUserInfo: (_, { id, firstName, lastName, email }, { cache }) => {\n        const data = {\n          user: {\n            __typename: 'User',\n            id,\n            firstName,\n            lastName,\n            email\n          }\n        }\n        cache.writeData({ data })\n        return null\n      }\n    }\n  }\n})\n\nconst token = localStorage.getItem(AUTH_TOKEN)\nconst httpLink = new HttpLink({\n  uri: SERVER_HOST, // || 'http://localhost:4000',\n  credentials: 'same-origin',\n  headers: {\n    authorization: token ? `Bearer ${token}` : ''\n  }\n})\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        )\n      if (networkError) console.log(`[Network error]: ${networkError}`)\n    }),\n    stateLink,\n    httpLink\n  ]),\n  cache: new InMemoryCache(),\n  resolvers: {}\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
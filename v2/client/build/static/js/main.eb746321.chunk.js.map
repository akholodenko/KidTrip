{"version":3,"sources":["routes.js","utils/routeUtils.js","utils/styleUtils.js","components/homepage/header.js","components/homepage/valueProp/valuePropSection.js","components/homepage/valueProp.js","graphql/userQueries.js","utils/userUtils.js","constants.js","components/homepage/signup.js","components/homePage.js","graphql/venueQueries.js","utils/venueUtils.js","components/dashboard/venueListItem.js","graphql/cityQueries.js","components/dashboard/cityFormField.js","components/dashboard/venueTypeFormField.js","graphql/venueMutations.js","components/dashboard/addVenueDialog.js","utils/validationUtils.js","components/dashboard/venueTypeTabs.js","components/dashboardPage.js","components/venue/header.js","components/venue/similarVenues.js","components/venuePage.js","theme.js","graphql/userMutations.js","components/shared/loginDialog.js","components/shared/loginButton.js","layout/appBar.js","layout/appBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["home","dashboard","venue","venuePath","venueSlug","isHomepage","location","pathname","Routes","headerStyles","imageUrl","height","container","display","flexWrap","flexDirection","justifyContent","alignItems","background","backgroundSize","headerText","color","headerStyle","style","Typography","variant","props","title","icon","text","iconStyle","width","className","discoverContent","trackContent","shareContent","CURRENT_USER_QUERY","gql","isUserLoggedIn","localStorage","getItem","setUserInfo","token","user","setItem","JSON","stringify","onClick","event","Event","window","dispatchEvent","openSignUpDialog","VenueDetails","GET_VENUE_BY_SLUG","GET_VENUES_FOR_CURRENT_USER","GET_VENUE_TYPES","GET_SIMILAR_VENUES_IN_RADIUS","venueMapLink","address","streetAddress","city","state","zipcode","encodeURIComponent","withStyles","marginTop","marginBottom","backgroundColor","padding","marginRight","position","top","component","RouterLink","to","slug","name","cssClass","venueIconComponent","venueTypes","Restaurant","DirectionsRun","NearMe","venueIcon","length","href","target","rel","GET_CITIES","input","border","outline","fontSize","suggestionsContainer","left","suggestionItem","formControl","minWidth","withApollo","client","onCitySelected","useState","query","setQuery","selectedOption","setSelectedOption","options","setOptions","useEffect","variables","limit","getSuggestions","then","data","cities","map","value","id","label","FormControl","InputLabel","shrink","htmlFor","onChange","option","onInputChange","placeholder","isClearable","menuIsOpen","escapeClearsValue","onVenueTypeSelected","loading","error","message","Select","inputProps","venueType","MenuItem","key","CREATE_VENUE_MUTATION","appBar","margin","body","venueStub","type","lat","lng","useMutation","onError","console","log","onCompleted","refetchQueries","addVenue","newVenue","setNewVenue","userActionText","setUserActionText","handleChange","Dialog","open","onClose","toggleDialog","fullScreen","aria-labelledby","AppBar","Toolbar","IconButton","edge","aria-label","DialogTitle","DialogContent","DialogContentText","TextField","venueTypeId","autoComplete","customInput","format","Button","valid","isNaN","parseInt","Object","values","indexOf","validateVenue","typeId","cityId","response","boxShadow","float","tabIndicator","classes","venues","venueTypeFilter","onSetVenueTypeFilter","Fragment","Tabs","e","indicator","orientation","scrollButtons","Tab","results","x","push","keys","getVenueTypes","sort","index","pageStyle","sectionHeader","sectionHeaderTitle","flexGrow","venueList","marginLeft","dialogOpen","setDialogOpen","setVenueTypeFilter","me","a","b","Add","filter","image","venueHeaderImage","similarVenues","setSimilarVenues","venueId","radius","columnWrapper","mainColumn","sideColumm","match","params","venueBySlug","venueTypeName","venuePrimaryTypeName","createMuiTheme","palette","primary","main","blue","default","typography","useNextVariants","WrappedComponent","SIGNUP_MUTATION","LOGIN_MUTATION","LoginDialog","login","undefined","email","password","firstName","lastName","errorMessage","_update","cache","info","async","writeData","currentUser","_confirm","signup","_saveUserData","document","_error","graphQLErrors","setState","extensions","exception","errors","prevProps","this","maxWidth","fullWidth","dialogMainError","dialogMainContent","DialogActions","mutation","update","Component","withRouter","textAlign","LoginButton","renderUserInfo","callback","addEventListener","withCurrentUser","compose","graphql","ButtonAppBar","anchorEl","toggleMenu","currentTarget","root","logoText","grow","loginButton","menuWrapper","menuButton","Boolean","removeItem","history","styles","nonHomepageStyles","borderBottom","borderBottomColor","blueGrey","currentStyles","AppBarWithStyles","App","theme","CssBaseline","appBarSpacer","exact","path","HomePage","DashboardPage","VenuePage","fontFamily","hostname","InMemoryCache","defaultState","userInfo","parse","__typename","getUserInfoFromStorage","stateLink","withClientState","defaults","resolvers","Mutation","updateUserInfo","_","httpLink","HttpLink","uri","process","credentials","headers","authorization","ApolloClient","link","ApolloLink","from","networkError","locations","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb746321.chunk.js","sourcesContent":["export default {\n\thome: '/',\n\tdashboard: '/dashboard',\n\tvenue: '/venue/:venueSlug',\n\tvenuePath: (venueSlug) => `/venue/${venueSlug}`\n}","import Routes from '../routes'\n\nexport const isHomepage = location => (location.pathname === Routes.home)","export const headerStyles = (imageUrl, height) => {\n\treturn {\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexWrap: 'wrap',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tbackground: `linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url(/images/${imageUrl}) 50% 50% no-repeat`,\n\t\t\tbackgroundSize: 'cover',\n\t\t\theight: height,\n\t\t},\n\t\theaderText: {\n\t\t\tcolor: '#ffffff',\n\t\t},\n\t}\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport {headerStyles} from '../../utils/styleUtils'\n\nconst headerStyle = headerStyles('family-biking-cmp.jpg', '700px')\n\nexport default () => {\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>Experience</strong> childhood, again.\n\t\t\t</Typography>\n\t\t</div>)\n}","import React from \"react\";\n\nimport \"./valuePropSection.css\";\n\nexport default props => {\n  const { title, icon, text } = props;\n  const iconStyle = {\n    background: `url(/images/icons/${icon}.png) 0% 0% / 60px 60px no-repeat`,\n    width: \"60px\",\n    height: \"60px\"\n  };\n\n  return (\n    <div className=\"value-prop-section\">\n      <div className=\"value-prop-title\">{title}</div>\n      <div className=\"value-prop-icon\" style={iconStyle}></div>\n      <div className=\"value-prop-text\">{text}</div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport ValuePropSection from \"./valueProp/valuePropSection\";\nimport \"./valueProp.css\";\n\nconst discoverContent = {\n  title: \"Discover\",\n  icon: \"discover\",\n  text: `Find out about great local places to visit with your family. From restaurants, to museums, \n\tparks and playgrounds, make the most of your time!`\n};\n\nconst trackContent = {\n  title: \"Track\",\n  icon: \"track\",\n  text: `Had a great time sharing a meal with your family or enjoyed a hiking trail? Jot it down to build your \n\troster of go-to places for your trips.`\n};\n\nconst shareContent = {\n  title: \"Share\",\n  icon: \"share\",\n  text: `Share your favorite places to visit with friends and family, and hear about what others are \n\tenjoying, for great new ideas.`\n};\n\nexport default () => {\n  return (\n    <div className=\"value-prop-container\">\n      <ValuePropSection {...discoverContent} />\n      <ValuePropSection {...trackContent} />\n      <ValuePropSection {...shareContent} />\n    </div>\n  );\n};\n","import gql from \"graphql-tag\"\n\nexport const CURRENT_USER_QUERY = gql`\n\tquery {\n\t\t\tcurrentUser @client {\n\t\t\t\t\tid\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t}\n\t}\n`","import { AUTH_TOKEN, USER_INFO } from \"../constants\";\nimport { graphql } from \"react-apollo\";\nimport { compose } from \"recompose\";\nimport { CURRENT_USER_QUERY } from \"../graphql/userQueries\";\n\nexport const isUserLoggedIn = () => !!localStorage.getItem(AUTH_TOKEN);\n\nexport const logoutUser = () => {\n  localStorage.removeItem(AUTH_TOKEN);\n  localStorage.removeItem(USER_INFO);\n};\n\nexport const setUserInfo = (token, user) => {\n  localStorage.setItem(AUTH_TOKEN, token);\n  localStorage.setItem(USER_INFO, JSON.stringify(user));\n};\n\nexport const getUserInfoFromStorage = () => {\n  const userInfo = localStorage.getItem(USER_INFO);\n\n  if (userInfo) {\n    return JSON.parse(userInfo);\n  } else {\n    return {\n      __typename: \"User\",\n      id: null,\n      firstName: null,\n      lastName: null,\n      email: null\n    };\n  }\n};\n\nexport const withCurrentUser = WrappedComponent => {\n  return compose(\n    graphql(CURRENT_USER_QUERY, {\n      props: ({ data: { currentUser } }) => ({\n        currentUser\n      })\n    })\n  )(WrappedComponent);\n};\n\nexport const listenForOpenSignUpDialog = callback => {\n  window.addEventListener(\"openSignUpModal\", () => callback());\n};\nexport const openSignUpDialog = () => {\n  const event = new Event(\"openSignUpModal\");\n  window.dispatchEvent(event);\n};\n","export const AUTH_TOKEN = 'auth-token'\nexport const USER_INFO = 'user-info'","import React from 'react'\nimport { isUserLoggedIn, openSignUpDialog } from '../../utils/userUtils'\n\nimport '../shared/button.css'\nimport './signup.css'\n\nexport default () => {\n  const renderSignUp = () => {\n    return (\n      <div>\n        <button\n          className=\"form-button homepage-signup-button\"\n          onClick={() => openSignUpDialog()}\n        >\n          Get Started\n        </button>\n      </div>\n    )\n  }\n\n  return <div>{!isUserLoggedIn() && renderSignUp()}</div>\n}\n","import React from 'react'\nimport Header from './homepage/header'\nimport ValueProp from './homepage/valueProp'\nimport SignUpSection from './homepage/signup'\n\nexport default () => {\n  return (\n    <div>\n      <Header />\n      <ValueProp />\n      <SignUpSection />\n    </div>\n  )\n}\n","import gql from \"graphql-tag\"\n\nconst VenueDetails = gql`\n    fragment VenueDetails on Venue {\n        id\n        name\n        slug\n        streetAddress\n        zipcode\n        city\n        state\n        lat\n        lng\n        venueTypes {\n            id\n            name\n            image\n        }\n    }\n`\n\nexport const GET_VENUE_BASICS = gql`\n    query ($venueId: ID!) {\n        venue(id: $venueId) {\n            ...VenueDetails\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUE_BY_SLUG = gql`\n    query ($venueSlug: String!) {\n        venueBySlug(slug: $venueSlug) {\n            ...VenueDetails\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUES_FOR_CURRENT_USER = gql`\n    query {\n        me {\n            venues {\n                ...VenueDetails\n            }\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUE_TYPES = gql`\n    query {\n        venueTypes {\n            id\n            name\n            image\n        }\n    }\n`\n\nexport const GET_SIMILAR_VENUES_IN_RADIUS = gql`\n    query ($venueId: ID!, $limit: Int, $radius: Int) {\n        similarVenues(id: $venueId, first: $limit, radius: $radius) {\n            id\n            name\n            streetAddress\n            zipcode\n            city\n        }\n    }\n`","import React from 'react'\nimport { DirectionsRun, NearMe, Restaurant } from '@material-ui/icons'\n\nexport const venueMapLink = venue => {\n  const address = `${venue.streetAddress}, ${venue.city}, ${venue.state} ${venue.zipcode}`\n  return `https://maps.google.com/?q=${encodeURIComponent(address)}`\n}\n\nexport const venueIcon = (venue, cssClass) => {\n  let venueIconComponent\n\n  switch (venue.venueTypes[0].name) {\n    case 'restaurant':\n      venueIconComponent = <Restaurant className={cssClass} />\n      break\n    case 'outdoor playground':\n      venueIconComponent = <DirectionsRun className={cssClass} />\n      break\n    default:\n      venueIconComponent = <NearMe className={cssClass} />\n  }\n\n  return venueIconComponent\n}\n\nexport const venueHeaderImage = venue =>\n  venue.venueTypes[0].image || 'restaurant-header-cmp.jpg'\n\nexport const venuePrimaryTypeName = venue => venue.venueTypes[0].name || 'venue'\n","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\n\nimport { venueMapLink, venueIcon } from '../../utils/venueUtils'\nimport { Link as RouterLink } from 'react-router-dom'\nimport Routes from '../../routes'\n\nconst styles = {\n  '@global': {\n    '.venueItem': {\n      marginTop: '5px',\n      marginBottom: '5px',\n      backgroundColor: '#f6f6f6',\n      padding: '15px'\n    },\n    '.venueIcon': {\n      width: '15px',\n      height: 'auto',\n      marginRight: '5px',\n      position: 'relative',\n      top: '2px'\n    }\n  }\n}\n\nconst VenueListItem = props => {\n  const { venue } = props\n\n  return (\n    <div className=\"venueItem\">\n      <div>\n        <Typography\n          variant=\"h6\"\n          component={RouterLink}\n          to={Routes.venuePath(venue.slug)}\n        >\n          {venue.name}\n        </Typography>\n      </div>\n      <div>\n        {venueIcon(venue, 'venueIcon')}\n        {venue.venueTypes && venue.venueTypes.length\n          ? `${venue.venueTypes[0].name} in `\n          : ''}\n        <a href={venueMapLink(venue)} target=\"_blank\" rel=\"noopener noreferrer\">\n          {venue.city}, {venue.state}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(VenueListItem)\n","import gql from \"graphql-tag\"\n\nexport const GET_CITIES = gql`\n\tquery ($limit: Int, $query: String) {\n\t\tcities(first: $limit, query: $query) {\n\t\t\tid\n\t\t\tname\n\t\t\tstate\n\t\t}\n\t}\n`","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { GET_CITIES } from \"../../graphql/cityQueries\"\nimport { withApollo } from \"react-apollo\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\n\nconst style = {\n\tcontainer: {\n\t\tposition: 'relative',\n\t\twidth: '500px'\n\t},\n\tinput: {\n\t\tborder: '1px solid #ccc',\n\t\toutline: 'none',\n\t\twidth: '300px',\n\t\tpadding: '20px',\n\t\tfontSize: '17px',\n\t},\n\tsuggestionsContainer: {\n\t\tposition: 'absolute',\n\t\twidth: '300px',\n\t\ttop: 62,\n\t\tleft: 0,\n\t\tborder: '1px solid #efefef'\n\t},\n\tsuggestionItem: {\n\t\twidth: '100%',\n\t\tpadding: '10px'\n\t},\n\tformControl: {\n\t\tminWidth: '500px',\n\t\tmarginTop: '16px',\n\t\tmarginBottom: '8px',\n\t\theight: '16px'\n\t}\n}\n\nconst CityFormField = ({ client, onCitySelected }) => {\n\tconst [query, setQuery] = useState('')\n\tconst [selectedOption, setSelectedOption] = useState({})\n\tconst [options, setOptions] = useState([])\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getSuggestions = (query) => {\n\t\t\t\treturn client.query({\n\t\t\t\t\tquery: GET_CITIES,\n\t\t\t\t\tvariables: { limit: 10, query },\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (query && query.length >= 3) {\n\t\t\t\tgetSuggestions(query).then(({ data }) => {\n\t\t\t\t\tsetOptions(data.cities.map(city => {\n\t\t\t\t\t\treturn {value: city.id, label: `${city.name}, ${city.state}`}\n\t\t\t\t\t}))\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetOptions([])\n\t\t\t}\n\t\t},\n\t\t[query, client],\n\t)\n\n\tconst handleInputChange = (text) => {\n\t\tsetQuery(text)\n\t}\n\n\tconst handleOptionChange = option => {\n\t\tsetSelectedOption(option)\n\t\tonCitySelected(option)\n\t}\n\n\tconst hasOptions = () => options && options.length\n\n\treturn (\n\t\t<div style={style.container}>\n\t\t\t<FormControl style={style.formControl}>\n\t\t\t\t<InputLabel shrink={true}\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"age-simple\">City</InputLabel>\n\t\t\t</FormControl>\n\t\t\t<Select\n\t\t\t\tvalue={selectedOption}\n\t\t\t\tonChange={handleOptionChange}\n\t\t\t\toptions={options}\n\t\t\t\tonInputChange={handleInputChange}\n\t\t\t\tplaceholder=\"Type in name of city\"\n\t\t\t\tisClearable={true}\n\t\t\t\tmenuIsOpen={hasOptions()}\n\t\t\t\tescapeClearsValue={true}\n\t\t\t/>\n\n\t\t</div>\n\t)\n}\n\nexport default withApollo(CityFormField)","import React, { useState } from 'react'\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport { Query } from \"react-apollo\"\n\nimport { GET_VENUE_TYPES } from \"../../graphql/venueQueries\"\n\nconst style = {\n\tformControl: {\n\t\tminWidth: '500px',\n\t\tmarginTop: '16px',\n\t\tmarginBottom: '8px',\n\t}\n}\n\nexport default ({ onVenueTypeSelected }) => {\n\tconst [selectedOption, setSelectedOption] = useState('')\n\n\tconst handleOptionChange = option => {\n\t\tsetSelectedOption(option)\n\t\tonVenueTypeSelected(option)\n\t}\n\n\treturn (\n\t\t<Query query={GET_VENUE_TYPES}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\tconst venueTypes = data.venueTypes\n\n\t\t\t\treturn (\n\t\t\t\t\t<FormControl style={style.formControl}>\n\t\t\t\t\t\t<InputLabel htmlFor=\"age-simple\">Venue Type</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={selectedOption}\n\t\t\t\t\t\t\tonChange={event => handleOptionChange(event.target.value)}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\tid: 'venue-type',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{venueTypes.map(venueType => (\n\t\t\t\t\t\t\t\t<MenuItem key={venueType.id} value={venueType.id}>{venueType.name}</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Query>\n\t)\n}\n","import gql from \"graphql-tag\"\n\nexport const CREATE_VENUE_MUTATION = gql`\n    mutation CreateVenueMutation($name: String!, $streetAddress: String!, \n        $zipcode: Int!, $cityId: Int!, $typeId: Int!) {\n        createVenue (\n            name: $name\n            streetAddress: $streetAddress\n            zipcode: $zipcode\n            city: {\n                id: $cityId\n            }\n            venueType: {\n                id: $typeId\n            }\n        ) {\n            id\n            name\n            streetAddress\n            venueTypes {\n                name\n            }\n        }\n    }\n`\n","import React, { useState } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\nimport NumberFormat from 'react-number-format'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport CityFormField from './cityFormField'\nimport VenueTypeFormField from './venueTypeFormField'\nimport { CREATE_VENUE_MUTATION } from \"../../graphql/venueMutations\"\nimport Button from \"@material-ui/core/Button\"\n\nimport { validateVenue } from \"../../utils/validationUtils\"\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { GET_VENUES_FOR_CURRENT_USER } from \"../../graphql/venueQueries\"\n\nconst USER_ACTION_TEXT = 'Please enter information about a venue'\nconst USER_ACTION_TEXT_ERROR = 'Please enter valid venue information'\n\nconst style = {\n\tappBar: {\n\t\tposition: 'relative',\n\t},\n\ttitle: {\n\t\tmargin: '0 auto',\n\t},\n\tbody: {\n\t\tmargin: '0 auto',\n\t},\n\tinput: {\n\t\tminWidth: '500px',\n\t},\n}\n\nconst venueStub = {\n\tname: '',\n\ttype: {\n\t\tid: null,\n\t},\n\tstreetAddress: '',\n\tzipcode: '',\n\tlat: '',\n\tlng: '',\n\tcity: {},\n}\n\nexport default (props) => {\n\tconst [addVenue] = useMutation(CREATE_VENUE_MUTATION, {\n\t\tonError(error) {\n\t\t\tconsole.log('error', error)\n\t\t},\n\t\tonCompleted(data) {\n\t\t\tconsole.log('data', data)\n\t\t},\n\t\trefetchQueries: [{\n\t\t\tquery: GET_VENUES_FOR_CURRENT_USER,\n\t\t}],\n\t})\n\n\tconst [newVenue, setNewVenue] = useState({ ...venueStub })\n\tconst [userActionText, setUserActionText] = useState(USER_ACTION_TEXT)\n\n\tconst onCitySelected = city => {\n\t\tconsole.log('city selected:', city)\n\t\tsetNewVenue({ ...newVenue, city: { id: city.value } })\n\t}\n\n\tconst onVenueTypeSelected = venueTypeId => {\n\t\tconsole.log('venueTypeId selected:', venueTypeId)\n\t\tsetNewVenue({ ...newVenue, type: { id: venueTypeId } })\n\t}\n\n\tconst handleChange = name => event => {\n\t\tconsole.log(name, event.target.value)\n\t\tsetNewVenue({ ...newVenue, [name]: event.target.value })\n\t}\n\n\tconst onSubmit = () => {\n\t\tif(validateVenue(newVenue)) {\n\t\t\taddVenue({\n\t\t\t\tvariables: {\n\t\t\t\t\tname: newVenue.name,\n\t\t\t\t\ttypeId: newVenue.type.id,\n\t\t\t\t\tstreetAddress: newVenue.streetAddress,\n\t\t\t\t\tzipcode: parseInt(newVenue.zipcode),\n\t\t\t\t\tcityId: newVenue.city.id,\n\t\t\t\t},\n\t\t\t}).then(response => {\n\t\t\t\tconsole.log('response', response)\n\n\t\t\t\tsetNewVenue({ ...venueStub })\n\n\t\t\t\tprops.toggleDialog()\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tsetUserActionText(USER_ACTION_TEXT_ERROR)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.open}\n\t\t\tonClose={props.toggleDialog}\n\t\t\tfullScreen={true}\n\t\t\taria-labelledby=\"form-dialog-title\">\n\t\t\t<AppBar style={style.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={props.toggleDialog} aria-label=\"close\">\n\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<DialogTitle style={style.title}>Add New Destination</DialogTitle>\n\t\t\t<DialogContent style={style.body}>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{userActionText}\n\t\t\t\t</DialogContentText>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"venue-name\"\n\t\t\t\t\tlabel=\"Venue name\"\n\t\t\t\t\tvalue={newVenue.name}\n\t\t\t\t\tonChange={handleChange('name')}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tstyle={style.input}\n\t\t\t\t/>\n\t\t\t\t<br/>\n\t\t\t\t<VenueTypeFormField onVenueTypeSelected={onVenueTypeSelected}/>\n\t\t\t\t<br/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"venue-street-address\"\n\t\t\t\t\tname=\"street-address\"\n\t\t\t\t\tlabel=\"Street address\"\n\t\t\t\t\tvalue={newVenue.streetAddress}\n\t\t\t\t\tonChange={handleChange('streetAddress')}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tautoComplete=\"shipping street-address\"\n\t\t\t\t\tstyle={style.input}\n\t\t\t\t/>\n\t\t\t\t<CityFormField onCitySelected={onCitySelected}/>\n\n\t\t\t\t<NumberFormat customInput={TextField}\n\t\t\t\t\t\t\t\t\t\t\tid=\"venue-zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={newVenue.zipcode}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('zipcode')}\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={style.input}\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"postal-code\"\n\t\t\t\t\t\t\t\t\t\t\tformat=\"#####\"/>\n\t\t\t\t<div>\n\t\t\t\t\t<Button color='primary' onClick={onSubmit}>\n\t\t\t\t\t\tCreate venue\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t)\n}\n","export const validateVenue = ({ name, type, streetAddress, city, zipcode }) => {\n\tlet valid = {\n\t\tname: false,\n\t\ttype: false,\n\t\tstreetAddress: false,\n\t\tcity: false,\n\t\tzipcode: false\n\t}\n\n\tif (name && name.length >= 2) {\n\t\tvalid.name = true\n\t}\n\n\tif(type && type.id) {\n\t\tvalid.type = true\n\t}\n\n\tif(streetAddress && streetAddress.length >= 2) {\n\t\tvalid.streetAddress = true\n\t}\n\n\tif(city && city.id) {\n\t\tvalid.city = true\n\t}\n\n\tif(zipcode && !isNaN(parseInt(zipcode))) {\n\t\tvalid.zipcode = true\n\t}\n\n\treturn (Object.values(valid).indexOf(false) === -1)\n}","import React from 'react'\nimport AppBar from \"@material-ui/core/AppBar/AppBar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { withStyles } from \"@material-ui/core\"\n\nconst styles = {\n\tappBar: {\n\t\tboxShadow: \"none\",\n\t\tfloat: \"left\",\n\t\twidth: '300px',\n\t},\n\ttabIndicator: {\n\t\tbackgroundColor: '#ffffff',\n\t},\n}\n\nconst VenueTypeTabs = ({ classes, venues, venueTypeFilter, onSetVenueTypeFilter }) => {\n\tconst handleVenueTypeClick = (e, value) => {\n\t\tonSetVenueTypeFilter(value)\n\t}\n\n\tconst getVenueTypes = venues => {\n\t\tlet results = {}\n\n\t\tfor (let x = 0; x < venues.length; x++) {\n\t\t\tif ((venues[x].venueTypes && venues[x].venueTypes.length)) {\n\t\t\t\tif (results[venues[x].venueTypes[0].name]) {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name].venues.push(venues[x])\n\t\t\t\t} else {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name] = {\n\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\tid: venues[x].venueTypes[0].id,\n\t\t\t\t\t\t\tname: venues[x].venueTypes[0].name,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvenues: [venues[x]],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Object.keys(results)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Tabs value={venueTypeFilter}\n\t\t\t\t\t\t\tonChange={handleVenueTypeClick}\n\t\t\t\t\t\t\tclasses={{ indicator: classes.tabIndicator }}\n\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\tscrollButtons=\"auto\">\n\t\t\t\t\t<Tab label='all' value='all'/>\n\t\t\t\t\t{getVenueTypes(venues).sort().map((type, index) => (\n\t\t\t\t\t\t<Tab label={type} value={type} key={index}/>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default withStyles(styles)(VenueTypeTabs)","import React, { useState } from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Add } from '@material-ui/icons'\nimport { GET_VENUES_FOR_CURRENT_USER } from '../graphql/venueQueries'\n\nimport VenueListItem from './dashboard/venueListItem'\nimport AddVenueDialog from './dashboard/addVenueDialog'\nimport VenueTypeTabs from './dashboard/venueTypeTabs'\n\nconst pageStyle = {\n  sectionHeader: {\n    marginBottom: '15px',\n    display: 'flex'\n  },\n  sectionHeaderTitle: {\n    flexGrow: 2\n  },\n  venueList: {\n    marginLeft: '320px'\n  }\n}\n\nexport default () => {\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [venueTypeFilter, setVenueTypeFilter] = useState('all')\n\n  const toggleDialog = () => {\n    setDialogOpen(!dialogOpen)\n  }\n\n  return (\n    <Query query={GET_VENUES_FOR_CURRENT_USER}>\n      {({ loading, error, data }) => {\n        if (loading) return 'Loading...'\n        if (error) return `Error! ${error.message}`\n\n        const venues = data.me.venues.sort((a, b) => {\n          if (a.name > b.name) return 1\n          if (b.name > a.name) return -1\n          return 0\n        })\n\n        return (\n          <div className=\"mainContainer\">\n            <div className=\"mainContent\">\n              <div style={pageStyle.sectionHeader}>\n                <Typography variant=\"h5\" style={pageStyle.sectionHeaderTitle}>\n                  My destinations\n                </Typography>\n                <Button variant=\"outlined\" onClick={toggleDialog}>\n                  <Add />\n                  Add Destination\n                </Button>\n                <AddVenueDialog open={dialogOpen} toggleDialog={toggleDialog} />\n              </div>\n              <VenueTypeTabs\n                venues={venues}\n                onSetVenueTypeFilter={setVenueTypeFilter}\n                venueTypeFilter={venueTypeFilter}\n              ></VenueTypeTabs>\n              <div style={pageStyle.venueList}>\n                {venues\n                  .filter(\n                    venue =>\n                      venueTypeFilter === 'all' ||\n                      venue.venueTypes[0].name === venueTypeFilter\n                  )\n                  .map(venue => (\n                    <VenueListItem key={venue.id} venue={venue} />\n                  ))}\n              </div>\n            </div>\n          </div>\n        )\n      }}\n    </Query>\n  )\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { headerStyles } from '../../utils/styleUtils'\nimport { venueHeaderImage } from '../../utils/venueUtils'\n\nexport default props => {\n  const { venue } = props\n  const headerStyle = headerStyles(venueHeaderImage(venue), '300px')\n\n  return (\n    <div style={headerStyle.container}>\n      <Typography variant=\"h2\" style={headerStyle.headerText}>\n        <strong>{venue.name}</strong>\n      </Typography>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withApollo } from 'react-apollo'\nimport { GET_SIMILAR_VENUES_IN_RADIUS } from '../../graphql/venueQueries'\nimport '../shared/sidebarModule.css'\n\nconst SimilarVenues = ({ client, venue }) => {\n  const [similarVenues, setSimilarVenues] = useState([])\n  useEffect(() => {\n    client\n      .query({\n        query: GET_SIMILAR_VENUES_IN_RADIUS,\n        variables: { venueId: venue.id, limit: 5, radius: 10 }\n      })\n      .then(({ data }) => {\n        setSimilarVenues(data.similarVenues)\n      })\n  }, [venue, client])\n\n  return (\n    <div className=\"sidebar-module\">\n      <h3>Similar places near by</h3>\n      <div className=\"sidebar-module-body\">\n        {similarVenues &&\n          similarVenues.map(venue => <div key={venue.id}>{venue.name}</div>)}\n      </div>\n    </div>\n  )\n}\n\nexport default withApollo(SimilarVenues)\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport Typography from '@material-ui/core/Typography'\nimport { GET_VENUE_BY_SLUG } from '../graphql/venueQueries'\n\nimport VenueHeader from './venue/header'\nimport SimilarVenues from './venue/similarVenues'\nimport { venuePrimaryTypeName } from '../utils/venueUtils'\n\nconst pageStyle = {\n  sectionHeader: {\n    marginBottom: '15px'\n  },\n  columnWrapper: {\n    display: 'flex'\n  },\n  mainColumn: {\n    flexGrow: 3\n  },\n  sideColumm: {\n    flexGrow: 1\n  }\n}\n\nexport default ({ match }) => {\n  const venueSlug = match.params.venueSlug\n\n  if (!venueSlug) {\n    return <div>Venue not found.</div>\n  } else {\n    return (\n      <Query query={GET_VENUE_BY_SLUG} variables={{ venueSlug }}>\n        {({ loading, error, data }) => {\n          if (loading) return 'Loading...'\n          if (error) return `Error! ${error.message}`\n\n          const venue = data.venueBySlug\n          const venueTypeName = venuePrimaryTypeName(venue)\n          console.log('data', data)\n          return (\n            <div>\n              <VenueHeader venue={venue} />\n              <div className=\"mainContainer\">\n                <div className=\"mainContent\">\n                  <Typography variant=\"h5\" style={pageStyle.sectionHeader}>\n                    {venue.name}\n                  </Typography>\n                  <div style={pageStyle.columnWrapper}>\n                    <div style={pageStyle.mainColumn}>\n                      This {venueTypeName} is located in {venue.city},{' '}\n                      {venue.state}.\n                    </div>\n                    <div style={pageStyle.sideColumm}>\n                      <SimilarVenues venue={venue} />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        }}\n      </Query>\n    )\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\n\nexport default createMuiTheme({\n\t\tpalette: {\n\t\t\tprimary: {\n\t\t\t\tmain: blue[500],\n\t\t\t},\n\t\t\tbackground: { default: '#ffffff'},\n\t\t},\n\t\ttypography: {\n\t\t\tuseNextVariants: true,\n\t\t},\n\t},\n)","import gql from \"graphql-tag\"\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation($email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n        signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation LoginMutation($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`","import React, { Component } from \"react\"\nimport { withRouter } from \"react-router\"\n\nimport { setUserInfo } from \"../../utils/userUtils\"\nimport Routes from \"../../routes\"\nimport { Mutation } from \"react-apollo\"\nimport { SIGNUP_MUTATION, LOGIN_MUTATION } from \"../../graphql/userMutations\"\n\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\n\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\n\nconst styles = {\n  dialogMainContent: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  dialogMainError: {\n    textAlign: \"center\"\n  }\n}\n\nclass LoginDialog extends Component {\n  state = {\n    login: this.props.login !== undefined ? this.props.login : true, // switch between Login and SignUp\n    email: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    errorMessage: null\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.open !== this.props.open) {\n      this.setState({ errorMessage: null })\n    }\n\n    if (prevProps.login !== this.props.login) {\n      this.setState({ login: this.props.login })\n    }\n  }\n\n  render() {\n    const {\n      login,\n      email,\n      password,\n      firstName,\n      lastName,\n      errorMessage\n    } = this.state\n    const { classes } = this.props\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.toggleDialog}\n        maxWidth=\"sm\"\n        fullWidth={true}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"login-dialog-title\">\n          {login ? \"Login\" : \"Sign Up\"}\n        </DialogTitle>\n        <DialogContent>\n          {errorMessage && (\n            <DialogContentText className={classes.dialogMainError}>\n              {errorMessage}\n            </DialogContentText>\n          )}\n          <div className={classes.dialogMainContent}>\n            {!login && (\n              <span>\n                <TextField\n                  id=\"firstName\"\n                  label=\"First name\"\n                  error={!!errorMessage}\n                  value={firstName}\n                  onChange={e => this.setState({ firstName: e.target.value })}\n                  margin=\"normal\"\n                  fullWidth\n                />\n                <TextField\n                  id=\"lastName\"\n                  label=\"Last name\"\n                  error={!!errorMessage}\n                  value={lastName}\n                  onChange={e => this.setState({ lastName: e.target.value })}\n                  margin=\"normal\"\n                  fullWidth\n                />\n              </span>\n            )}\n            <TextField\n              id=\"email\"\n              label=\"Email\"\n              error={!!errorMessage}\n              value={email}\n              onChange={e => this.setState({ email: e.target.value })}\n              margin=\"normal\"\n              fullWidth\n            />\n            <TextField\n              id=\"password\"\n              label=\"Password\"\n              error={!!errorMessage}\n              type=\"password\"\n              autoComplete=\"current-password\"\n              onChange={e => this.setState({ password: e.target.value })}\n              margin=\"normal\"\n              fullWidth\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => this.setState({ login: !login, errorMessage: null })}\n            color=\"primary\"\n            style={{ marginRight: \"auto\" }}\n          >\n            {login ? \"need to create an account?\" : \"already have an account?\"}\n          </Button>\n\n          <Button onClick={this.props.toggleDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Mutation\n            mutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n            variables={{ email, password, firstName, lastName }}\n            update={(cache, { data }) =>\n              this._update(cache, login ? data.login : data.signup)\n            }\n            onCompleted={data => this._confirm(data)}\n            onError={error => this._error(error)}\n          >\n            {mutation => (\n              <Button color=\"primary\" onClick={mutation}>\n                {login ? \"login\" : \"create account\"}\n              </Button>\n            )}\n          </Mutation>\n        </DialogActions>\n      </Dialog>\n    )\n  }\n\n  _update = async (cache, info) => {\n    cache.writeData({\n      data: {\n        currentUser: {\n          ...info.user,\n          token: info.token\n        }\n      }\n    })\n  }\n\n  _confirm = async data => {\n    this.state.error = null\n\n    const { token, user } = this.state.login ? data.login : data.signup\n    this._saveUserData(token, user)\n\n    document.location = Routes.dashboard\n  }\n\n  _saveUserData = (token, user) => {\n    setUserInfo(token, user)\n  }\n\n  _error = async ({ graphQLErrors }) => {\n    if (\n      this.state.login &&\n      graphQLErrors &&\n      graphQLErrors[0] &&\n      graphQLErrors[0].message\n    ) {\n      this.setState({ errorMessage: graphQLErrors[0].message })\n    } else if (\n      graphQLErrors &&\n      graphQLErrors[0] &&\n      graphQLErrors[0].extensions.exception.errors[0].message\n    ) {\n      this.setState({\n        errorMessage: graphQLErrors[0].extensions.exception.errors[0].message\n      })\n    }\n  }\n}\n\nexport default withRouter(withStyles(styles)(LoginDialog))\n","import React, { Component } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { withRouter } from \"react-router\"\nimport {\n  isUserLoggedIn,\n  withCurrentUser,\n  listenForOpenSignUpDialog\n} from \"../../utils/userUtils\"\nimport LoginDialog from \"./loginDialog\"\nimport Typography from \"@material-ui/core/Typography\"\n\nclass LoginButton extends Component {\n  state = {\n    dialogOpen: false,\n    login: true\n  }\n\n  componentDidMount() {\n    listenForOpenSignUpDialog(() => {\n      this.setState({ dialogOpen: true, login: false })\n    })\n  }\n\n  toggleDialog = () => {\n    this.setState({ dialogOpen: !this.state.dialogOpen, login: true })\n  }\n\n  renderUserInfo = currentUser => {\n    if (currentUser && currentUser.id) {\n      return `Welcome, ${currentUser.firstName}`\n    } else {\n      return \"\"\n    }\n  }\n\n  render() {\n    const { currentUser } = this.props\n\n    return isUserLoggedIn() ? (\n      <Typography\n        variant=\"button\"\n        color=\"inherit\"\n        className={this.props.className}\n      >\n        {this.renderUserInfo(currentUser)}\n      </Typography>\n    ) : (\n      <span>\n        <Button\n          onClick={this.toggleDialog}\n          className={this.props.className}\n          color=\"inherit\"\n        >\n          Login\n        </Button>\n        <LoginDialog\n          open={this.state.dialogOpen}\n          login={this.state.login}\n          toggleDialog={this.toggleDialog}\n        />\n      </span>\n    )\n  }\n}\n\nexport default withCurrentUser(withRouter(LoginButton))\n","import React, { Component } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport LoginButton from '../components/shared/loginButton'\nimport { logoutUser, isUserLoggedIn } from '../utils/userUtils'\nimport { withRouter } from 'react-router'\n\nimport Routes from '../routes'\n\nclass ButtonAppBar extends Component {\n  state = {\n    anchorEl: null\n  }\n\n  toggleMenu = event => {\n    this.state.anchorEl\n      ? this.setState({ anchorEl: null })\n      : this.setState({ anchorEl: event.currentTarget })\n  }\n\n  render() {\n    const { classes } = this.props\n\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          style={{ background: 'transparent', boxShadow: 'none' }}\n        >\n          <Toolbar variant=\"dense\" className={classes.container}>\n            <Typography\n              className={classes.logoText}\n              variant=\"button\"\n              color=\"inherit\"\n            >\n              KidTrip\n            </Typography>\n            <Typography\n              variant=\"h6\"\n              color=\"inherit\"\n              className={classes.grow}\n            ></Typography>\n            <LoginButton className={classes.loginButton} />\n\n            {isUserLoggedIn() && (\n              <span className={classes.menuWrapper}>\n                <IconButton\n                  onClick={this.toggleMenu}\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"Menu\"\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={this.state.anchorEl}\n                  open={Boolean(this.state.anchorEl)}\n                  onClose={this.toggleMenu}\n                >\n                  <MenuItem\n                    component={RouterLink}\n                    to={Routes.home}\n                    onClick={this.toggleMenu}\n                  >\n                    Home\n                  </MenuItem>\n                  <MenuItem\n                    component={RouterLink}\n                    to={Routes.dashboard}\n                    onClick={this.toggleMenu}\n                  >\n                    Dashboard\n                  </MenuItem>\n                  <MenuItem onClick={this.toggleMenu}>My account</MenuItem>\n                  <MenuItem\n                    onClick={() => {\n                      logoutUser()\n                      this.props.history.push(`/`)\n                    }}\n                  >\n                    Logout\n                  </MenuItem>\n                </Menu>\n              </span>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ButtonAppBar)\n","import React from 'react'\nimport { isHomepage } from '../utils/routeUtils'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nimport AppBar from './appBar'\n\nconst styles = {\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  menuWrapper: {\n    marginLeft: 15\n  }\n}\n\nconst nonHomepageStyles = {\n  ...styles,\n  container: {\n    borderBottom: '1px solid',\n    borderBottomColor: blueGrey[100],\n    backgroundColor: 'white'\n  },\n  grow: {\n    ...styles.grow,\n    color: blueGrey[500]\n  },\n  menuButton: {\n    ...styles.menuButton,\n    color: blueGrey[500]\n  },\n  loginButton: {\n    color: blueGrey[500]\n  },\n  logoText: {\n    color: blueGrey[500]\n  }\n}\n\nconst AppBarContainer = props => {\n  const currentStyles = isHomepage(props.location) ? styles : nonHomepageStyles\n  const AppBarWithStyles = withStyles(currentStyles)(AppBar)\n  return <AppBarWithStyles />\n}\n\nexport default withRouter(AppBarContainer)\n","import React, { Component } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport Routes from './routes'\nimport { isHomepage } from './utils/routeUtils'\n\nimport HomePage from './components/homePage'\nimport DashboardPage from './components/dashboardPage'\nimport VenuePage from './components/venuePage'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\nimport theme from './theme'\nimport AppBar from './layout/appBarContainer'\n\nconst styles = {\n  '@global': {\n    body: {\n      fontFamily: 'Roboto, Helvetica, Arial, sans-serif'\n    },\n    '.mainContainer': {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    '.mainContent': {\n      maxWidth: '1200px',\n      flexGrow: '1',\n      margin: '50px'\n    }\n  },\n  appBarSpacer: {\n    height: '49px'\n  }\n}\n\nclass App extends Component {\n  render() {\n    const { classes, location } = this.props\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <CssBaseline />\n          <AppBar />\n          {!isHomepage(location) && (\n            <div className={classes.appBarSpacer}></div>\n          )}\n          <Switch>\n            <Route exact path={Routes.home} component={HomePage} />\n            <Route exact path={Routes.dashboard} component={DashboardPage} />\n            <Route path={Routes.venue} component={VenuePage} />\n          </Switch>\n        </div>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport { ApolloProvider } from 'react-apollo'\nimport { withClientState } from 'apollo-link-state'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport { getUserInfoFromStorage } from './utils/userUtils'\nimport { AUTH_TOKEN } from './constants'\n\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST\n\nconst cache = new InMemoryCache()\n\nconst defaultState = {\n  currentUser: { ...getUserInfoFromStorage() }\n}\n\nconst stateLink = withClientState({\n  cache,\n  defaults: defaultState,\n  resolvers: {\n    Mutation: {\n      updateUserInfo: (_, { id, firstName, lastName, email }, { cache }) => {\n        const data = {\n          user: {\n            __typename: 'User',\n            id,\n            firstName,\n            lastName,\n            email\n          }\n        }\n        cache.writeData({ data })\n        return null\n      }\n    }\n  }\n})\n\nconst token = localStorage.getItem(AUTH_TOKEN)\nconst httpLink = new HttpLink({\n  uri: SERVER_HOST, // || 'http://localhost:4000',\n  credentials: 'same-origin',\n  headers: {\n    authorization: token ? `Bearer ${token}` : ''\n  }\n})\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        )\n      if (networkError) console.log(`[Network error]: ${networkError}`)\n    }),\n    stateLink,\n    httpLink\n  ]),\n  cache: new InMemoryCache(),\n  resolvers: {}\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
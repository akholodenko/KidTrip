{"version":3,"sources":["routes.js","utils/routeUtils.js","utils/styleUtils.js","components/homepage/header.js","components/homepage/valueProp/valuePropSection.js","components/homepage/valueProp.js","components/homePage.js","graphql/venueQueries.js","utils/venueUtils.js","components/dashboard/venueListItem.js","graphql/cityQueries.js","components/dashboard/cityFormField.js","components/dashboard/venueTypeFormField.js","graphql/venueMutations.js","components/dashboard/addVenueDialog.js","utils/validationUtils.js","components/dashboard/venueTypeTabs.js","components/dashboardPage.js","components/venue/header.js","components/venue/similarVenues.js","components/venuePage.js","theme.js","graphql/userQueries.js","utils/userUtils.js","constants.js","graphql/userMutations.js","components/shared/loginDialog.js","components/shared/loginButton.js","layout/appBar.js","layout/appBarContainer.js","App.js","serviceWorker.js","index.js"],"names":["home","dashboard","venue","venuePath","venueSlug","isHomepage","location","pathname","Routes","headerStyles","imageUrl","height","container","display","flexWrap","flexDirection","justifyContent","alignItems","background","backgroundSize","headerText","color","headerStyle","style","Typography","variant","props","title","icon","text","iconStyle","width","className","discoverContent","trackContent","shareContent","VenueDetails","gql","GET_VENUE_BY_SLUG","GET_VENUES_FOR_CURRENT_USER","GET_VENUE_TYPES","GET_SIMILAR_VENUES_IN_RADIUS","venueMapLink","address","streetAddress","city","state","zipcode","encodeURIComponent","withStyles","marginTop","marginBottom","backgroundColor","padding","marginRight","position","top","component","RouterLink","to","slug","name","cssClass","venueIconComponent","venueTypes","Restaurant","DirectionsRun","NearMe","venueIcon","length","href","target","rel","GET_CITIES","input","border","outline","fontSize","suggestionsContainer","left","suggestionItem","formControl","minWidth","withApollo","client","onCitySelected","useState","query","setQuery","selectedOption","setSelectedOption","options","setOptions","useEffect","variables","limit","getSuggestions","then","data","cities","map","value","id","label","FormControl","InputLabel","shrink","htmlFor","onChange","option","onInputChange","placeholder","isClearable","menuIsOpen","escapeClearsValue","onVenueTypeSelected","loading","error","message","Select","event","inputProps","venueType","MenuItem","key","CREATE_VENUE_MUTATION","appBar","margin","body","venueStub","type","lat","lng","useMutation","onError","console","log","onCompleted","refetchQueries","addVenue","newVenue","setNewVenue","userActionText","setUserActionText","handleChange","Dialog","open","onClose","toggleDialog","fullScreen","aria-labelledby","AppBar","Toolbar","IconButton","edge","onClick","aria-label","DialogTitle","DialogContent","DialogContentText","TextField","venueTypeId","autoComplete","customInput","format","Button","valid","isNaN","parseInt","Object","values","indexOf","validateVenue","typeId","cityId","response","boxShadow","float","tabIndicator","classes","venues","venueTypeFilter","onSetVenueTypeFilter","Fragment","Tabs","e","indicator","orientation","scrollButtons","Tab","results","x","push","keys","getVenueTypes","sort","index","pageStyle","sectionHeader","sectionHeaderTitle","flexGrow","venueList","marginLeft","dialogOpen","setDialogOpen","setVenueTypeFilter","me","a","b","Add","filter","image","venueHeaderImage","similarVenues","setSimilarVenues","venueId","radius","columnWrapper","mainColumn","sideColumm","match","params","venueBySlug","createMuiTheme","palette","primary","main","blue","default","typography","useNextVariants","CURRENT_USER_QUERY","isUserLoggedIn","localStorage","getItem","setUserInfo","token","user","setItem","JSON","stringify","WrappedComponent","SIGNUP_MUTATION","LOGIN_MUTATION","LoginDialog","login","email","password","firstName","lastName","errorMessage","_update","cache","info","async","writeData","currentUser","_confirm","signup","_saveUserData","document","_error","graphQLErrors","setState","extensions","exception","errors","prevProps","this","maxWidth","fullWidth","dialogMainError","dialogMainContent","DialogActions","mutation","update","Component","withRouter","textAlign","LoginButton","renderUserInfo","withCurrentUser","compose","graphql","ButtonAppBar","anchorEl","toggleMenu","currentTarget","root","logoText","grow","loginButton","menuWrapper","menuButton","Boolean","removeItem","history","styles","nonHomepageStyles","borderBottom","borderBottomColor","blueGrey","currentStyles","AppBarWithStyles","App","theme","CssBaseline","appBarSpacer","exact","path","HomePage","DashboardPage","VenuePage","fontFamily","window","hostname","InMemoryCache","defaultState","userInfo","parse","__typename","getUserInfoFromStorage","stateLink","withClientState","defaults","resolvers","Mutation","updateUserInfo","_","httpLink","HttpLink","uri","process","credentials","headers","authorization","ApolloClient","link","ApolloLink","from","networkError","locations","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oVAAe,GACdA,KAAM,IACNC,UAAW,aACXC,MAAO,oBACPC,UAAW,SAACC,GAAD,uBAAyBA,KCFxBC,EAAa,SAAAC,GAAQ,OAAKA,EAASC,WAAaC,EAAOR,M,SCFvDS,EAAe,SAACC,EAAUC,GACtC,MAAO,CACNC,UAAW,CACVC,QAAS,OACTC,SAAU,OACVC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,WAAW,sEAAD,OAAwER,EAAxE,uBACVS,eAAgB,QAChBR,OAAQA,GAETS,WAAY,CACXC,MAAO,aCTJC,EAAcb,EAAa,wBAAyB,SAE3C,aACd,OACC,yBAAKc,MAAOD,EAAYV,WACvB,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAOD,EAAYF,YAC3C,8CADD,wBCLY,G,OAAA,SAAAM,GAAU,IACfC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KACfC,EAAY,CAChBZ,WAAW,qBAAD,OAAuBU,EAAvB,qCACVG,MAAO,OACPpB,OAAQ,QAGV,OACE,yBAAKqB,UAAU,sBACb,yBAAKA,UAAU,oBAAoBL,GACnC,yBAAKK,UAAU,kBAAkBT,MAAOO,IACxC,yBAAKE,UAAU,mBAAmBH,MCXlCI,G,OAAkB,CACtBN,MAAO,WACPC,KAAM,WACNC,KAAK,sJAIDK,EAAe,CACnBP,MAAO,QACPC,KAAM,QACNC,KAAK,oJAIDM,EAAe,CACnBR,MAAO,QACPC,KAAM,QACNC,KAAK,kIAIQ,aACb,OACE,yBAAKG,UAAU,wBACb,kBAAC,EAAqBC,GACtB,kBAAC,EAAqBC,GACtB,kBAAC,EAAqBC,KC3Bb,aACb,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,k8CCNN,IAAMC,EAAeC,IAAH,KA4BLC,GATmBD,IAAH,IAMvBD,GAG2BC,IAAH,IAMxBD,IAGOG,EAA8BF,IAAH,IAQlCD,GAGOI,EAAkBH,IAAH,KAUfI,EAA+BJ,IAAH,K,mCCzD5BK,GAAe,SAACxC,GAC5B,IAAMyC,EAAO,UAAMzC,EAAM0C,cAAZ,aAA8B1C,EAAM2C,KAApC,aAA6C3C,EAAM4C,MAAnD,YAA4D5C,EAAM6C,SAC/E,MAAM,8BAAN,OAAqCC,mBAAmBL,K,SCyC1CM,eAtCA,CACd,UAAW,CACV,aAAc,CACbC,UAAW,MACXC,aAAc,MACdC,gBAAiB,UACjBC,QAAS,QAEV,aAAc,CACbtB,MAAO,OACPpB,OAAQ,OACR2C,YAAa,MACbC,SAAU,WACVC,IAAK,SAyBOP,EApBO,SAACvB,GAAW,IACzBxB,EAAUwB,EAAVxB,MAER,OAAQ,yBAAK8B,UAAU,aACtB,6BACC,kBAACR,EAAA,EAAD,CACCC,QAAQ,KACRgC,UAAWC,KACXC,GAAInD,EAAOL,UAAUD,EAAM0D,OAAQ1D,EAAM2D,OAE3C,6BD5BuB,SAAC3D,EAAO4D,GAChC,IAAIC,EAEJ,OAAQ7D,EAAM8D,WAAW,GAAGH,MAC5B,IAAK,aACJE,EAAqB,kBAACE,EAAA,EAAD,CAAYjC,UAAW8B,IAC5C,MACD,IAAK,qBACJC,EAAqB,kBAACG,EAAA,EAAD,CAAelC,UAAW8B,IAC/C,MACD,QACCC,EAAqB,kBAACI,GAAA,EAAD,CAAQnC,UAAW8B,IAGzC,OAAOC,ECeJK,CAAUlE,EAAO,aAChBA,EAAM8D,YAAc9D,EAAM8D,WAAWK,OAAtC,UAAmDnE,EAAM8D,WAAW,GAAGH,KAAvE,QAAoF,GACrF,uBAAGS,KAAM5B,GAAaxC,GACpBqE,OAAO,SACPC,IAAI,uBAAuBtE,EAAM2C,KAFnC,KAE2C3C,EAAM4C,Y,+UCvC7C,IAAM2B,GAAapC,IAAH,M,8BCKjBd,GAAQ,CACbX,UAAW,CACV2C,SAAU,WACVxB,MAAO,SAER2C,MAAO,CACNC,OAAQ,iBACRC,QAAS,OACT7C,MAAO,QACPsB,QAAS,OACTwB,SAAU,QAEXC,qBAAsB,CACrBvB,SAAU,WACVxB,MAAO,QACPyB,IAAK,GACLuB,KAAM,EACNJ,OAAQ,qBAETK,eAAgB,CACfjD,MAAO,OACPsB,QAAS,QAEV4B,YAAa,CACZC,SAAU,QACVhC,UAAW,OACXC,aAAc,MACdxC,OAAQ,SA+DKwE,iBA3DO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eAAqB,EAC3BC,mBAAS,IADkB,mBAC9CC,EAD8C,KACvCC,EADuC,OAETF,mBAAS,IAFA,mBAE9CG,EAF8C,KAE9BC,EAF8B,OAGvBJ,mBAAS,IAHc,mBAG9CK,EAH8C,KAGrCC,EAHqC,KAKrDC,qBACC,WAQKN,GAASA,EAAMlB,QAAU,EAPN,SAACkB,GACvB,OAAOH,EAAOG,MAAM,CACnBA,MAAOd,GACPqB,UAAW,CAAEC,MAAO,GAAIR,WAKzBS,CAAeT,GAAOU,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC7BN,EAAWM,EAAKC,OAAOC,KAAI,SAAAvD,GAC1B,MAAO,CAACwD,MAAOxD,EAAKyD,GAAIC,MAAM,GAAD,OAAK1D,EAAKgB,KAAV,aAAmBhB,EAAKC,eAIvD8C,EAAW,MAGb,CAACL,EAAOH,IAcT,OACC,yBAAK7D,MAAOA,GAAMX,WACjB,kBAAC4F,GAAA,EAAD,CAAajF,MAAOA,GAAM0D,aACzB,kBAACwB,GAAA,EAAD,CAAYC,QAAQ,EACdC,QAAQ,cADd,SAGD,kBAAC,KAAD,CACCN,MAAOZ,EACPmB,SAfwB,SAAAC,GAC1BnB,EAAkBmB,GAClBxB,EAAewB,IAcblB,QAASA,EACTmB,cArBuB,SAACjF,GAC1B2D,EAAS3D,IAqBPkF,YAAY,uBACZC,aAAa,EACbC,WAfsBtB,GAAWA,EAAQtB,OAgBzC6C,mBAAmB,Q,oBCjFjB3F,GAAQ,CACb0D,YAAa,CACZC,SAAU,QACVhC,UAAW,OACXC,aAAc,QAID,eAA8B,IAA3BgE,EAA0B,EAA1BA,oBAA0B,EACC7B,mBAAS,IADV,mBACpCG,EADoC,KACpBC,EADoB,KAQ3C,OACC,kBAAC,IAAD,CAAOH,MAAO/C,IACZ,YAA+B,IAA5B4E,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOnB,EAAW,EAAXA,KACnB,GAAIkB,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAN,OAAiBA,EAAMC,SAElC,IAAMtD,EAAakC,EAAKlC,WAExB,OACC,kBAACwC,GAAA,EAAD,CAAajF,MAAOA,GAAM0D,aACzB,kBAACwB,GAAA,EAAD,CAAYE,QAAQ,cAApB,cACA,kBAACY,GAAA,EAAD,CACClB,MAAOZ,EACPmB,SAAU,SAAAY,GAAK,OAlBMX,EAkBiBW,EAAMjD,OAAO8B,MAjBxDX,EAAkBmB,QAClBM,EAAoBN,GAFM,IAAAA,GAmBrBY,WAAY,CACX5D,KAAM,OACNyC,GAAI,eAGJtC,EAAWoC,KAAI,SAAAsB,GAAS,OACxB,kBAACC,GAAA,EAAD,CAAUC,IAAKF,EAAUpB,GAAID,MAAOqB,EAAUpB,IAAKoB,EAAU7D,e,0mBC3C9D,IAAMgE,GAAwBxF,IAAH,M,SCwB5Bd,GAAQ,CACbuG,OAAQ,CACPvE,SAAU,YAEX5B,MAAO,CACNoG,OAAQ,UAETC,KAAM,CACLD,OAAQ,UAETrD,MAAO,CACNQ,SAAU,UAIN+C,GAAY,CACjBpE,KAAM,GACNqE,KAAM,CACL5B,GAAI,MAEL1D,cAAe,GACfG,QAAS,GACToF,IAAK,GACLC,IAAK,GACLvF,KAAM,IAGQ,YAACnB,GAAW,IAAD,EACN2G,aAAYR,GAAuB,CACrDS,QADqD,SAC7CjB,GACPkB,QAAQC,IAAI,QAASnB,IAEtBoB,YAJqD,SAIzCvC,GACXqC,QAAQC,IAAI,OAAQtC,IAErBwC,eAAgB,CAAC,CAChBnD,MAAOhD,MARFoG,EADkB,sBAaOrD,mBAAS,eAAK2C,KAbrB,mBAalBW,EAbkB,KAaRC,EAbQ,OAcmBvD,mBA5CpB,0CA8BC,mBAclBwD,EAdkB,KAcFC,EAdE,KA0BnBC,EAAe,SAAAnF,GAAI,OAAI,SAAA2D,GAC5Be,QAAQC,IAAI3E,EAAM2D,EAAMjD,OAAO8B,OAC/BwC,EAAY,eAAKD,EAAN,gBAAiB/E,EAAO2D,EAAMjD,OAAO8B,WA0BjD,OACC,kBAAC4C,GAAA,EAAD,CACCC,KAAMxH,EAAMwH,KACZC,QAASzH,EAAM0H,aACfC,YAAY,EACZC,kBAAgB,qBAChB,kBAACC,GAAA,EAAD,CAAQhI,MAAOA,GAAMuG,QACpB,kBAAC0B,GAAA,EAAD,KACC,kBAACC,GAAA,EAAD,CAAYC,KAAK,QAAQrI,MAAM,UAAUsI,QAASjI,EAAM0H,aAAcQ,aAAW,SAChF,kBAAC,KAAD,SAIH,kBAACC,GAAA,EAAD,CAAatI,MAAOA,GAAMI,OAA1B,uBACA,kBAACmI,GAAA,EAAD,CAAevI,MAAOA,GAAMyG,MAC3B,kBAAC+B,GAAA,EAAD,KACEjB,GAEF,kBAACkB,GAAA,EAAD,CACC1D,GAAG,aACHC,MAAM,aACNF,MAAOuC,EAAS/E,KAChB+C,SAAUoC,EAAa,QACvBjB,OAAO,SACPxG,MAAOA,GAAMmD,QAEd,6BACA,kBAAC,GAAD,CAAoByC,oBA5DK,SAAA8C,GAC3B1B,QAAQC,IAAI,wBAAyByB,GACrCpB,EAAY,eAAKD,EAAN,CAAgBV,KAAM,CAAE5B,GAAI2D,SA2DrC,6BACA,kBAACD,GAAA,EAAD,CACC1D,GAAG,uBACHzC,KAAK,iBACL0C,MAAM,iBACNF,MAAOuC,EAAShG,cAChBgE,SAAUoC,EAAa,iBACvBjB,OAAO,SACPmC,aAAa,0BACb3I,MAAOA,GAAMmD,QAEd,kBAAC,GAAD,CAAeW,eA7EK,SAAAxC,GACtB0F,QAAQC,IAAI,iBAAkB3F,GAC9BgG,EAAY,eAAKD,EAAN,CAAgB/F,KAAM,CAAEyD,GAAIzD,EAAKwD,aA6E1C,kBAAC,KAAD,CAAc8D,YAAaH,KACpB1D,GAAG,gBACHzC,KAAK,UACL0C,MAAM,UACNF,MAAOuC,EAAS7F,QAChB6D,SAAUoC,EAAa,WACvBjB,OAAO,SACPxG,MAAOA,GAAMmD,MACbwF,aAAa,cACbE,OAAO,UACd,6BACC,kBAACC,EAAA,EAAD,CAAQhJ,MAAM,UAAUsI,QA3EX,YCpFW,SAAC,GAAkD,IAAhD9F,EAA+C,EAA/CA,KAAMqE,EAAyC,EAAzCA,KAAMtF,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,KAAME,EAAc,EAAdA,QAC5DuH,EAAQ,CACXzG,MAAM,EACNqE,MAAM,EACNtF,eAAe,EACfC,MAAM,EACNE,SAAS,GAuBV,OApBIc,GAAQA,EAAKQ,QAAU,IAC1BiG,EAAMzG,MAAO,GAGXqE,GAAQA,EAAK5B,KACfgE,EAAMpC,MAAO,GAGXtF,GAAiBA,EAAcyB,QAAU,IAC3CiG,EAAM1H,eAAgB,GAGpBC,GAAQA,EAAKyD,KACfgE,EAAMzH,MAAO,GAGXE,IAAYwH,MAAMC,SAASzH,MAC7BuH,EAAMvH,SAAU,IAGgC,IAAzC0H,OAAOC,OAAOJ,GAAOK,SAAQ,GDwDjCC,CAAchC,GAkBhBG,EA/E4B,wCA8D5BJ,EAAS,CACR7C,UAAW,CACVjC,KAAM+E,EAAS/E,KACfgH,OAAQjC,EAASV,KAAK5B,GACtB1D,cAAegG,EAAShG,cACxBG,QAASyH,SAAS5B,EAAS7F,SAC3B+H,OAAQlC,EAAS/F,KAAKyD,MAErBL,MAAK,SAAA8E,GACPxC,QAAQC,IAAI,WAAYuC,GAExBlC,EAAY,eAAKZ,KAEjBvG,EAAM0H,oBA4DL,oB,yCEhGUnG,eAzDA,CACd6E,OAAQ,CACPkD,UAAW,OACXC,MAAO,OACPlJ,MAAO,SAERmJ,aAAc,CACb9H,gBAAiB,YAkDJH,EA9CO,SAAC,GAAgE,IAA9DkI,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,gBAAiBC,EAA2B,EAA3BA,qBA2B1D,OACC,kBAAC,IAAMC,SAAP,KACC,kBAAC,KAAD,CAAQhI,SAAS,SAASvB,UAAWmJ,EAAQrD,QAC5C,kBAAC0D,GAAA,EAAD,CAAMnF,MAAOgF,EACVzE,SA9BuB,SAAC6E,EAAGpF,GAChCiF,EAAqBjF,IA8BhB8E,QAAS,CAAEO,UAAWP,EAAQD,cAC9BS,YAAY,WACZlK,QAAQ,aACRmK,cAAc,QAChB,kBAACC,GAAA,EAAD,CAAKtF,MAAM,MAAMF,MAAM,QA/BL,SAAA+E,GAGrB,IAFA,IAAIU,EAAU,GAELC,EAAI,EAAGA,EAAIX,EAAO/G,OAAQ0H,IAC7BX,EAAOW,GAAG/H,YAAcoH,EAAOW,GAAG/H,WAAWK,SAC7CyH,EAAQV,EAAOW,GAAG/H,WAAW,GAAGH,MACnCiI,EAAQV,EAAOW,GAAG/H,WAAW,GAAGH,MAAMuH,OAAOY,KAAKZ,EAAOW,IAEzDD,EAAQV,EAAOW,GAAG/H,WAAW,GAAGH,MAAQ,CACvCqE,KAAM,CACL5B,GAAI8E,EAAOW,GAAG/H,WAAW,GAAGsC,GAC5BzC,KAAMuH,EAAOW,GAAG/H,WAAW,GAAGH,MAE/BuH,OAAQ,CAACA,EAAOW,MAMpB,OAAOtB,OAAOwB,KAAKH,GAafI,CAAcd,GAAQe,OAAO/F,KAAI,SAAC8B,EAAMkE,GAAP,OACjC,kBAACP,GAAA,EAAD,CAAKtF,MAAO2B,EAAM7B,MAAO6B,EAAMN,IAAKwE,aC5CpCC,GAAY,CACjBC,cAAe,CACdnJ,aAAc,OACdtC,QAAS,QAEV0L,mBAAoB,CACnBC,SAAU,GAEXC,UAAW,CACVC,WAAY,UAIC,cAAO,IAAD,EACgBpH,oBAAS,GADzB,mBACbqH,EADa,KACDC,EADC,OAE0BtH,mBAAS,OAFnC,mBAEb+F,EAFa,KAEIwB,EAFJ,KAIdzD,EAAe,WACpBwD,GAAeD,IAGhB,OACC,kBAAC,IAAD,CAAOpH,MAAOhD,IACZ,YAA+B,IAA5B6E,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOnB,EAAW,EAAXA,KACnB,GAAIkB,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAN,OAAiBA,EAAMC,SAElC,IAAM8D,EAASlF,EAAK4G,GAAG1B,OAAOe,MAAK,SAACY,EAAGC,GACtC,OAAID,EAAElJ,KAAOmJ,EAAEnJ,KAAa,EACxBmJ,EAAEnJ,KAAOkJ,EAAElJ,MAAc,EACtB,KAGR,OACC,yBAAK7B,UAAU,iBACd,yBAAKA,UAAU,eACd,yBAAKT,MAAO8K,GAAUC,eACrB,kBAAC9K,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAO8K,GAAUE,oBAA1C,mBACA,kBAAClC,EAAA,EAAD,CAAQ5I,QAAQ,WAAWkI,QAASP,GACnC,kBAAC6D,EAAA,EAAD,MADD,mBAIA,kBAAC,GAAD,CACC/D,KAAMyD,EACNvD,aAAcA,KAEhB,kBAAC,GAAD,CACCgC,OAAQA,EACRE,qBAAsBuB,EACtBxB,gBAAiBA,IAClB,yBAAK9J,MAAO8K,GAAUI,WACpBrB,EACC8B,QAAO,SAAAhN,GAAK,MAAyB,QAApBmL,GAA6BnL,EAAM8D,WAAW,GAAGH,OAASwH,KAC3EjF,KAAI,SAAAlG,GAAK,OACV,kBAAC,GAAD,CAAe0H,IAAK1H,EAAMoG,GAAIpG,MAAOA,cC5D/B,YAACwB,GAAW,IAClBxB,EAAUwB,EAAVxB,MACFoB,EAAcb,EVkBW,SAAAP,GAAK,OAAIA,EAAM8D,WAAW,GAAGmJ,OAAS,4BUlBpCC,CAAiBlN,GAAQ,SAE1D,OACC,yBAAKqB,MAAOD,EAAYV,WACvB,kBAACY,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAOD,EAAYF,YAC3C,gCAASlB,EAAM2D,SCiBJsB,iBAzBO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQlF,EAAY,EAAZA,MAAY,EACFoF,mBAAS,IADP,mBACrC+H,EADqC,KACtBC,EADsB,KAe5C,OAbAzH,qBACC,WACCT,EAAOG,MAAM,CACZA,MAAO9C,EACPqD,UAAW,CAAEyH,QAASrN,EAAMoG,GAAIP,MAAO,EAAGyH,OAAQ,MAEjDvH,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACRoH,EAAiBpH,EAAKmH,oBAGzB,CAACnN,EAAOkF,IAGF,6BACN,sDACA,6BACEiI,GAAiBA,EAAcjH,KAAI,SAAAlG,GAAK,OACxC,yBAAK0H,IAAK1H,EAAMoG,IAAKpG,EAAM2D,cCfzBwI,GAAY,CACjBC,cAAe,CACdnJ,aAAc,QAEfsK,cAAe,CACd5M,QAAS,QAEV6M,WAAY,CACXlB,SAAU,GAEXmB,WAAY,CACXnB,SAAU,IAKG,eAAgB,IACxBpM,EADuB,EAAZwN,MACOC,OAAOzN,UAE/B,OAAKA,EAIH,kBAAC,IAAD,CAAOmF,MAAOjD,EAAmBwD,UAAW,CAAE1F,eAC5C,YAA+B,IAA5BgH,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOnB,EAAW,EAAXA,KACnB,GAAIkB,EAAS,MAAO,aACpB,GAAIC,EAAO,MAAM,UAAN,OAAiBA,EAAMC,SAElC,IAAMpH,EAAQgG,EAAK4H,YAEnB,OADAvF,QAAQC,IAAI,OAAQtC,GAEnB,6BACC,kBAAC,GAAD,CAAahG,MAAOA,IACpB,yBAAK8B,UAAU,iBACd,yBAAKA,UAAU,eACd,kBAACR,EAAA,EAAD,CAAYC,QAAQ,KAAKF,MAAO8K,GAAUC,eAAgBpM,EAAM2D,MAChE,yBAAKtC,MAAO8K,GAAUoB,eACrB,yBAAKlM,MAAO8K,GAAUqB,YAAtB,QAGA,yBAAKnM,MAAO8K,GAAUsB,YACrB,kBAAC,GAAD,CAAezN,MAAOA,YArBvB,kD,mDCzBK6N,gBAAe,CAC5BC,QAAS,CACRC,QAAS,CACRC,KAAMC,KAAK,MAEZjN,WAAY,CAAEkN,QAAS,YAExBC,WAAY,CACXC,iBAAiB,K,mPCTb,IAAMC,GAAqBlM,IAAH,MCGlBmM,GAAiB,mBAAQC,aAAaC,QCLzB,eDYbC,GAAc,SAACC,EAAOC,GAClCJ,aAAaK,QCbY,aDaQF,GACjCH,aAAaK,QCbW,YDaQC,KAAKC,UAAUH,K,q0BEZzC,IF+ByBI,GE/BnBC,GAAkB7M,IAAH,MAcf8M,GAAiB9M,IAAH,M,UCarB+M,G,2MACLtM,MAAQ,CACPuM,OAAO,EACPC,MAAO,GACPC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,aAAc,M,EAiGfC,QAAU,SAAOC,EAAOC,GAAd,UAAA9C,EAAA+C,OAAA,gDACTF,EAAMG,UAAU,CACf7J,KAAM,CACL8J,YAAY,eACRH,EAAKhB,KADE,CAEVD,MAAOiB,EAAKjB,WALN,sC,EAWVqB,SAAW,SAAM/J,GAAN,oBAAA6G,EAAA+C,OAAA,gDACV,EAAKhN,MAAMuE,MAAQ,KADT,EAGc,EAAKvE,MAAMuM,MAAQnJ,EAAKmJ,MAAQnJ,EAAKgK,OAArDtB,EAHE,EAGFA,MAAOC,EAHL,EAGKA,KACf,EAAKsB,cAAcvB,EAAOC,GAE1BuB,SAAS9P,SAAWE,EAAOP,UANjB,sC,EASXkQ,cAAgB,SAACvB,EAAOC,GACvBF,GAAYC,EAAOC,I,EAGpBwB,OAAS,4BAAAtD,EAAA+C,OAAA,gDAASQ,EAAT,EAASA,cACb,EAAKxN,MAAMuM,OAASiB,GAAiBA,EAAc,IAAMA,EAAc,GAAGhJ,QAC7E,EAAKiJ,SAAS,CAAEb,aAAcY,EAAc,GAAGhJ,UACrCgJ,GAAiBA,EAAc,IAAMA,EAAc,GAAGE,WAAWC,UAAUC,OAAO,GAAGpJ,SAC/F,EAAKiJ,SAAS,CAAEb,aAAcY,EAAc,GAAGE,WAAWC,UAAUC,OAAO,GAAGpJ,UAJvE,sC,kFAtHUqJ,GACdA,EAAUzH,OAAS0H,KAAKlP,MAAMwH,MACjC0H,KAAKL,SAAS,CAAEb,aAAc,S,+BAItB,IAAD,SAC8DkB,KAAK9N,MAAnEuM,EADA,EACAA,MAAOC,EADP,EACOA,MAAOC,EADd,EACcA,SAAUC,EADxB,EACwBA,UAAWC,EADnC,EACmCA,SAAUC,EAD7C,EAC6CA,aAC7CvE,EAAYyF,KAAKlP,MAAjByJ,QACR,OACC,kBAAClC,GAAA,EAAD,CACCC,KAAM0H,KAAKlP,MAAMwH,KACjBC,QAASyH,KAAKlP,MAAM0H,aACpByH,SAAS,KAAKC,WAAW,EACzBxH,kBAAgB,qBAChB,kBAACO,GAAA,EAAD,CAAavD,GAAG,sBAAsB+I,EAAQ,QAAU,WACxD,kBAACvF,GAAA,EAAD,KACE4F,GACA,kBAAC3F,GAAA,EAAD,CAAmB/H,UAAWmJ,EAAQ4F,iBAAkBrB,GAEzD,yBAAK1N,UAAWmJ,EAAQ6F,oBACrB3B,GACD,8BACD,kBAACrF,GAAA,EAAD,CACC1D,GAAG,YACHC,MAAM,aACNc,QAASqI,EACTrJ,MAAOmJ,EACP5I,SAAU,SAAA6E,GAAC,OAAI,EAAK8E,SAAS,CAAEf,UAAW/D,EAAElH,OAAO8B,SACnD0B,OAAO,SACP+I,WAAS,IAEV,kBAAC9G,GAAA,EAAD,CACC1D,GAAG,WACHC,MAAM,YACNc,QAASqI,EACTrJ,MAAOoJ,EACP7I,SAAU,SAAA6E,GAAC,OAAI,EAAK8E,SAAS,CAAEd,SAAUhE,EAAElH,OAAO8B,SAClD0B,OAAO,SACP+I,WAAS,KAIV,kBAAC9G,GAAA,EAAD,CACC1D,GAAG,QACHC,MAAM,QACNc,QAASqI,EACTrJ,MAAOiJ,EACP1I,SAAU,SAAA6E,GAAC,OAAI,EAAK8E,SAAS,CAAEjB,MAAO7D,EAAElH,OAAO8B,SAC/C0B,OAAO,SACP+I,WAAS,IAEV,kBAAC9G,GAAA,EAAD,CACC1D,GAAG,WACHC,MAAM,WACNc,QAASqI,EACTxH,KAAK,WACLgC,aAAa,mBACbtD,SAAU,SAAA6E,GAAC,OAAI,EAAK8E,SAAS,CAAEhB,SAAU9D,EAAElH,OAAO8B,SAClD0B,OAAO,SACP+I,WAAS,MAIZ,kBAACG,GAAA,EAAD,KACC,kBAAC5G,EAAA,EAAD,CACCV,QAAS,kBAAM,EAAK4G,SAAS,CAAElB,OAAQA,EAAOK,aAAc,QAC5DrO,MAAM,UAAUE,MAAO,CAAE+B,YAAa,SACrC+L,EACE,6BACA,4BAGJ,kBAAChF,EAAA,EAAD,CAAQV,QAASiH,KAAKlP,MAAM0H,aAAc/H,MAAM,WAAhD,UAGA,kBAAC,IAAD,CACC6P,SAAU7B,EAAQF,GAAiBD,GACnCpJ,UAAW,CAAEwJ,QAAOC,WAAUC,YAAWC,YACzC0B,OAAQ,SAACvB,EAAD,OAAU1J,EAAV,EAAUA,KAAV,OAAqB,EAAKyJ,QAAQC,EAAQP,EAAQnJ,EAAKmJ,MAAQnJ,EAAKgK,SAC5EzH,YAAa,SAAAvC,GAAI,OAAI,EAAK+J,SAAS/J,IACnCoC,QAAS,SAAAjB,GAAK,OAAI,EAAKgJ,OAAOhJ,MAE7B,SAAA6J,GAAQ,OACR,kBAAC7G,EAAA,EAAD,CAAQhJ,MAAM,UAAUsI,QAASuH,GAC/B7B,EAAQ,QAAU,2B,GA/FD+B,aAyIXC,eAAWpO,YApJX,CACd+N,kBAAmB,CAClBnQ,QAAS,OACTG,eAAgB,SAChBD,cAAe,UAEhBgQ,gBAAiB,CAChBO,UAAW,WA6IarO,CAAmBmM,KC/JvCmC,G,2MACLzO,MAAQ,CACP6J,YAAY,G,EAGbvD,aAAe,WACd,EAAKmH,SAAS,CAAE5D,YAAa,EAAK7J,MAAM6J,c,EAGzC6E,eAAiB,SAACxB,GACjB,OAAIA,GAAeA,EAAY1J,GACxB,YAAN,OAAmB0J,EAAYR,WAExB,I,wEAIC,IACDQ,EAAgBY,KAAKlP,MAArBsO,YAER,OAAQxB,KACP,kBAAChN,EAAA,EAAD,CACCC,QAAQ,SACRJ,MAAM,UAAUW,UAAW4O,KAAKlP,MAAMM,WAAY4O,KAAKY,eAAexB,IAEvE,8BACA,kBAAC3F,EAAA,EAAD,CACCV,QAASiH,KAAKxH,aACdpH,UAAW4O,KAAKlP,MAAMM,UACtBX,MAAM,WAHP,SAMA,kBAAC,GAAD,CACC6H,KAAM0H,KAAK9N,MAAM6J,WACjBvD,aAAcwH,KAAKxH,oB,GAlCGgI,aAwCXK,IJdiBxC,GIcDoC,YAAWE,IJblCG,aACNC,aAAQpD,GAAoB,CAC3B7M,MAAO,kBAAgC,CACtCsO,YADM,EAAG9J,KAAQ8J,gBAFb0B,CAMLzC,KKvBG2C,G,2MACL9O,MAAQ,CACP+O,SAAU,M,EAGXC,WAAa,SAACtK,GACb,EAAK1E,MAAM+O,SAAW,EAAKtB,SAAS,CAAEsB,SAAU,OAAU,EAAKtB,SAAS,CAAEsB,SAAUrK,EAAMuK,iB,wEAGjF,IAAD,OACA5G,EAAYyF,KAAKlP,MAAjByJ,QAER,OACC,yBAAKnJ,UAAWmJ,EAAQ6G,MACvB,kBAACzI,GAAA,EAAD,CAAQhG,SAAS,QAAQhC,MAAO,CAAEL,WAAY,cAAe8J,UAAW,SACvE,kBAACxB,GAAA,EAAD,CAAS/H,QAAQ,QAAQO,UAAWmJ,EAAQvK,WAC3C,kBAACY,EAAA,EAAD,CAAYQ,UAAWmJ,EAAQ8G,SAAUxQ,QAAQ,SAASJ,MAAM,WAAhE,WACA,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,MAAM,UAAUW,UAAWmJ,EAAQ+G,OAC5D,kBAAC,GAAD,CAAalQ,UAAWmJ,EAAQgH,cAE/B3D,MACA,0BAAMxM,UAAWmJ,EAAQiH,aACzB,kBAAC3I,GAAA,EAAD,CACCE,QAASiH,KAAKkB,WACd9P,UAAWmJ,EAAQkH,WAAYhR,MAAM,UAAUuI,aAAW,QAC1D,kBAAC,KAAD,OAED,kBAAC,KAAD,CACCtD,GAAG,cACHuL,SAAUjB,KAAK9N,MAAM+O,SACrB3I,KAAMoJ,QAAQ1B,KAAK9N,MAAM+O,UACzB1I,QAASyH,KAAKkB,YACd,kBAACnK,GAAA,EAAD,CACClE,UAAWC,KAAYC,GAAInD,EAAOR,KAAM2J,QAASiH,KAAKkB,YADvD,QAIA,kBAACnK,GAAA,EAAD,CACClE,UAAWC,KAAYC,GAAInD,EAAOP,UAAW0J,QAASiH,KAAKkB,YAD5D,aAIA,kBAACnK,GAAA,EAAD,CAAUgC,QAASiH,KAAKkB,YAAxB,cACA,kBAACnK,GAAA,EAAD,CAAUgC,QAAS,WLlD1B8E,aAAa8D,WCRY,cDSzB9D,aAAa8D,WCRW,aI2DhB,EAAK7Q,MAAM8Q,QAAQxG,KAAnB,OAFD,mB,GAzCmBoF,aAyDZC,eAAWO,IClEpBa,GAAS,CACdT,KAAM,CACLxF,SAAU,GAEX0F,KAAM,CACL1F,SAAU,GAEX6F,WAAY,CACX3F,YAAa,GACbpJ,YAAa,IAEd8O,YAAa,CACZ1F,WAAY,KAIRgG,GAAiB,eACnBD,GADmB,CAEtB7R,UAAW,CACV+R,aAAc,YACdC,kBAAmBC,KAAS,KAC5BzP,gBAAiB,SAElB8O,KAAK,eACDO,GAAOP,KADP,CAEH7Q,MAAOwR,KAAS,OAEjBR,WAAW,eACPI,GAAOJ,WADD,CAEThR,MAAOwR,KAAS,OAEjBV,YAAa,CACZ9Q,MAAOwR,KAAS,MAEjBZ,SAAU,CACT5Q,MAAOwR,KAAS,QAUHxB,gBANS,SAAC3P,GACxB,IAAMoR,EAAgBzS,EAAWqB,EAAMpB,UAAYmS,GAASC,GACtDK,EAAmB9P,YAAW6P,EAAX7P,CAA0BsG,IACnD,OAAQ,kBAACwJ,EAAD,SCfHC,G,iLACM,IAAD,EACuBpC,KAAKlP,MAA3ByJ,EADD,EACCA,QAAS7K,EADV,EACUA,SAEjB,OACE,kBAAC,KAAD,CAAkB2S,MAAOA,IACvB,6BACE,kBAACC,GAAA,EAAD,MACA,kBAAC,GAAD,OACE7S,EAAWC,IACX,yBAAK0B,UAAWmJ,EAAQgI,eAE1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAM7S,EAAOR,KAAMyD,UAAW6P,IAC3C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAM7S,EAAOP,UAAWwD,UAAW8P,KAChD,kBAAC,IAAD,CAAOF,KAAM7S,EAAON,MAAOuD,UAAW+P,Y,GAfhCpC,aAuBHC,eAAWpO,YA3CX,CACb,UAAW,CACT+E,KAAM,CACJyL,WAAY,wCAEd,iBAAkB,CAChB5S,QAAS,OACTG,eAAgB,UAElB,eAAgB,CACd6P,SAAU,SACVrE,SAAU,IACVzE,OAAQ,SAGZoL,aAAc,CACZxS,OAAQ,SA2BcsC,CAAmB+P,KC9CzBV,QACW,cAA7BoB,OAAOpT,SAASqT,UAEe,UAA7BD,OAAOpT,SAASqT,UAEhBD,OAAOpT,SAASqT,SAAS/F,MACvB,2D,WCCAgC,GAAQ,IAAIgE,IAEZC,GAAe,CACnB7D,YAAY,eTLwB,WACrC,IAAM8D,EAAWrF,aAAaC,QCjBN,aDmBxB,OAAIoF,EACI/E,KAAKgF,MAAMD,GAEX,CACNE,WAAY,OACZ1N,GAAI,KACJkJ,UAAW,KACXC,SAAU,KACVH,MAAO,MSNU2E,KAGdC,GAAYC,YAAgB,CAChCvE,SACAwE,SAAUP,GACVQ,UAAW,CACTC,SAAU,CACRC,eAAgB,SAACC,EAAD,KAAuD,IAC/DtO,EAAO,CACX2I,KAAM,CACJmF,WAAY,OACZ1N,GAJgE,EAAhDA,GAKhBkJ,UALgE,EAA5CA,UAMpBC,SANgE,EAAjCA,SAO/BH,MAPgE,EAAvBA,QAW7C,OAXoE,EAAZM,MAUlDG,UAAU,CAAE7J,SACX,UAMT0I,GAAQH,aAAaC,QR/CD,cQgDpB+F,GAAW,IAAIC,IAAS,CAC5BC,IAhCkBC,2BAiClBC,YAAa,cACbC,QAAS,CACPC,cAAenG,GAAK,iBAAaA,IAAU,MAIzCxJ,GAAS,IAAI4P,IAAa,CAC9BC,KAAMC,IAAWC,KAAK,CACpB7M,aAAQ,YAAsC,IAAnCgI,EAAkC,EAAlCA,cAAe8E,EAAmB,EAAnBA,aACpB9E,GACFA,EAAclK,KAAI,gBAAGkB,EAAH,EAAGA,QAAS+N,EAAZ,EAAYA,UAAWhC,EAAvB,EAAuBA,KAAvB,OAChB9K,QAAQC,IAAR,oCAC+BlB,EAD/B,uBACqD+N,EADrD,mBACyEhC,OAGzE+B,GAAc7M,QAAQC,IAAR,2BAAgC4M,OAEpDlB,GACAO,KAEF7E,MAAO,IAAIgE,IACXS,UAAW,KAGbiB,IAASC,OACP,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAgBnQ,OAAQA,IACtB,kBAAC,GAAD,QAGJgL,SAASoF,eAAe,SDiDpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1P,MAAK,SAAA2P,GACjCA,EAAaC,kB","file":"static/js/main.80790cee.chunk.js","sourcesContent":["export default {\n\thome: '/',\n\tdashboard: '/dashboard',\n\tvenue: '/venue/:venueSlug',\n\tvenuePath: (venueSlug) => `/venue/${venueSlug}`\n}","import Routes from '../routes'\n\nexport const isHomepage = location => (location.pathname === Routes.home)","export const headerStyles = (imageUrl, height) => {\n\treturn {\n\t\tcontainer: {\n\t\t\tdisplay: 'flex',\n\t\t\tflexWrap: 'wrap',\n\t\t\tflexDirection: 'column',\n\t\t\tjustifyContent: 'center',\n\t\t\talignItems: 'center',\n\t\t\tbackground: `linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url(/images/${imageUrl}) 50% 50% no-repeat`,\n\t\t\tbackgroundSize: 'cover',\n\t\t\theight: height,\n\t\t},\n\t\theaderText: {\n\t\t\tcolor: '#ffffff',\n\t\t},\n\t}\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport {headerStyles} from '../../utils/styleUtils'\n\nconst headerStyle = headerStyles('family-biking-cmp.jpg', '700px')\n\nexport default () => {\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>Experience</strong> childhood, again.\n\t\t\t</Typography>\n\t\t</div>)\n}","import React from \"react\";\n\nimport \"./valuePropSection.css\";\n\nexport default props => {\n  const { title, icon, text } = props;\n  const iconStyle = {\n    background: `url(/images/icons/${icon}.png) 0% 0% / 60px 60px no-repeat`,\n    width: \"60px\",\n    height: \"60px\"\n  };\n\n  return (\n    <div className=\"value-prop-section\">\n      <div className=\"value-prop-title\">{title}</div>\n      <div className=\"value-prop-icon\" style={iconStyle}></div>\n      <div className=\"value-prop-text\">{text}</div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport ValuePropSection from \"./valueProp/valuePropSection\";\nimport \"./valueProp.css\";\n\nconst discoverContent = {\n  title: \"Discover\",\n  icon: \"discover\",\n  text: `Find out about great local places to visit with your family. From restaurants, to museums, \n\tparks and playgrounds, make the most of your time!`\n};\n\nconst trackContent = {\n  title: \"Track\",\n  icon: \"track\",\n  text: `Had a great time sharing a meal with your family or enjoyed a hiking trail? Jot it down to build your \n\troster of go-to places for your trips.`\n};\n\nconst shareContent = {\n  title: \"Share\",\n  icon: \"share\",\n  text: `Share your favorite places to visit with friends and family, and hear about what others are \n\tenjoying, for great new ideas.`\n};\n\nexport default () => {\n  return (\n    <div className=\"value-prop-container\">\n      <ValuePropSection {...discoverContent} />\n      <ValuePropSection {...trackContent} />\n      <ValuePropSection {...shareContent} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport Header from \"./homepage/header\";\nimport ValueProp from \"./homepage/valueProp\";\n\nexport default () => {\n  return (\n    <div>\n      <Header />\n      <ValueProp />\n    </div>\n  );\n};\n","import gql from \"graphql-tag\"\n\nconst VenueDetails = gql`\n    fragment VenueDetails on Venue {\n        id\n        name\n        slug\n        streetAddress\n        zipcode\n        city\n        state\n        lat\n        lng\n        venueTypes {\n            id\n            name\n            image\n        }\n    }\n`\n\nexport const GET_VENUE_BASICS = gql`\n    query ($venueId: ID!) {\n        venue(id: $venueId) {\n            ...VenueDetails\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUE_BY_SLUG = gql`\n    query ($venueSlug: String!) {\n        venueBySlug(slug: $venueSlug) {\n            ...VenueDetails\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUES_FOR_CURRENT_USER = gql`\n    query {\n        me {\n            venues {\n                ...VenueDetails\n            }\n        }\n    }\n    ${VenueDetails}\n`\n\nexport const GET_VENUE_TYPES = gql`\n    query {\n        venueTypes {\n            id\n            name\n            image\n        }\n    }\n`\n\nexport const GET_SIMILAR_VENUES_IN_RADIUS = gql`\n    query ($venueId: ID!, $limit: Int, $radius: Int) {\n        similarVenues(id: $venueId, first: $limit, radius: $radius) {\n            id\n            name\n            streetAddress\n            zipcode\n            city\n        }\n    }\n`","import React from 'react'\nimport { DirectionsRun, NearMe, Restaurant } from \"@material-ui/icons\"\n\nexport const venueMapLink = (venue) => {\n\tconst address = `${venue.streetAddress}, ${venue.city}, ${venue.state} ${venue.zipcode}`\n\treturn `https://maps.google.com/?q=${encodeURIComponent(address)}`\n}\n\nexport const venueIcon = (venue, cssClass) => {\n\tlet venueIconComponent\n\n\tswitch (venue.venueTypes[0].name) {\n\tcase 'restaurant':\n\t\tvenueIconComponent = <Restaurant className={cssClass}/>\n\t\tbreak\n\tcase 'outdoor playground':\n\t\tvenueIconComponent = <DirectionsRun className={cssClass}/>\n\t\tbreak\n\tdefault:\n\t\tvenueIconComponent = <NearMe className={cssClass}/>\n\t}\n\n\treturn venueIconComponent\n}\n\nexport const venueHeaderImage = venue => venue.venueTypes[0].image || 'restaurant-header-cmp.jpg'","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Typography } from \"@material-ui/core\"\n\nimport { venueMapLink, venueIcon } from '../../utils/venueUtils'\nimport { Link as RouterLink } from \"react-router-dom\"\nimport Routes from \"../../routes\"\n\nconst styles = {\n\t'@global': {\n\t\t'.venueItem': {\n\t\t\tmarginTop: '5px',\n\t\t\tmarginBottom: '5px',\n\t\t\tbackgroundColor: '#f6f6f6',\n\t\t\tpadding: '15px',\n\t\t},\n\t\t'.venueIcon': {\n\t\t\twidth: '15px',\n\t\t\theight: 'auto',\n\t\t\tmarginRight: '5px',\n\t\t\tposition: 'relative',\n\t\t\ttop: '2px',\n\t\t},\n\t},\n}\n\nconst VenueListItem = (props) => {\n\tconst { venue } = props\n\n\treturn (<div className='venueItem'>\n\t\t<div>\n\t\t\t<Typography\n\t\t\t\tvariant='h6'\n\t\t\t\tcomponent={RouterLink}\n\t\t\t\tto={Routes.venuePath(venue.slug)}>{venue.name}</Typography>\n\t\t</div>\n\t\t<div>\n\t\t\t{venueIcon(venue, 'venueIcon')}\n\t\t\t{(venue.venueTypes && venue.venueTypes.length) ? `${venue.venueTypes[0].name} in ` : ''}\n\t\t\t<a href={venueMapLink(venue)}\n\t\t\t\t target='_blank'\n\t\t\t\t rel=\"noopener noreferrer\">{venue.city}, {venue.state}</a>\n\t\t</div>\n\t</div>)\n}\n\nexport default withStyles(styles)(VenueListItem)","import gql from \"graphql-tag\"\n\nexport const GET_CITIES = gql`\n\tquery ($limit: Int, $query: String) {\n\t\tcities(first: $limit, query: $query) {\n\t\t\tid\n\t\t\tname\n\t\t\tstate\n\t\t}\n\t}\n`","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport { GET_CITIES } from \"../../graphql/cityQueries\"\nimport { withApollo } from \"react-apollo\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport FormControl from \"@material-ui/core/FormControl\"\n\nconst style = {\n\tcontainer: {\n\t\tposition: 'relative',\n\t\twidth: '500px'\n\t},\n\tinput: {\n\t\tborder: '1px solid #ccc',\n\t\toutline: 'none',\n\t\twidth: '300px',\n\t\tpadding: '20px',\n\t\tfontSize: '17px',\n\t},\n\tsuggestionsContainer: {\n\t\tposition: 'absolute',\n\t\twidth: '300px',\n\t\ttop: 62,\n\t\tleft: 0,\n\t\tborder: '1px solid #efefef'\n\t},\n\tsuggestionItem: {\n\t\twidth: '100%',\n\t\tpadding: '10px'\n\t},\n\tformControl: {\n\t\tminWidth: '500px',\n\t\tmarginTop: '16px',\n\t\tmarginBottom: '8px',\n\t\theight: '16px'\n\t}\n}\n\nconst CityFormField = ({ client, onCitySelected }) => {\n\tconst [query, setQuery] = useState('')\n\tconst [selectedOption, setSelectedOption] = useState({})\n\tconst [options, setOptions] = useState([])\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst getSuggestions = (query) => {\n\t\t\t\treturn client.query({\n\t\t\t\t\tquery: GET_CITIES,\n\t\t\t\t\tvariables: { limit: 10, query },\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (query && query.length >= 3) {\n\t\t\t\tgetSuggestions(query).then(({ data }) => {\n\t\t\t\t\tsetOptions(data.cities.map(city => {\n\t\t\t\t\t\treturn {value: city.id, label: `${city.name}, ${city.state}`}\n\t\t\t\t\t}))\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tsetOptions([])\n\t\t\t}\n\t\t},\n\t\t[query, client],\n\t)\n\n\tconst handleInputChange = (text) => {\n\t\tsetQuery(text)\n\t}\n\n\tconst handleOptionChange = option => {\n\t\tsetSelectedOption(option)\n\t\tonCitySelected(option)\n\t}\n\n\tconst hasOptions = () => options && options.length\n\n\treturn (\n\t\t<div style={style.container}>\n\t\t\t<FormControl style={style.formControl}>\n\t\t\t\t<InputLabel shrink={true}\n\t\t\t\t\t\t\t\t\t\thtmlFor=\"age-simple\">City</InputLabel>\n\t\t\t</FormControl>\n\t\t\t<Select\n\t\t\t\tvalue={selectedOption}\n\t\t\t\tonChange={handleOptionChange}\n\t\t\t\toptions={options}\n\t\t\t\tonInputChange={handleInputChange}\n\t\t\t\tplaceholder=\"Type in name of city\"\n\t\t\t\tisClearable={true}\n\t\t\t\tmenuIsOpen={hasOptions()}\n\t\t\t\tescapeClearsValue={true}\n\t\t\t/>\n\n\t\t</div>\n\t)\n}\n\nexport default withApollo(CityFormField)","import React, { useState } from 'react'\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport Select from \"@material-ui/core/Select\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport { Query } from \"react-apollo\"\n\nimport { GET_VENUE_TYPES } from \"../../graphql/venueQueries\"\n\nconst style = {\n\tformControl: {\n\t\tminWidth: '500px',\n\t\tmarginTop: '16px',\n\t\tmarginBottom: '8px',\n\t}\n}\n\nexport default ({ onVenueTypeSelected }) => {\n\tconst [selectedOption, setSelectedOption] = useState('')\n\n\tconst handleOptionChange = option => {\n\t\tsetSelectedOption(option)\n\t\tonVenueTypeSelected(option)\n\t}\n\n\treturn (\n\t\t<Query query={GET_VENUE_TYPES}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\tconst venueTypes = data.venueTypes\n\n\t\t\t\treturn (\n\t\t\t\t\t<FormControl style={style.formControl}>\n\t\t\t\t\t\t<InputLabel htmlFor=\"age-simple\">Venue Type</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={selectedOption}\n\t\t\t\t\t\t\tonChange={event => handleOptionChange(event.target.value)}\n\t\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\t\tname: 'type',\n\t\t\t\t\t\t\t\tid: 'venue-type',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{venueTypes.map(venueType => (\n\t\t\t\t\t\t\t\t<MenuItem key={venueType.id} value={venueType.id}>{venueType.name}</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</FormControl>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Query>\n\t)\n}\n","import gql from \"graphql-tag\"\n\nexport const CREATE_VENUE_MUTATION = gql`\n    mutation CreateVenueMutation($name: String!, $streetAddress: String!, \n        $zipcode: Int!, $cityId: Int!, $typeId: Int!) {\n        createVenue (\n            name: $name\n            streetAddress: $streetAddress\n            zipcode: $zipcode\n            city: {\n                id: $cityId\n            }\n            venueType: {\n                id: $typeId\n            }\n        ) {\n            id\n            name\n            streetAddress\n            venueTypes {\n                name\n            }\n        }\n    }\n`\n","import React, { useState } from 'react'\n\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport TextField from '@material-ui/core/TextField'\nimport NumberFormat from 'react-number-format'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport CloseIcon from '@material-ui/icons/Close'\nimport IconButton from '@material-ui/core/IconButton'\n\nimport CityFormField from './cityFormField'\nimport VenueTypeFormField from './venueTypeFormField'\nimport { CREATE_VENUE_MUTATION } from \"../../graphql/venueMutations\"\nimport Button from \"@material-ui/core/Button\"\n\nimport { validateVenue } from \"../../utils/validationUtils\"\n\nimport { useMutation } from '@apollo/react-hooks'\nimport { GET_VENUES_FOR_CURRENT_USER } from \"../../graphql/venueQueries\"\n\nconst USER_ACTION_TEXT = 'Please enter information about a venue'\nconst USER_ACTION_TEXT_ERROR = 'Please enter valid venue information'\n\nconst style = {\n\tappBar: {\n\t\tposition: 'relative',\n\t},\n\ttitle: {\n\t\tmargin: '0 auto',\n\t},\n\tbody: {\n\t\tmargin: '0 auto',\n\t},\n\tinput: {\n\t\tminWidth: '500px',\n\t},\n}\n\nconst venueStub = {\n\tname: '',\n\ttype: {\n\t\tid: null,\n\t},\n\tstreetAddress: '',\n\tzipcode: '',\n\tlat: '',\n\tlng: '',\n\tcity: {},\n}\n\nexport default (props) => {\n\tconst [addVenue] = useMutation(CREATE_VENUE_MUTATION, {\n\t\tonError(error) {\n\t\t\tconsole.log('error', error)\n\t\t},\n\t\tonCompleted(data) {\n\t\t\tconsole.log('data', data)\n\t\t},\n\t\trefetchQueries: [{\n\t\t\tquery: GET_VENUES_FOR_CURRENT_USER,\n\t\t}],\n\t})\n\n\tconst [newVenue, setNewVenue] = useState({ ...venueStub })\n\tconst [userActionText, setUserActionText] = useState(USER_ACTION_TEXT)\n\n\tconst onCitySelected = city => {\n\t\tconsole.log('city selected:', city)\n\t\tsetNewVenue({ ...newVenue, city: { id: city.value } })\n\t}\n\n\tconst onVenueTypeSelected = venueTypeId => {\n\t\tconsole.log('venueTypeId selected:', venueTypeId)\n\t\tsetNewVenue({ ...newVenue, type: { id: venueTypeId } })\n\t}\n\n\tconst handleChange = name => event => {\n\t\tconsole.log(name, event.target.value)\n\t\tsetNewVenue({ ...newVenue, [name]: event.target.value })\n\t}\n\n\tconst onSubmit = () => {\n\t\tif(validateVenue(newVenue)) {\n\t\t\taddVenue({\n\t\t\t\tvariables: {\n\t\t\t\t\tname: newVenue.name,\n\t\t\t\t\ttypeId: newVenue.type.id,\n\t\t\t\t\tstreetAddress: newVenue.streetAddress,\n\t\t\t\t\tzipcode: parseInt(newVenue.zipcode),\n\t\t\t\t\tcityId: newVenue.city.id,\n\t\t\t\t},\n\t\t\t}).then(response => {\n\t\t\t\tconsole.log('response', response)\n\n\t\t\t\tsetNewVenue({ ...venueStub })\n\n\t\t\t\tprops.toggleDialog()\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tsetUserActionText(USER_ACTION_TEXT_ERROR)\n\t\t}\n\t}\n\n\treturn (\n\t\t<Dialog\n\t\t\topen={props.open}\n\t\t\tonClose={props.toggleDialog}\n\t\t\tfullScreen={true}\n\t\t\taria-labelledby=\"form-dialog-title\">\n\t\t\t<AppBar style={style.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" onClick={props.toggleDialog} aria-label=\"close\">\n\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<DialogTitle style={style.title}>Add New Destination</DialogTitle>\n\t\t\t<DialogContent style={style.body}>\n\t\t\t\t<DialogContentText>\n\t\t\t\t\t{userActionText}\n\t\t\t\t</DialogContentText>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"venue-name\"\n\t\t\t\t\tlabel=\"Venue name\"\n\t\t\t\t\tvalue={newVenue.name}\n\t\t\t\t\tonChange={handleChange('name')}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tstyle={style.input}\n\t\t\t\t/>\n\t\t\t\t<br/>\n\t\t\t\t<VenueTypeFormField onVenueTypeSelected={onVenueTypeSelected}/>\n\t\t\t\t<br/>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"venue-street-address\"\n\t\t\t\t\tname=\"street-address\"\n\t\t\t\t\tlabel=\"Street address\"\n\t\t\t\t\tvalue={newVenue.streetAddress}\n\t\t\t\t\tonChange={handleChange('streetAddress')}\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tautoComplete=\"shipping street-address\"\n\t\t\t\t\tstyle={style.input}\n\t\t\t\t/>\n\t\t\t\t<CityFormField onCitySelected={onCitySelected}/>\n\n\t\t\t\t<NumberFormat customInput={TextField}\n\t\t\t\t\t\t\t\t\t\t\tid=\"venue-zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Zipcode\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={newVenue.zipcode}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange('zipcode')}\n\t\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={style.input}\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"postal-code\"\n\t\t\t\t\t\t\t\t\t\t\tformat=\"#####\"/>\n\t\t\t\t<div>\n\t\t\t\t\t<Button color='primary' onClick={onSubmit}>\n\t\t\t\t\t\tCreate venue\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t)\n}\n","export const validateVenue = ({ name, type, streetAddress, city, zipcode }) => {\n\tlet valid = {\n\t\tname: false,\n\t\ttype: false,\n\t\tstreetAddress: false,\n\t\tcity: false,\n\t\tzipcode: false\n\t}\n\n\tif (name && name.length >= 2) {\n\t\tvalid.name = true\n\t}\n\n\tif(type && type.id) {\n\t\tvalid.type = true\n\t}\n\n\tif(streetAddress && streetAddress.length >= 2) {\n\t\tvalid.streetAddress = true\n\t}\n\n\tif(city && city.id) {\n\t\tvalid.city = true\n\t}\n\n\tif(zipcode && !isNaN(parseInt(zipcode))) {\n\t\tvalid.zipcode = true\n\t}\n\n\treturn (Object.values(valid).indexOf(false) === -1)\n}","import React from 'react'\nimport AppBar from \"@material-ui/core/AppBar/AppBar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport { withStyles } from \"@material-ui/core\"\n\nconst styles = {\n\tappBar: {\n\t\tboxShadow: \"none\",\n\t\tfloat: \"left\",\n\t\twidth: '300px',\n\t},\n\ttabIndicator: {\n\t\tbackgroundColor: '#ffffff',\n\t},\n}\n\nconst VenueTypeTabs = ({ classes, venues, venueTypeFilter, onSetVenueTypeFilter }) => {\n\tconst handleVenueTypeClick = (e, value) => {\n\t\tonSetVenueTypeFilter(value)\n\t}\n\n\tconst getVenueTypes = venues => {\n\t\tlet results = {}\n\n\t\tfor (let x = 0; x < venues.length; x++) {\n\t\t\tif ((venues[x].venueTypes && venues[x].venueTypes.length)) {\n\t\t\t\tif (results[venues[x].venueTypes[0].name]) {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name].venues.push(venues[x])\n\t\t\t\t} else {\n\t\t\t\t\tresults[venues[x].venueTypes[0].name] = {\n\t\t\t\t\t\ttype: {\n\t\t\t\t\t\t\tid: venues[x].venueTypes[0].id,\n\t\t\t\t\t\t\tname: venues[x].venueTypes[0].name,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvenues: [venues[x]],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn Object.keys(results)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AppBar position=\"static\" className={classes.appBar}>\n\t\t\t\t<Tabs value={venueTypeFilter}\n\t\t\t\t\t\t\tonChange={handleVenueTypeClick}\n\t\t\t\t\t\t\tclasses={{ indicator: classes.tabIndicator }}\n\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\t\tscrollButtons=\"auto\">\n\t\t\t\t\t<Tab label='all' value='all'/>\n\t\t\t\t\t{getVenueTypes(venues).sort().map((type, index) => (\n\t\t\t\t\t\t<Tab label={type} value={type} key={index}/>\n\t\t\t\t\t))}\n\t\t\t\t</Tabs>\n\t\t\t</AppBar>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default withStyles(styles)(VenueTypeTabs)","import React, { useState } from 'react'\nimport { Query } from \"react-apollo\"\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { Add } from \"@material-ui/icons\"\nimport { GET_VENUES_FOR_CURRENT_USER } from '../graphql/venueQueries'\n\nimport VenueListItem from './dashboard/venueListItem'\nimport AddVenueDialog from './dashboard/addVenueDialog'\nimport VenueTypeTabs from './dashboard/venueTypeTabs'\n\nconst pageStyle = {\n\tsectionHeader: {\n\t\tmarginBottom: '15px',\n\t\tdisplay: 'flex',\n\t},\n\tsectionHeaderTitle: {\n\t\tflexGrow: 2,\n\t},\n\tvenueList: {\n\t\tmarginLeft: '320px'\n\t}\n}\n\nexport default () => {\n\tconst [dialogOpen, setDialogOpen] = useState(false)\n\tconst [venueTypeFilter, setVenueTypeFilter] = useState('all')\n\n\tconst toggleDialog = () => {\n\t\tsetDialogOpen(!dialogOpen)\n\t}\n\n\treturn (\n\t\t<Query query={GET_VENUES_FOR_CURRENT_USER}>\n\t\t\t{({ loading, error, data }) => {\n\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\tconst venues = data.me.venues.sort((a, b) => {\n\t\t\t\t\tif (a.name > b.name) return 1\n\t\t\t\t\tif (b.name > a.name) return -1\n\t\t\t\t\treturn 0\n\t\t\t\t})\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className='mainContainer'>\n\t\t\t\t\t\t<div className='mainContent'>\n\t\t\t\t\t\t\t<div style={pageStyle.sectionHeader}>\n\t\t\t\t\t\t\t\t<Typography variant='h5' style={pageStyle.sectionHeaderTitle}>My destinations</Typography>\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" onClick={toggleDialog}>\n\t\t\t\t\t\t\t\t\t<Add/>\n\t\t\t\t\t\t\t\t\tAdd Destination\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<AddVenueDialog\n\t\t\t\t\t\t\t\t\topen={dialogOpen}\n\t\t\t\t\t\t\t\t\ttoggleDialog={toggleDialog}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<VenueTypeTabs\n\t\t\t\t\t\t\t\tvenues={venues}\n\t\t\t\t\t\t\t\tonSetVenueTypeFilter={setVenueTypeFilter}\n\t\t\t\t\t\t\t\tvenueTypeFilter={venueTypeFilter}></VenueTypeTabs>\n\t\t\t\t\t\t\t<div style={pageStyle.venueList}>\n\t\t\t\t\t\t\t\t{venues\n\t\t\t\t\t\t\t\t\t.filter(venue => (venueTypeFilter === 'all' || venue.venueTypes[0].name === venueTypeFilter ))\n\t\t\t\t\t\t\t\t\t.map(venue => (\n\t\t\t\t\t\t\t\t\t<VenueListItem key={venue.id} venue={venue}/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Query>\n\t)\n}","import React from \"react\"\nimport Typography from '@material-ui/core/Typography'\nimport { headerStyles } from '../../utils/styleUtils'\nimport { venueHeaderImage } from '../../utils/venueUtils'\n\nexport default (props) => {\n\tconst { venue } = props\n\tconst headerStyle = headerStyles(venueHeaderImage(venue), '300px')\n\n\treturn (\n\t\t<div style={headerStyle.container}>\n\t\t\t<Typography variant=\"h2\" style={headerStyle.headerText}>\n\t\t\t\t<strong>{venue.name}</strong>\n\t\t\t</Typography>\n\t\t</div>)\n}","import React, { useState, useEffect } from 'react'\nimport { withApollo } from \"react-apollo\"\nimport { GET_SIMILAR_VENUES_IN_RADIUS } from \"../../graphql/venueQueries\"\n\nconst SimilarVenues = ({ client, venue }) => {\n\tconst [similarVenues, setSimilarVenues] = useState([])\n\tuseEffect(\n\t\t() => {\n\t\t\tclient.query({\n\t\t\t\tquery: GET_SIMILAR_VENUES_IN_RADIUS,\n\t\t\t\tvariables: { venueId: venue.id, limit: 5, radius: 10 },\n\t\t\t})\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tsetSimilarVenues(data.similarVenues)\n\t\t\t\t})\n\t\t},\n\t\t[venue, client],\n\t)\n\n\treturn <div>\n\t\t<h3>Similar places near by</h3>\n\t\t<div>\n\t\t\t{similarVenues && similarVenues.map(venue => (\n\t\t\t\t<div key={venue.id}>{venue.name}</div>\n\t\t\t))}\n\t\t</div>\n\t</div>\n}\n\nexport default withApollo(SimilarVenues)","import React from 'react'\nimport { Query } from \"react-apollo\"\nimport Typography from '@material-ui/core/Typography'\nimport { GET_VENUE_BY_SLUG } from '../graphql/venueQueries'\n\nimport VenueHeader from './venue/header'\nimport SimilarVenues from './venue/similarVenues'\n\nconst pageStyle = {\n\tsectionHeader: {\n\t\tmarginBottom: '15px',\n\t},\n\tcolumnWrapper: {\n\t\tdisplay: 'flex'\n\t},\n\tmainColumn: {\n\t\tflexGrow: 3\n\t},\n\tsideColumm: {\n\t\tflexGrow: 1\n\t}\n}\n\n\nexport default ({ match }) => {\n\tconst venueSlug = match.params.venueSlug\n\n\tif (!venueSlug) {\n\t\treturn (<div>Venue not found.</div>)\n\t} else {\n\t\treturn (\n\t\t\t<Query query={GET_VENUE_BY_SLUG} variables={{ venueSlug }}>\n\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\tif (loading) return \"Loading...\"\n\t\t\t\t\tif (error) return `Error! ${error.message}`\n\n\t\t\t\t\tconst venue = data.venueBySlug\n\t\t\t\t\tconsole.log('data', data)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<VenueHeader venue={venue}/>\n\t\t\t\t\t\t\t<div className='mainContainer'>\n\t\t\t\t\t\t\t\t<div className='mainContent'>\n\t\t\t\t\t\t\t\t\t<Typography variant='h5' style={pageStyle.sectionHeader}>{venue.name}</Typography>\n\t\t\t\t\t\t\t\t\t<div style={pageStyle.columnWrapper}>\n\t\t\t\t\t\t\t\t\t\t<div style={pageStyle.mainColumn}>\n\t\t\t\t\t\t\t\t\t\t\tmain\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style={pageStyle.sideColumm}>\n\t\t\t\t\t\t\t\t\t\t\t<SimilarVenues venue={venue} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t)\n\t}\n}","import { createMuiTheme } from '@material-ui/core/styles'\nimport blue from '@material-ui/core/colors/blue'\n\nexport default createMuiTheme({\n\t\tpalette: {\n\t\t\tprimary: {\n\t\t\t\tmain: blue[500],\n\t\t\t},\n\t\t\tbackground: { default: '#ffffff'},\n\t\t},\n\t\ttypography: {\n\t\t\tuseNextVariants: true,\n\t\t},\n\t},\n)","import gql from \"graphql-tag\"\n\nexport const CURRENT_USER_QUERY = gql`\n\tquery {\n\t\t\tcurrentUser @client {\n\t\t\t\t\tid\n\t\t\t\t\tfirstName\n\t\t\t\t\tlastName\n\t\t\t}\n\t}\n`","import { AUTH_TOKEN, USER_INFO } from \"../constants\"\nimport { graphql } from \"react-apollo\"\nimport { compose } from \"recompose\"\nimport { CURRENT_USER_QUERY } from \"../graphql/userQueries\"\n\nexport const isUserLoggedIn = () => !!localStorage.getItem(AUTH_TOKEN)\n\nexport const logoutUser = () => {\n\tlocalStorage.removeItem(AUTH_TOKEN)\n\tlocalStorage.removeItem(USER_INFO)\n}\n\nexport const setUserInfo = (token, user) => {\n\tlocalStorage.setItem(AUTH_TOKEN, token)\n\tlocalStorage.setItem(USER_INFO, JSON.stringify(user))\n}\n\nexport const getUserInfoFromStorage = () => {\n\tconst userInfo = localStorage.getItem(USER_INFO)\n\n\tif (userInfo) {\n\t\treturn JSON.parse(userInfo)\n\t} else {\n\t\treturn {\n\t\t\t__typename: 'User',\n\t\t\tid: null,\n\t\t\tfirstName: null,\n\t\t\tlastName: null,\n\t\t\temail: null,\n\t\t}\n\t}\n}\n\nexport const withCurrentUser = (WrappedComponent) => {\n\treturn compose(\n\t\tgraphql(CURRENT_USER_QUERY, {\n\t\t\tprops: ({ data: { currentUser } }) => ({\n\t\t\t\tcurrentUser,\n\t\t\t}),\n\t\t}),\n\t)(WrappedComponent)\n}","export const AUTH_TOKEN = 'auth-token'\nexport const USER_INFO = 'user-info'","import gql from \"graphql-tag\"\n\nexport const SIGNUP_MUTATION = gql`\n    mutation SignupMutation($email: String!, $password: String!, $firstName: String!, $lastName: String!) {\n        signup(email: $email, password: $password, firstName: $firstName, lastName: $lastName) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation LoginMutation($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token,\n            user {\n                id,\n                firstName,\n                lastName,\n                email\n            }\n        }\n    }\n`","import React, { Component } from 'react'\nimport { withRouter } from 'react-router'\n\nimport { setUserInfo } from '../../utils/userUtils'\nimport Routes from \"../../routes\"\nimport { Mutation } from 'react-apollo'\nimport { SIGNUP_MUTATION, LOGIN_MUTATION } from \"../../graphql/userMutations\"\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nconst styles = {\n\tdialogMainContent: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\tflexDirection: 'column',\n\t},\n\tdialogMainError: {\n\t\ttextAlign: 'center',\n\t},\n}\n\nclass LoginDialog extends Component {\n\tstate = {\n\t\tlogin: true, // switch between Login and SignUp\n\t\temail: '',\n\t\tpassword: '',\n\t\tfirstName: '',\n\t\tlastName: '',\n\t\terrorMessage: null,\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.open !== this.props.open) {\n\t\t\tthis.setState({ errorMessage: null })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { login, email, password, firstName, lastName, errorMessage } = this.state\n\t\tconst { classes } = this.props\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={this.props.open}\n\t\t\t\tonClose={this.props.toggleDialog}\n\t\t\t\tmaxWidth='sm' fullWidth={true}\n\t\t\t\taria-labelledby=\"form-dialog-title\">\n\t\t\t\t<DialogTitle id=\"login-dialog-title\">{login ? 'Login' : 'Sign Up'}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t{errorMessage && (\n\t\t\t\t\t\t<DialogContentText className={classes.dialogMainError}>{errorMessage}</DialogContentText>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className={classes.dialogMainContent}>\n\t\t\t\t\t\t{!login && (\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\tlabel=\"First name\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\tonChange={e => this.setState({ firstName: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\tlabel=\"Last name\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\tonChange={e => this.setState({ lastName: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={e => this.setState({ email: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\terror={!!errorMessage}\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\tonChange={e => this.setState({ password: e.target.value })}\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => this.setState({ login: !login, errorMessage: null })}\n\t\t\t\t\t\tcolor=\"primary\" style={{ marginRight: 'auto' }}>\n\t\t\t\t\t\t{login\n\t\t\t\t\t\t\t? 'need to create an account?'\n\t\t\t\t\t\t\t: 'already have an account?'}\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button onClick={this.props.toggleDialog} color=\"primary\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Mutation\n\t\t\t\t\t\tmutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n\t\t\t\t\t\tvariables={{ email, password, firstName, lastName }}\n\t\t\t\t\t\tupdate={(cache, { data }) => this._update(cache, (login ? data.login : data.signup))}\n\t\t\t\t\t\tonCompleted={data => this._confirm(data)}\n\t\t\t\t\t\tonError={error => this._error(error)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{mutation => (\n\t\t\t\t\t\t\t<Button color='primary' onClick={mutation}>\n\t\t\t\t\t\t\t\t{login ? 'login' : 'create account'}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Mutation>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t)\n\t}\n\n\t_update = async (cache, info) => {\n\t\tcache.writeData({\n\t\t\tdata: {\n\t\t\t\tcurrentUser: {\n\t\t\t\t\t...info.user,\n\t\t\t\t\ttoken: info.token,\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t}\n\n\t_confirm = async data => {\n\t\tthis.state.error = null\n\n\t\tconst { token, user } = this.state.login ? data.login : data.signup\n\t\tthis._saveUserData(token, user)\n\n\t\tdocument.location = Routes.dashboard\n\t}\n\n\t_saveUserData = (token, user) => {\n\t\tsetUserInfo(token, user)\n\t}\n\n\t_error = async ({ graphQLErrors }) => {\n\t\tif (this.state.login && graphQLErrors && graphQLErrors[0] && graphQLErrors[0].message) {\n\t\t\tthis.setState({ errorMessage: graphQLErrors[0].message })\n\t\t} else if (graphQLErrors && graphQLErrors[0] && graphQLErrors[0].extensions.exception.errors[0].message) {\n\t\t\tthis.setState({ errorMessage: graphQLErrors[0].extensions.exception.errors[0].message })\n\t\t}\n\t}\n}\n\nexport default withRouter(withStyles(styles)(LoginDialog))","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button'\nimport { withRouter } from 'react-router'\nimport { isUserLoggedIn, withCurrentUser } from \"../../utils/userUtils\"\nimport LoginDialog from './loginDialog'\nimport Typography from '@material-ui/core/Typography'\n\nclass LoginButton extends Component {\n\tstate = {\n\t\tdialogOpen: false,\n\t}\n\n\ttoggleDialog = () => {\n\t\tthis.setState({ dialogOpen: !this.state.dialogOpen })\n\t}\n\n\trenderUserInfo = (currentUser) => {\n\t\tif (currentUser && currentUser.id) {\n\t\t\treturn `Welcome, ${currentUser.firstName}`\n\t\t} else {\n\t\t\treturn ''\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { currentUser } = this.props\n\n\t\treturn (isUserLoggedIn() ? (\n\t\t\t<Typography\n\t\t\t\tvariant=\"button\"\n\t\t\t\tcolor=\"inherit\" className={this.props.className}>{this.renderUserInfo(currentUser)}</Typography>\n\t\t) : (\n\t\t\t<span>\n\t\t\t<Button\n\t\t\t\tonClick={this.toggleDialog}\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tcolor=\"inherit\">\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t\t<LoginDialog\n\t\t\t\topen={this.state.dialogOpen}\n\t\t\t\ttoggleDialog={this.toggleDialog}/>\n\t\t\t</span>\n\t\t))\n\t}\n}\n\nexport default withCurrentUser(withRouter(LoginButton))","import React, { Component } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport LoginButton from '../components/shared/loginButton'\nimport { logoutUser, isUserLoggedIn } from \"../utils/userUtils\"\nimport { withRouter } from \"react-router\"\n\nimport Routes from '../routes'\n\nclass ButtonAppBar extends Component {\n\tstate = {\n\t\tanchorEl: null,\n\t}\n\n\ttoggleMenu = (event) => {\n\t\tthis.state.anchorEl ? this.setState({ anchorEl: null }) : this.setState({ anchorEl: event.currentTarget })\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props\n\n\t\treturn (\n\t\t\t<div className={classes.root}>\n\t\t\t\t<AppBar position=\"fixed\" style={{ background: 'transparent', boxShadow: 'none' }}>\n\t\t\t\t\t<Toolbar variant=\"dense\" className={classes.container}>\n\t\t\t\t\t\t<Typography className={classes.logoText} variant=\"button\" color=\"inherit\">KidTrip</Typography>\n\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" className={classes.grow}></Typography>\n\t\t\t\t\t\t<LoginButton className={classes.loginButton}/>\n\n\t\t\t\t\t\t{isUserLoggedIn() && (\n\t\t\t\t\t\t\t<span className={classes.menuWrapper}>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tonClick={this.toggleMenu}\n\t\t\t\t\t\t\t\tclassName={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n\t\t\t\t\t\t\t\t<MenuIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\t\t\t\tanchorEl={this.state.anchorEl}\n\t\t\t\t\t\t\t\topen={Boolean(this.state.anchorEl)}\n\t\t\t\t\t\t\t\tonClose={this.toggleMenu}>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink} to={Routes.home} onClick={this.toggleMenu}>\n\t\t\t\t\t\t\t\t\tHome\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tcomponent={RouterLink} to={Routes.dashboard} onClick={this.toggleMenu}>\n\t\t\t\t\t\t\t\t\tDashboard\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={this.toggleMenu}>My account</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem onClick={() => {\n\t\t\t\t\t\t\t\t\tlogoutUser()\n\t\t\t\t\t\t\t\t\tthis.props.history.push(`/`)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withRouter(ButtonAppBar)","import React from 'react'\nimport { isHomepage } from '../utils/routeUtils'\nimport { withStyles } from '@material-ui/core/styles'\nimport { withRouter } from 'react-router'\nimport blueGrey from '@material-ui/core/colors/blueGrey'\n\nimport AppBar from './appBar'\n\nconst styles = {\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\tmenuButton: {\n\t\tmarginLeft: -12,\n\t\tmarginRight: 20,\n\t},\n\tmenuWrapper: {\n\t\tmarginLeft: 15\n\t}\n}\n\nconst nonHomepageStyles = {\n\t...styles,\n\tcontainer: {\n\t\tborderBottom: '1px solid',\n\t\tborderBottomColor: blueGrey[100],\n\t\tbackgroundColor: 'white'\n\t},\n\tgrow: {\n\t\t...styles.grow,\n\t\tcolor: blueGrey[500],\n\t},\n\tmenuButton: {\n\t\t...styles.menuButton,\n\t\tcolor: blueGrey[500],\n\t},\n\tloginButton: {\n\t\tcolor: blueGrey[500],\n\t},\n\tlogoText: {\n\t\tcolor: blueGrey[500],\n\t},\n}\n\nconst AppBarContainer = (props) => {\n\tconst currentStyles = isHomepage(props.location) ? styles : nonHomepageStyles\n\tconst AppBarWithStyles = withStyles(currentStyles)(AppBar)\n\treturn (<AppBarWithStyles/>)\n}\n\nexport default withRouter(AppBarContainer)","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport Routes from \"./routes\";\nimport { isHomepage } from \"./utils/routeUtils\";\n\nimport HomePage from \"./components/homePage\";\nimport DashboardPage from \"./components/dashboardPage\";\nimport VenuePage from \"./components/venuePage\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { MuiThemeProvider, withStyles } from \"@material-ui/core/styles\";\nimport theme from \"./theme\";\nimport AppBar from \"./layout/appBarContainer\";\n\nconst styles = {\n  \"@global\": {\n    body: {\n      fontFamily: \"Roboto, Helvetica, Arial, sans-serif\"\n    },\n    \".mainContainer\": {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    \".mainContent\": {\n      maxWidth: \"1200px\",\n      flexGrow: \"1\",\n      margin: \"50px\"\n    }\n  },\n  appBarSpacer: {\n    height: \"49px\"\n  }\n};\n\nclass App extends Component {\n  render() {\n    const { classes, location } = this.props;\n\n    return (\n      <MuiThemeProvider theme={theme}>\n        <div>\n          <CssBaseline />\n          <AppBar />\n          {!isHomepage(location) && (\n            <div className={classes.appBarSpacer}></div>\n          )}\n          <Switch>\n            <Route exact path={Routes.home} component={HomePage} />\n            <Route exact path={Routes.dashboard} component={DashboardPage} />\n            <Route path={Routes.venue} component={VenuePage} />\n          </Switch>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { ApolloLink } from \"apollo-link\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { withClientState } from \"apollo-link-state\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"typeface-roboto\";\nimport { getUserInfoFromStorage } from \"./utils/userUtils\";\nimport { AUTH_TOKEN } from \"./constants\";\n\nconst SERVER_HOST = process.env.REACT_APP_SERVER_HOST;\n\nconst cache = new InMemoryCache();\n\nconst defaultState = {\n  currentUser: { ...getUserInfoFromStorage() }\n};\n\nconst stateLink = withClientState({\n  cache,\n  defaults: defaultState,\n  resolvers: {\n    Mutation: {\n      updateUserInfo: (_, { id, firstName, lastName, email }, { cache }) => {\n        const data = {\n          user: {\n            __typename: \"User\",\n            id,\n            firstName,\n            lastName,\n            email\n          }\n        };\n        cache.writeData({ data });\n        return null;\n      }\n    }\n  }\n});\n\nconst token = localStorage.getItem(AUTH_TOKEN);\nconst httpLink = new HttpLink({\n  uri: SERVER_HOST, // || 'http://localhost:4000',\n  credentials: \"same-origin\",\n  headers: {\n    authorization: token ? `Bearer ${token}` : \"\"\n  }\n});\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.map(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          )\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n    stateLink,\n    httpLink\n  ]),\n  cache: new InMemoryCache(),\n  resolvers: {}\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}